{"documentCount":252,"nextId":252,"documentIds":{"0":"docs/pages/docs/abi/decoding.mdx#abi-decoding","1":"docs/pages/docs/abi/decoding.mdx#decode-function-call","2":"docs/pages/docs/abi/decoding.mdx#decode-constructor","3":"docs/pages/docs/abi/decoding.mdx#decode-event","4":"docs/pages/docs/abi/decoding.mdx#decode-struct","5":"docs/pages/docs/abi/decoding.mdx#decode-array","6":"docs/pages/docs/abi/decoding.mdx#example-usage","7":"docs/pages/docs/abi/encoding.mdx#abi-encoding","8":"docs/pages/docs/abi/encoding.mdx#encode-function-call","9":"docs/pages/docs/abi/encoding.mdx#encode-constructor","10":"docs/pages/docs/abi/encoding.mdx#encode-event","11":"docs/pages/docs/abi/encoding.mdx#encode-struct","12":"docs/pages/docs/abi/encoding.mdx#encode-array","13":"docs/pages/docs/abi/encoding.mdx#example-usage","14":"docs/pages/docs/abi/#abi-package","15":"docs/pages/docs/abi/#overview","16":"docs/pages/docs/abi/#available-submodules","17":"docs/pages/docs/abi/#getting-started","18":"docs/pages/docs/abi/#version","19":"docs/pages/docs/account/account-management.mdx#account-management","20":"docs/pages/docs/account/account-management.mdx#account-structure","21":"docs/pages/docs/account/account-management.mdx#creating-an-account","22":"docs/pages/docs/account/account-management.mdx#account-methods","23":"docs/pages/docs/account/account-management.mdx#sign","24":"docs/pages/docs/account/account-management.mdx#verify","25":"docs/pages/docs/account/account-management.mdx#getaddress","26":"docs/pages/docs/account/account-management.mdx#example-usage","27":"docs/pages/docs/account/account-utilities.mdx#account-utilities","28":"docs/pages/docs/account/account-utilities.mdx#utility-functions","29":"docs/pages/docs/account/account-utilities.mdx#address-validation","30":"docs/pages/docs/account/account-utilities.mdx#public-key-generation","31":"docs/pages/docs/account/account-utilities.mdx#address-generation","32":"docs/pages/docs/account/account-utilities.mdx#chain-id-validation","33":"docs/pages/docs/account/account-utilities.mdx#example-usage","34":"docs/pages/docs/account/account-utilities.mdx#common-utilities","35":"docs/pages/docs/account/account-utilities.mdx#hex-encodingdecoding","36":"docs/pages/docs/account/account-utilities.mdx#field-element-conversion","37":"docs/pages/docs/account/account-utilities.mdx#error-handling","38":"docs/pages/docs/account/#account-package","39":"docs/pages/docs/account/#overview","40":"docs/pages/docs/account/#available-submodules","41":"docs/pages/docs/account/#getting-started","42":"docs/pages/docs/account/#version","43":"docs/pages/docs/account/signature-verification.mdx#signature-verification","44":"docs/pages/docs/account/signature-verification.mdx#signature-types","45":"docs/pages/docs/account/signature-verification.mdx#verification-methods","46":"docs/pages/docs/account/signature-verification.mdx#verify-ecdsa-signature","47":"docs/pages/docs/account/signature-verification.mdx#verify-pedersen-signature","48":"docs/pages/docs/account/signature-verification.mdx#verify-stark-signature","49":"docs/pages/docs/account/signature-verification.mdx#example-usage","50":"docs/pages/docs/account/signature-verification.mdx#signature-format","51":"docs/pages/docs/account/transaction-handling.mdx#transaction-handling","52":"docs/pages/docs/account/transaction-handling.mdx#transaction-types","53":"docs/pages/docs/account/transaction-handling.mdx#creating-transactions","54":"docs/pages/docs/account/transaction-handling.mdx#invoke-transaction","55":"docs/pages/docs/account/transaction-handling.mdx#deploy-transaction","56":"docs/pages/docs/account/transaction-handling.mdx#transaction-methods","57":"docs/pages/docs/account/transaction-handling.mdx#sign-transaction","58":"docs/pages/docs/account/transaction-handling.mdx#send-transaction","59":"docs/pages/docs/account/transaction-handling.mdx#wait-for-transaction","60":"docs/pages/docs/account/transaction-handling.mdx#example-usage","61":"docs/pages/docs/curves/#curves-package","62":"docs/pages/docs/curves/#overview","63":"docs/pages/docs/curves/#available-submodules","64":"docs/pages/docs/curves/#getting-started","65":"docs/pages/docs/curves/#version","66":"docs/pages/docs/curves/operations.mdx#curve-operations","67":"docs/pages/docs/curves/operations.mdx#point-operations","68":"docs/pages/docs/curves/operations.mdx#point-addition","69":"docs/pages/docs/curves/operations.mdx#point-multiplication","70":"docs/pages/docs/curves/operations.mdx#point-doubling","71":"docs/pages/docs/curves/operations.mdx#point-negation","72":"docs/pages/docs/curves/operations.mdx#field-operations","73":"docs/pages/docs/curves/operations.mdx#field-addition","74":"docs/pages/docs/curves/operations.mdx#field-multiplication","75":"docs/pages/docs/curves/operations.mdx#field-division","76":"docs/pages/docs/curves/operations.mdx#field-inversion","77":"docs/pages/docs/curves/operations.mdx#curve-operations-1","78":"docs/pages/docs/curves/operations.mdx#curve-order","79":"docs/pages/docs/curves/operations.mdx#curve-generator","80":"docs/pages/docs/curves/operations.mdx#curve-is-on-curve","81":"docs/pages/docs/curves/operations.mdx#curve-is-valid","82":"docs/pages/docs/curves/operations.mdx#example-usage","83":"docs/pages/docs/curves/types.mdx#curve-types","84":"docs/pages/docs/curves/types.mdx#curve-types-1","85":"docs/pages/docs/curves/types.mdx#stark-curve","86":"docs/pages/docs/curves/types.mdx#creating-a-stark-curve","87":"docs/pages/docs/curves/types.mdx#stark-curve-operations","88":"docs/pages/docs/curves/types.mdx#pedersen-curve","89":"docs/pages/docs/curves/types.mdx#creating-a-pedersen-curve","90":"docs/pages/docs/curves/types.mdx#pedersen-curve-operations","91":"docs/pages/docs/curves/types.mdx#ecdsa-curve","92":"docs/pages/docs/curves/types.mdx#creating-an-ecdsa-curve","93":"docs/pages/docs/curves/types.mdx#ecdsa-curve-operations","94":"docs/pages/docs/curves/types.mdx#example-usage","95":"docs/pages/docs/introduction/contributing.mdx#contributing-to-starknetgo","96":"docs/pages/docs/introduction/contributing.mdx#code-of-conduct","97":"docs/pages/docs/introduction/contributing.mdx#how-to-contribute","98":"docs/pages/docs/introduction/contributing.mdx#reporting-bugs","99":"docs/pages/docs/introduction/contributing.mdx#suggesting-enhancements","100":"docs/pages/docs/introduction/contributing.mdx#improving-documentation","101":"docs/pages/docs/introduction/contributing.mdx#pull-requests","102":"docs/pages/docs/introduction/contributing.mdx#development-setup","103":"docs/pages/docs/introduction/contributing.mdx#prerequisites","104":"docs/pages/docs/introduction/contributing.mdx#setting-up-the-development-environment","105":"docs/pages/docs/introduction/contributing.mdx#running-tests","106":"docs/pages/docs/introduction/getting-started.mdx#get-started","107":"docs/pages/docs/introduction/getting-started.mdx#prerequisites","108":"docs/pages/docs/introduction/getting-started.mdx#creating-your-first-starknetgo-application","109":"docs/pages/docs/introduction/getting-started.mdx#step-1-set-up-your-project","110":"docs/pages/docs/introduction/getting-started.mdx#step-2-install-dependencies","111":"docs/pages/docs/introduction/getting-started.mdx#step-3-create-the-main-application","112":"docs/pages/docs/introduction/getting-started.mdx#step-4-run-the-application","113":"docs/pages/docs/introduction/getting-started.mdx#next-steps","114":"docs/pages/docs/introduction/getting-started.mdx#troubleshooting","115":"docs/pages/docs/introduction/installation.mdx#installation","116":"docs/pages/docs/introduction/installation.mdx#prerequisites","117":"docs/pages/docs/introduction/installation.mdx#installing-the-package","118":"docs/pages/docs/introduction/why-starknet-go.mdx#why-starknetgo","119":"docs/pages/docs/introduction/why-starknet-go.mdx#features","120":"docs/pages/docs/introduction/why-starknet-go.mdx#use-cases","121":"docs/pages/docs/introduction/why-starknet-go.mdx#getting-started","122":"docs/pages/docs/introduction/why-starknet-go.mdx#example-applications","123":"docs/pages/docs/introduction/why-starknet-go.mdx#community","124":"docs/pages/docs/introduction/why-starknet-go.mdx#contributing","125":"docs/pages/docs/rpc/examples.mdx#rpc-examples","126":"docs/pages/docs/rpc/examples.mdx#basic-examples","127":"docs/pages/docs/rpc/examples.mdx#getting-a-block","128":"docs/pages/docs/rpc/examples.mdx#getting-a-transaction","129":"docs/pages/docs/rpc/examples.mdx#advanced-examples","130":"docs/pages/docs/rpc/examples.mdx#sending-a-transaction","131":"docs/pages/docs/rpc/examples.mdx#calling-a-contract","132":"docs/pages/docs/rpc/examples.mdx#getting-contract-storage","133":"docs/pages/docs/rpc/#rpc-package","134":"docs/pages/docs/rpc/#overview","135":"docs/pages/docs/rpc/#available-submodules","136":"docs/pages/docs/rpc/#getting-started","137":"docs/pages/docs/rpc/#version","138":"docs/pages/docs/rpc/methods.mdx#rpc-methods","139":"docs/pages/docs/rpc/methods.mdx#block-methods","140":"docs/pages/docs/rpc/methods.mdx#get-block-by-number","141":"docs/pages/docs/rpc/methods.mdx#get-block-by-hash","142":"docs/pages/docs/rpc/methods.mdx#get-latest-block","143":"docs/pages/docs/rpc/methods.mdx#transaction-methods","144":"docs/pages/docs/rpc/methods.mdx#get-transaction-by-hash","145":"docs/pages/docs/rpc/methods.mdx#get-transaction-receipt","146":"docs/pages/docs/rpc/methods.mdx#send-transaction","147":"docs/pages/docs/rpc/methods.mdx#contract-methods","148":"docs/pages/docs/rpc/methods.mdx#get-contract-code","149":"docs/pages/docs/rpc/methods.mdx#get-contract-storage","150":"docs/pages/docs/rpc/methods.mdx#call-contract","151":"docs/pages/docs/rpc/methods.mdx#example-usage","152":"docs/pages/docs/devnet/#devnet-package","153":"docs/pages/docs/devnet/#overview","154":"docs/pages/docs/devnet/#available-submodules","155":"docs/pages/docs/devnet/#getting-started","156":"docs/pages/docs/devnet/#version","157":"docs/pages/docs/devnet/setup.mdx#devnet-setup","158":"docs/pages/docs/devnet/setup.mdx#devnet-configuration","159":"docs/pages/docs/devnet/setup.mdx#creating-a-devnet","160":"docs/pages/docs/devnet/setup.mdx#configuration-options","161":"docs/pages/docs/devnet/setup.mdx#network-name","162":"docs/pages/docs/devnet/setup.mdx#network-id","163":"docs/pages/docs/devnet/setup.mdx#chain-id","164":"docs/pages/docs/devnet/setup.mdx#genesis-block","165":"docs/pages/docs/devnet/setup.mdx#genesis-accounts","166":"docs/pages/docs/devnet/setup.mdx#genesis-contracts","167":"docs/pages/docs/devnet/setup.mdx#example-usage","168":"docs/pages/docs/devnet/usage.mdx#devnet-usage","169":"docs/pages/docs/devnet/usage.mdx#devnet-methods","170":"docs/pages/docs/devnet/usage.mdx#start-devnet","171":"docs/pages/docs/devnet/usage.mdx#stop-devnet","172":"docs/pages/docs/devnet/usage.mdx#reset-devnet","173":"docs/pages/docs/devnet/usage.mdx#get-devnet-status","174":"docs/pages/docs/devnet/usage.mdx#get-devnet-accounts","175":"docs/pages/docs/devnet/usage.mdx#get-devnet-contracts","176":"docs/pages/docs/devnet/usage.mdx#example-usage","177":"docs/pages/docs/client/configuration.mdx#client-configuration","178":"docs/pages/docs/client/configuration.mdx#client-configuration-1","179":"docs/pages/docs/client/configuration.mdx#creating-a-client","180":"docs/pages/docs/client/configuration.mdx#configuration-options","181":"docs/pages/docs/client/configuration.mdx#node-url","182":"docs/pages/docs/client/configuration.mdx#chain-id","183":"docs/pages/docs/client/configuration.mdx#timeout","184":"docs/pages/docs/client/configuration.mdx#retry-configuration","185":"docs/pages/docs/client/configuration.mdx#logging-configuration","186":"docs/pages/docs/client/configuration.mdx#example-usage","187":"docs/pages/docs/client/examples.mdx#client-examples","188":"docs/pages/docs/client/examples.mdx#basic-examples","189":"docs/pages/docs/client/examples.mdx#creating-a-client","190":"docs/pages/docs/client/examples.mdx#getting-a-block","191":"docs/pages/docs/client/examples.mdx#getting-a-transaction","192":"docs/pages/docs/client/examples.mdx#advanced-examples","193":"docs/pages/docs/client/examples.mdx#sending-a-transaction","194":"docs/pages/docs/client/examples.mdx#calling-a-contract","195":"docs/pages/docs/client/#client-package","196":"docs/pages/docs/client/#overview","197":"docs/pages/docs/client/#available-submodules","198":"docs/pages/docs/client/#getting-started","199":"docs/pages/docs/client/#version","200":"docs/pages/docs/client/methods.mdx#client-methods","201":"docs/pages/docs/client/methods.mdx#block-methods","202":"docs/pages/docs/client/methods.mdx#get-block-by-number","203":"docs/pages/docs/client/methods.mdx#get-block-by-hash","204":"docs/pages/docs/client/methods.mdx#get-latest-block","205":"docs/pages/docs/client/methods.mdx#transaction-methods","206":"docs/pages/docs/client/methods.mdx#get-transaction-by-hash","207":"docs/pages/docs/client/methods.mdx#get-transaction-receipt","208":"docs/pages/docs/client/methods.mdx#send-transaction","209":"docs/pages/docs/client/methods.mdx#contract-methods","210":"docs/pages/docs/client/methods.mdx#get-contract-code","211":"docs/pages/docs/client/methods.mdx#get-contract-storage","212":"docs/pages/docs/client/methods.mdx#call-contract","213":"docs/pages/docs/client/methods.mdx#example-usage","214":"docs/pages/docs/utilities/common.mdx#common-utilities","215":"docs/pages/docs/utilities/common.mdx#hex-encodingdecoding","216":"docs/pages/docs/utilities/common.mdx#encode-hex","217":"docs/pages/docs/utilities/common.mdx#decode-hex","218":"docs/pages/docs/utilities/common.mdx#field-element-conversion","219":"docs/pages/docs/utilities/common.mdx#to-field-element","220":"docs/pages/docs/utilities/common.mdx#from-field-element","221":"docs/pages/docs/utilities/common.mdx#address-validation","222":"docs/pages/docs/utilities/common.mdx#validate-address","223":"docs/pages/docs/utilities/common.mdx#normalize-address","224":"docs/pages/docs/utilities/common.mdx#chain-id-validation","225":"docs/pages/docs/utilities/common.mdx#validate-chain-id","226":"docs/pages/docs/utilities/common.mdx#get-chain-id","227":"docs/pages/docs/utilities/common.mdx#error-handling","228":"docs/pages/docs/utilities/common.mdx#is-invalid-address-error","229":"docs/pages/docs/utilities/common.mdx#is-invalid-signature-error","230":"docs/pages/docs/utilities/common.mdx#example-usage","231":"docs/pages/docs/utilities/#utilities-package","232":"docs/pages/docs/utilities/#overview","233":"docs/pages/docs/utilities/#available-submodules","234":"docs/pages/docs/utilities/#getting-started","235":"docs/pages/docs/utilities/#version","236":"docs/pages/docs/utilities/types.mdx#type-utilities","237":"docs/pages/docs/utilities/types.mdx#type-conversion","238":"docs/pages/docs/utilities/types.mdx#to-big-int","239":"docs/pages/docs/utilities/types.mdx#from-big-int","240":"docs/pages/docs/utilities/types.mdx#to-felt","241":"docs/pages/docs/utilities/types.mdx#from-felt","242":"docs/pages/docs/utilities/types.mdx#type-validation","243":"docs/pages/docs/utilities/types.mdx#is-valid-big-int","244":"docs/pages/docs/utilities/types.mdx#is-valid-felt","245":"docs/pages/docs/utilities/types.mdx#is-valid-uint256","246":"docs/pages/docs/utilities/types.mdx#type-operations","247":"docs/pages/docs/utilities/types.mdx#add-big-ints","248":"docs/pages/docs/utilities/types.mdx#sub-big-ints","249":"docs/pages/docs/utilities/types.mdx#mul-big-ints","250":"docs/pages/docs/utilities/types.mdx#div-big-ints","251":"docs/pages/docs/utilities/types.mdx#example-usage"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,11],"1":[3,2,8],"2":[2,2,7],"3":[2,2,8],"4":[2,2,8],"5":[2,2,8],"6":[2,2,44],"7":[2,1,11],"8":[3,2,8],"9":[2,2,7],"10":[2,2,8],"11":[2,2,8],"12":[2,2,8],"13":[2,2,54],"14":[2,1,23],"15":[1,2,8],"16":[2,2,4],"17":[2,2,19],"18":[1,2,15],"19":[2,1,14],"20":[2,2,22],"21":[3,2,17],"22":[2,2,1],"23":[1,3,14],"24":[1,3,8],"25":[1,3,9],"26":[2,2,42],"27":[2,1,14],"28":[2,2,1],"29":[2,4,6],"30":[3,4,6],"31":[2,4,6],"32":[3,4,6],"33":[2,2,36],"34":[2,2,1],"35":[3,3,11],"36":[3,3,12],"37":[2,3,18],"38":[2,1,18],"39":[1,2,13],"40":[2,2,8],"41":[2,2,18],"42":[1,2,15],"43":[2,1,12],"44":[2,2,12],"45":[2,2,1],"46":[3,3,8],"47":[3,3,8],"48":[3,3,8],"49":[2,2,31],"50":[2,2,28],"51":[2,1,15],"52":[2,2,11],"53":[2,2,1],"54":[2,4,11],"55":[2,4,9],"56":[2,2,1],"57":[2,3,11],"58":[2,3,11],"59":[3,3,11],"60":[2,2,52],"61":[2,1,21],"62":[1,2,9],"63":[2,2,4],"64":[2,2,19],"65":[1,2,15],"66":[2,1,13],"67":[2,2,1],"68":[2,3,7],"69":[2,3,7],"70":[2,3,6],"71":[2,3,6],"72":[2,2,1],"73":[2,3,7],"74":[2,3,7],"75":[2,3,7],"76":[2,3,6],"77":[2,2,1],"78":[2,2,5],"79":[2,2,5],"80":[3,2,6],"81":[3,2,6],"82":[2,2,46],"83":[2,1,15],"84":[2,2,10],"85":[2,2,29],"86":[4,3,5],"87":[3,3,19],"88":[2,2,30],"89":[4,3,5],"90":[3,3,19],"91":[2,2,30],"92":[4,3,5],"93":[3,3,19],"94":[2,2,32],"95":[4,1,19],"96":[3,4,14],"97":[3,4,18],"98":[2,6,33],"99":[2,6,28],"100":[2,6,21],"101":[2,6,34],"102":[2,4,1],"103":[1,6,7],"104":[5,6,28],"105":[2,6,11],"106":[2,1,30],"107":[1,2,19],"108":[6,2,18],"109":[6,8,20],"110":[4,8,12],"111":[6,8,56],"112":[5,8,22],"113":[2,2,35],"114":[1,2,40],"115":[1,1,22],"116":[1,1,10],"117":[3,1,10],"118":[4,1,26],"119":[1,4,78],"120":[2,4,40],"121":[2,4,15],"122":[2,5,52],"123":[1,4,17],"124":[1,4,20],"125":[2,1,12],"126":[2,2,1],"127":[3,3,36],"128":[3,3,36],"129":[2,2,1],"130":[3,3,51],"131":[3,3,36],"132":[3,3,32],"133":[2,1,22],"134":[1,2,8],"135":[2,2,4],"136":[2,2,19],"137":[1,2,15],"138":[2,1,13],"139":[2,2,1],"140":[4,3,11],"141":[4,3,11],"142":[3,3,10],"143":[2,2,1],"144":[4,3,11],"145":[3,3,11],"146":[2,3,11],"147":[2,2,1],"148":[3,3,11],"149":[3,3,12],"150":[2,3,13],"151":[2,2,47],"152":[2,1,20],"153":[1,2,8],"154":[2,2,4],"155":[2,2,19],"156":[1,2,15],"157":[2,1,13],"158":[2,2,20],"159":[3,2,41],"160":[2,2,1],"161":[2,4,13],"162":[2,4,12],"163":[2,4,13],"164":[2,4,18],"165":[2,4,18],"166":[2,4,18],"167":[2,2,43],"168":[2,1,12],"169":[2,2,1],"170":[2,3,9],"171":[2,3,9],"172":[2,3,9],"173":[3,3,5],"174":[3,3,5],"175":[3,3,5],"176":[2,2,49],"177":[2,1,11],"178":[2,2,19],"179":[3,2,28],"180":[2,2,1],"181":[2,3,17],"182":[2,3,16],"183":[1,3,17],"184":[2,3,19],"185":[2,3,18],"186":[2,2,48],"187":[2,1,12],"188":[2,2,1],"189":[3,3,48],"190":[3,3,48],"191":[3,3,48],"192":[2,2,1],"193":[3,3,62],"194":[3,3,48],"195":[2,1,18],"196":[1,2,9],"197":[2,2,5],"198":[2,2,18],"199":[1,2,15],"200":[2,1,12],"201":[2,2,1],"202":[4,3,11],"203":[4,3,11],"204":[3,3,10],"205":[2,2,1],"206":[4,3,11],"207":[3,3,11],"208":[2,3,11],"209":[2,2,1],"210":[3,3,11],"211":[3,3,12],"212":[2,3,13],"213":[2,2,47],"214":[2,1,11],"215":[3,2,1],"216":[2,5,6],"217":[2,5,7],"218":[3,2,1],"219":[3,5,6],"220":[3,5,6],"221":[2,2,1],"222":[2,4,6],"223":[2,4,6],"224":[3,2,1],"225":[3,5,6],"226":[3,5,5],"227":[2,2,1],"228":[4,4,6],"229":[4,4,6],"230":[2,2,55],"231":[2,1,20],"232":[1,2,9],"233":[2,2,4],"234":[2,2,19],"235":[1,2,15],"236":[2,1,12],"237":[2,2,1],"238":[3,3,6],"239":[3,3,6],"240":[2,3,6],"241":[2,3,6],"242":[2,2,1],"243":[4,3,6],"244":[3,3,6],"245":[3,3,6],"246":[2,2,1],"247":[3,3,7],"248":[3,3,7],"249":[3,3,7],"250":[3,3,7],"251":[2,2,34]},"averageFieldLength":[2.3134920634920637,2.6626984126984143,15.18650793650794],"storedFields":{"0":{"href":"/docs/abi/decoding#abi-decoding","html":"</header>\n<p>The ABI decoding submodule provides functionality for decoding Starknet contract data.</p>\n","isPage":true,"text":"\nThe ABI decoding submodule provides functionality for decoding Starknet contract data.\n","title":"ABI Decoding","titles":[]},"1":{"href":"/docs/abi/decoding#decode-function-call","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeFunctionCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(functionName, encodedData)</span></span></code></pre>\n","isPage":false,"text":"\ndecoded, err := abi.DecodeFunctionCall(functionName, encodedData)\n","title":"Decode Function Call","titles":["ABI Decoding"]},"2":{"href":"/docs/abi/decoding#decode-constructor","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeConstructor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(encodedData)</span></span></code></pre>\n","isPage":false,"text":"\ndecoded, err := abi.DecodeConstructor(encodedData)\n","title":"Decode Constructor","titles":["ABI Decoding"]},"3":{"href":"/docs/abi/decoding#decode-event","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(eventName, encodedData)</span></span></code></pre>\n","isPage":false,"text":"\ndecoded, err := abi.DecodeEvent(eventName, encodedData)\n","title":"Decode Event","titles":["ABI Decoding"]},"4":{"href":"/docs/abi/decoding#decode-struct","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeStruct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(structName, encodedData)</span></span></code></pre>\n","isPage":false,"text":"\ndecoded, err := abi.DecodeStruct(structName, encodedData)\n","title":"Decode Struct","titles":["ABI Decoding"]},"5":{"href":"/docs/abi/decoding#decode-array","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(elementType, encodedData)</span></span></code></pre>\n","isPage":false,"text":"\ndecoded, err := abi.DecodeArray(elementType, encodedData)\n","title":"Decode Array","titles":["ABI Decoding"]},"6":{"href":"/docs/abi/decoding#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decode a function call</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeFunctionCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transfer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, encodedData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">recipient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">amount </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decode a constructor</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeConstructor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(encodedData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">symbol </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decimals </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decode an event</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transfer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, encodedData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">from </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">to </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decode a struct</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeStruct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Point&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, encodedData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decode an array</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">decoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;felt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, encodedData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">elements </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> decoded.([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>","isPage":false,"text":"\n// Decode a function call\ndecoded, err := abi.DecodeFunctionCall(&quot;transfer&quot;, encodedData)\nif err != nil {\n    log.Fatal(err)\n}\nrecipient := decoded[0].(string)\namount := decoded[1].(string)\n \n// Decode a constructor\ndecoded, err = abi.DecodeConstructor(encodedData)\nif err != nil {\n    log.Fatal(err)\n}\nname := decoded[0].(string)\nsymbol := decoded[1].(string)\ndecimals := decoded[2].(string)\n \n// Decode an event\ndecoded, err = abi.DecodeEvent(&quot;Transfer&quot;, encodedData)\nif err != nil {\n    log.Fatal(err)\n}\nfrom := decoded[0].(string)\nto := decoded[1].(string)\nvalue := decoded[2].(string)\n \n// Decode a struct\ndecoded, err = abi.DecodeStruct(&quot;Point&quot;, encodedData)\nif err != nil {\n    log.Fatal(err)\n}\nx := decoded[&quot;x&quot;].(string)\ny := decoded[&quot;y&quot;].(string)\n \n// Decode an array\ndecoded, err = abi.DecodeArray(&quot;felt&quot;, encodedData)\nif err != nil {\n    log.Fatal(err)\n}\nelements := decoded.([]string)","title":"Example Usage","titles":["ABI Decoding"]},"7":{"href":"/docs/abi/encoding#abi-encoding","html":"</header>\n<p>The ABI encoding submodule provides functionality for encoding Starknet contract data.</p>\n","isPage":true,"text":"\nThe ABI encoding submodule provides functionality for encoding Starknet contract data.\n","title":"ABI Encoding","titles":[]},"8":{"href":"/docs/abi/encoding#encode-function-call","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeFunctionCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(functionName, args)</span></span></code></pre>\n","isPage":false,"text":"\nencoded, err := abi.EncodeFunctionCall(functionName, args)\n","title":"Encode Function Call","titles":["ABI Encoding"]},"9":{"href":"/docs/abi/encoding#encode-constructor","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeConstructor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args)</span></span></code></pre>\n","isPage":false,"text":"\nencoded, err := abi.EncodeConstructor(args)\n","title":"Encode Constructor","titles":["ABI Encoding"]},"10":{"href":"/docs/abi/encoding#encode-event","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(eventName, args)</span></span></code></pre>\n","isPage":false,"text":"\nencoded, err := abi.EncodeEvent(eventName, args)\n","title":"Encode Event","titles":["ABI Encoding"]},"11":{"href":"/docs/abi/encoding#encode-struct","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeStruct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(structName, fields)</span></span></code></pre>\n","isPage":false,"text":"\nencoded, err := abi.EncodeStruct(structName, fields)\n","title":"Encode Struct","titles":["ABI Encoding"]},"12":{"href":"/docs/abi/encoding#encode-array","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(elementType, elements)</span></span></code></pre>\n","isPage":false,"text":"\nencoded, err := abi.EncodeArray(elementType, elements)\n","title":"Encode Array","titles":["ABI Encoding"]},"13":{"href":"/docs/abi/encoding#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode a function call</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeFunctionCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transfer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// recipient</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,     </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// amount</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode a constructor</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeConstructor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;MyToken&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// name</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;MTK&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// symbol</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;18&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,       </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// decimals</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode an event</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transfer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// from</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// to</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,     </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// value</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode a struct</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeStruct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Point&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;100&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;200&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode an array</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">encoded, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;felt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;3&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;4&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;5&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// Encode a function call\nencoded, err := abi.EncodeFunctionCall(&quot;transfer&quot;, []interface{}{\n    &quot;0x123...&quot;, // recipient\n    &quot;1000&quot;,     // amount\n})\nif err != nil {\n    log.Fatal(err)\n}\n \n// Encode a constructor\nencoded, err = abi.EncodeConstructor([]interface{}{\n    &quot;MyToken&quot;,  // name\n    &quot;MTK&quot;,      // symbol\n    &quot;18&quot;,       // decimals\n})\nif err != nil {\n    log.Fatal(err)\n}\n \n// Encode an event\nencoded, err = abi.EncodeEvent(&quot;Transfer&quot;, []interface{}{\n    &quot;0x123...&quot;, // from\n    &quot;0x456...&quot;, // to\n    &quot;1000&quot;,     // value\n})\nif err != nil {\n    log.Fatal(err)\n}\n \n// Encode a struct\nencoded, err = abi.EncodeStruct(&quot;Point&quot;, map[string]interface{}{\n    &quot;x&quot;: &quot;100&quot;,\n    &quot;y&quot;: &quot;200&quot;,\n})\nif err != nil {\n    log.Fatal(err)\n}\n \n// Encode an array\nencoded, err = abi.EncodeArray(&quot;felt&quot;, []interface{}{\n    &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;,\n})\nif err != nil {\n    log.Fatal(err)\n}","title":"Example Usage","titles":["ABI Encoding"]},"14":{"href":"/docs/abi#abi-package","html":"</header>\n<p>The ABI package provides functionality for working with Starknet Application Binary Interface (ABI). This package contains various components and utilities for encoding and decoding Starknet contract data.</p>\n","isPage":true,"text":"\nThe ABI package provides functionality for working with Starknet Application Binary Interface (ABI). This package contains various components and utilities for encoding and decoding Starknet contract data.\n","title":"ABI Package","titles":[]},"15":{"href":"/docs/abi#overview","html":"\n<p>The ABI package includes:</p>\n<ul>\n<li>ABI encoding</li>\n<li>ABI decoding</li>\n<li>ABI utilities</li>\n</ul>\n","isPage":false,"text":"\nThe ABI package includes:\n\nABI encoding\nABI decoding\nABI utilities\n\n","title":"Overview","titles":["ABI Package"]},"16":{"href":"/docs/abi#available-submodules","html":"\n<ul>\n<li><a href=\"./encoding\">ABI Encoding</a></li>\n<li><a href=\"./decoding\">ABI Decoding</a></li>\n</ul>\n","isPage":false,"text":"\n\nABI Encoding\nABI Decoding\n\n","title":"Available Submodules","titles":["ABI Package"]},"17":{"href":"/docs/abi#getting-started","html":"\n<p>To use the ABI package, import it in your Go code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/abi</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span></code></pre>\n","isPage":false,"text":"\nTo use the ABI package, import it in your Go code:\nimport &quot;github.com/NethermindEth/starknet.go/abi&quot;\n","title":"Getting Started","titles":["ABI Package"]},"18":{"href":"/docs/abi#version","html":"\n<p>This documentation is based on version v0.8.1 of the Starknet.go library.</p>","isPage":false,"text":"\nThis documentation is based on version v0.8.1 of the Starknet.go library.","title":"Version","titles":["ABI Package"]},"19":{"href":"/docs/account/account-management#account-management","html":"</header>\n<p>The account management submodule provides core functionality for creating and managing Starknet accounts.</p>\n","isPage":true,"text":"\nThe account management submodule provides core functionality for creating and managing Starknet accounts.\n","title":"Account Management","titles":[]},"20":{"href":"/docs/account/account-management#account-structure","html":"\n<p>An account in Starknet.go is represented by the <code>Account</code> struct, which contains:</p>\n<ul>\n<li>Public key</li>\n<li>Private key</li>\n<li>Address</li>\n<li>Chain ID</li>\n<li>Provider interface</li>\n</ul>\n","isPage":false,"text":"\nAn account in Starknet.go is represented by the Account struct, which contains:\n\nPublic key\nPrivate key\nAddress\nChain ID\nProvider interface\n\n","title":"Account Structure","titles":["Account Management"]},"21":{"href":"/docs/account/account-management#creating-an-account","html":"\n<p>To create a new account:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">account, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(privateKey, address, chainID, provider) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTo create a new account:\n\naccount, err := account.NewAccount(privateKey, address, chainID, provider) \nif err != nil {\n    // Handle error\n}\n","title":"Creating an Account","titles":["Account Management"]},"22":{"href":"/docs/account/account-management#account-methods","html":"\n","isPage":false,"text":"\n","title":"Account Methods","titles":["Account Management"]},"23":{"href":"/docs/account/account-management#sign","html":"\n<p>Sign a transaction or message:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signature, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sign</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nSign a transaction or message:\n\nsignature, err := account.Sign(message) \nif err != nil {\n    // Handle error\n}\n","title":"Sign","titles":["Account Management","Account Methods"]},"24":{"href":"/docs/account/account-management#verify","html":"\n<p>Verify a signature:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Verify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, signature)</span></span></code></pre>\n","isPage":false,"text":"\nVerify a signature:\nisValid := account.Verify(message, signature)\n","title":"Verify","titles":["Account Management","Account Methods"]},"25":{"href":"/docs/account/account-management#getaddress","html":"\n<p>Get the account&#x27;s address:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">address </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nGet the account&#x27;s address:\naddress := account.GetAddress()\n","title":"GetAddress","titles":["Account Management","Account Methods"]},"26":{"href":"/docs/account/account-management#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a new account</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">privateKey </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0x123...&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Your private key</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">address </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0x456...&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Your account address</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">chainID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;SN_MAIN&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\">     // Starknet chain ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">provider </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Your provider implementation</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">account, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(privateKey, address, chainID, provider) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Sign a message</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, Starknet!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signature, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sign</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Verify the signature</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Verify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, signature) </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Signature valid: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, isValid) </span></span></code></pre>","isPage":false,"text":"\n// Create a new account\nprivateKey := &quot;0x123...&quot; // Your private key\naddress := &quot;0x456...&quot;    // Your account address\nchainID := &quot;SN_MAIN&quot;     // Starknet chain ID\nprovider := // Your provider implementation\n \n\naccount, err := account.NewAccount(privateKey, address, chainID, provider) \nif err != nil {\n    log.Fatal(err)\n}\n \n// Sign a message\nmessage := []byte(&quot;Hello, Starknet!&quot;) \nsignature, err := account.Sign(message) \nif err != nil {\n    log.Fatal(err)\n}\n \n// Verify the signature\nisValid := account.Verify(message, signature) \nfmt.Printf(&quot;Signature valid: %v\\n&quot;, isValid) ","title":"Example Usage","titles":["Account Management"]},"27":{"href":"/docs/account/account-utilities#account-utilities","html":"</header>\n<p>The account utilities submodule provides helper functions and utilities for working with Starknet accounts.</p>\n","isPage":true,"text":"\nThe account utilities submodule provides helper functions and utilities for working with Starknet accounts.\n","title":"Account Utilities","titles":[]},"28":{"href":"/docs/account/account-utilities#utility-functions","html":"\n","isPage":false,"text":"\n","title":"Utility Functions","titles":["Account Utilities"]},"29":{"href":"/docs/account/account-utilities#address-validation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValidateAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := account.ValidateAddress(address)\n","title":"Address Validation","titles":["Account Utilities","Utility Functions"]},"30":{"href":"/docs/account/account-utilities#public-key-generation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">publicKey </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GeneratePublicKey</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(privateKey)</span></span></code></pre>\n","isPage":false,"text":"\npublicKey := account.GeneratePublicKey(privateKey)\n","title":"Public Key Generation","titles":["Account Utilities","Utility Functions"]},"31":{"href":"/docs/account/account-utilities#address-generation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">address </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GenerateAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(publicKey)</span></span></code></pre>\n","isPage":false,"text":"\naddress := account.GenerateAddress(publicKey)\n","title":"Address Generation","titles":["Account Utilities","Utility Functions"]},"32":{"href":"/docs/account/account-utilities#chain-id-validation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValidateChainID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(chainID)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := account.ValidateChainID(chainID)\n","title":"Chain ID Validation","titles":["Account Utilities","Utility Functions"]},"33":{"href":"/docs/account/account-utilities#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Validate an address </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">address </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0x123...&quot;</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValidateAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Address valid: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, isValid) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Generate public key from private key </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">privateKey </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0x456...&quot;</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">publicKey </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GeneratePublicKey</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(privateKey) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Public key: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, publicKey) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Generate address from public key </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">address </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GenerateAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(publicKey) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Generated address: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, address) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Validate chain ID </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">chainID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;SN_MAIN&quot;</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValidateChainID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(chainID) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Chain ID valid: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, isValid) </span></span></code></pre>\n","isPage":false,"text":"\n// Validate an address \naddress := &quot;0x123...&quot;\nisValid := account.ValidateAddress(address) \nfmt.Printf(&quot;Address valid: %v\\n&quot;, isValid) \n \n// Generate public key from private key \nprivateKey := &quot;0x456...&quot;\npublicKey := account.GeneratePublicKey(privateKey) \nfmt.Printf(&quot;Public key: %s\\n&quot;, publicKey) \n \n// Generate address from public key \naddress = account.GenerateAddress(publicKey) \nfmt.Printf(&quot;Generated address: %s\\n&quot;, address) \n \n// Validate chain ID \nchainID := &quot;SN_MAIN&quot;\nisValid = account.ValidateChainID(chainID) \nfmt.Printf(&quot;Chain ID valid: %v\\n&quot;, isValid) \n","title":"Example Usage","titles":["Account Utilities"]},"34":{"href":"/docs/account/account-utilities#common-utilities","html":"\n","isPage":false,"text":"\n","title":"Common Utilities","titles":["Account Utilities"]},"35":{"href":"/docs/account/account-utilities#hex-encodingdecoding","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode bytes to hex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">hex </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeHex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(bytes)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decode hex to bytes</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bytes, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeHex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hex)</span></span></code></pre>\n","isPage":false,"text":"\n// Encode bytes to hex\nhex := account.EncodeHex(bytes)\n \n// Decode hex to bytes\nbytes, err := account.DecodeHex(hex)\n","title":"Hex Encoding/Decoding","titles":["Account Utilities","Common Utilities"]},"36":{"href":"/docs/account/account-utilities#field-element-conversion","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Convert to field element</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fe </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToFieldElement</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Convert from field element</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FromFieldElement</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fe)</span></span></code></pre>\n","isPage":false,"text":"\n// Convert to field element\nfe := account.ToFieldElement(value)\n \n// Convert from field element\nvalue := account.FromFieldElement(fe)\n","title":"Field Element Conversion","titles":["Account Utilities","Common Utilities"]},"37":{"href":"/docs/account/account-utilities#error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Check for specific errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsInvalidAddressError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Handle invalid address error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsInvalidSignatureError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Handle invalid signature error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// Check for specific errors\nif err != nil {\n    if account.IsInvalidAddressError(err) {\n        // Handle invalid address error\n    } else if account.IsInvalidSignatureError(err) {\n        // Handle invalid signature error\n    }\n}","title":"Error Handling","titles":["Account Utilities","Common Utilities"]},"38":{"href":"/docs/account#account-package","html":"</header>\n<p>The account package provides functionality for interacting with Starknet accounts. This package contains various components and utilities for managing and interacting with Starknet accounts.</p>\n","isPage":true,"text":"\nThe account package provides functionality for interacting with Starknet accounts. This package contains various components and utilities for managing and interacting with Starknet accounts.\n","title":"Account Package","titles":[]},"39":{"href":"/docs/account#overview","html":"\n<p>The account package includes:</p>\n<ul>\n<li>Account management</li>\n<li>Transaction handling</li>\n<li>Signature verification</li>\n<li>Account-related utilities</li>\n</ul>\n","isPage":false,"text":"\nThe account package includes:\n\nAccount management\nTransaction handling\nSignature verification\nAccount-related utilities\n\n","title":"Overview","titles":["Account Package"]},"40":{"href":"/docs/account#available-submodules","html":"\n<ul>\n<li><a href=\"/docs/account/account-management\">Account Management</a></li>\n<li><a href=\"/docs/account/transaction-handling\">Transaction Handling</a></li>\n<li><a href=\"/docs/account/signature-verification\">Signature Verification</a></li>\n<li><a href=\"/docs/account/account-utilities\">Account Utilities</a></li>\n</ul>\n","isPage":false,"text":"\n\nAccount Management\nTransaction Handling\nSignature Verification\nAccount Utilities\n\n","title":"Available Submodules","titles":["Account Package"]},"41":{"href":"/docs/account#getting-started","html":"\n<p>To use the account package, import it in your Go code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/account</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span></code></pre>\n","isPage":false,"text":"\nTo use the account package, import it in your Go code:\nimport &quot;github.com/NethermindEth/starknet.go/account&quot;\n","title":"Getting Started","titles":["Account Package"]},"42":{"href":"/docs/account#version","html":"\n<p>This documentation is based on version v0.8.1 of the Starknet.go library.</p>","isPage":false,"text":"\nThis documentation is based on version v0.8.1 of the Starknet.go library.","title":"Version","titles":["Account Package"]},"43":{"href":"/docs/account/signature-verification#signature-verification","html":"</header>\n<p>The signature verification submodule provides functionality for verifying signatures in Starknet.</p>\n","isPage":true,"text":"\nThe signature verification submodule provides functionality for verifying signatures in Starknet.\n","title":"Signature Verification","titles":[]},"44":{"href":"/docs/account/signature-verification#signature-types","html":"\n<p>The package supports various signature types:</p>\n<ul>\n<li>ECDSA signatures</li>\n<li>Pedersen hash signatures</li>\n<li>Stark signatures</li>\n</ul>\n","isPage":false,"text":"\nThe package supports various signature types:\n\nECDSA signatures\nPedersen hash signatures\nStark signatures\n\n","title":"Signature Types","titles":["Signature Verification"]},"45":{"href":"/docs/account/signature-verification#verification-methods","html":"\n","isPage":false,"text":"\n","title":"Verification Methods","titles":["Signature Verification"]},"46":{"href":"/docs/account/signature-verification#verify-ecdsa-signature","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">VerifyECDSASignature</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, signature, publicKey)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := account.VerifyECDSASignature(message, signature, publicKey)\n","title":"Verify ECDSA Signature","titles":["Signature Verification","Verification Methods"]},"47":{"href":"/docs/account/signature-verification#verify-pedersen-signature","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">VerifyPedersenSignature</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, signature, publicKey)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := account.VerifyPedersenSignature(message, signature, publicKey)\n","title":"Verify Pedersen Signature","titles":["Signature Verification","Verification Methods"]},"48":{"href":"/docs/account/signature-verification#verify-stark-signature","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">VerifyStarkSignature</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, signature, publicKey)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := account.VerifyStarkSignature(message, signature, publicKey)\n","title":"Verify Stark Signature","titles":["Signature Verification","Verification Methods"]},"49":{"href":"/docs/account/signature-verification#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Example message and signature </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, Starknet!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signature </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0x123...&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Your signature </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">publicKey </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0x456...&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Your public key </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Verify ECDSA signature </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">VerifyECDSASignature</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, signature, publicKey) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ECDSA Signature valid: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, isValid) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Verify Pedersen signature </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">VerifyPedersenSignature</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, signature, publicKey) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Pedersen Signature valid: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, isValid) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Verify Stark signature </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">VerifyStarkSignature</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, signature, publicKey) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Stark Signature valid: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, isValid) </span></span></code></pre>\n","isPage":false,"text":"\n// Example message and signature \nmessage := []byte(&quot;Hello, Starknet!&quot;) \nsignature := &quot;0x123...&quot; // Your signature \npublicKey := &quot;0x456...&quot; // Your public key \n \n// Verify ECDSA signature \nisValid := account.VerifyECDSASignature(message, signature, publicKey) \nfmt.Printf(&quot;ECDSA Signature valid: %v\\n&quot;, isValid) \n \n// Verify Pedersen signature \nisValid = account.VerifyPedersenSignature(message, signature, publicKey) \nfmt.Printf(&quot;Pedersen Signature valid: %v\\n&quot;, isValid) \n \n// Verify Stark signature \nisValid = account.VerifyStarkSignature(message, signature, publicKey) \nfmt.Printf(&quot;Stark Signature valid: %v\\n&quot;, isValid) \n","title":"Example Usage","titles":["Signature Verification"]},"50":{"href":"/docs/account/signature-verification#signature-format","html":"\n<p>Signatures in Starknet are typically represented as:</p>\n<ul>\n<li>ECDSA: <code>(r, s)</code> pair</li>\n<li>Pedersen: <code>(r, s)</code> pair</li>\n<li>Stark: <code>(r, s)</code> pair</li>\n</ul>\n<p>Where:</p>\n<ul>\n<li><code>r</code> and <code>s</code> are field elements</li>\n<li>Each element is represented as a hex string</li>\n<li>The signature is typically concatenated as <code>r + s</code></li>\n</ul>","isPage":false,"text":"\nSignatures in Starknet are typically represented as:\n\nECDSA: (r, s) pair\nPedersen: (r, s) pair\nStark: (r, s) pair\n\nWhere:\n\nr and s are field elements\nEach element is represented as a hex string\nThe signature is typically concatenated as r + s\n","title":"Signature Format","titles":["Signature Verification"]},"51":{"href":"/docs/account/transaction-handling#transaction-handling","html":"</header>\n<p>The transaction handling submodule provides functionality for creating, signing, and sending transactions on Starknet.</p>\n","isPage":true,"text":"\nThe transaction handling submodule provides functionality for creating, signing, and sending transactions on Starknet.\n","title":"Transaction Handling","titles":[]},"52":{"href":"/docs/account/transaction-handling#transaction-types","html":"\n<p>The package supports various transaction types:</p>\n<ul>\n<li>Invoke transactions</li>\n<li>Deploy transactions</li>\n<li>Declare transactions</li>\n</ul>\n","isPage":false,"text":"\nThe package supports various transaction types:\n\nInvoke transactions\nDeploy transactions\nDeclare transactions\n\n","title":"Transaction Types","titles":["Transaction Handling"]},"53":{"href":"/docs/account/transaction-handling#creating-transactions","html":"\n","isPage":false,"text":"\n","title":"Creating Transactions","titles":["Transaction Handling"]},"54":{"href":"/docs/account/transaction-handling#invoke-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInvokeTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    contractAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    entryPointSelector,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    calldata,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    maxFee,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    version,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    nonce,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\ntx := account.NewInvokeTransaction(\n    contractAddress,\n    entryPointSelector,\n    calldata,\n    maxFee,\n    version,\n    nonce,\n)\n","title":"Invoke Transaction","titles":["Transaction Handling","Creating Transactions"]},"55":{"href":"/docs/account/transaction-handling#deploy-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewDeployTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    contractClassHash,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    constructorCalldata,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    salt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    version,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\ntx := account.NewDeployTransaction(\n    contractClassHash,\n    constructorCalldata,\n    salt,\n    version,\n)\n","title":"Deploy Transaction","titles":["Transaction Handling","Creating Transactions"]},"56":{"href":"/docs/account/transaction-handling#transaction-methods","html":"\n","isPage":false,"text":"\n","title":"Transaction Methods","titles":["Transaction Handling"]},"57":{"href":"/docs/account/transaction-handling#sign-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signedTx, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SignTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nsignedTx, err := account.SignTransaction(tx) \nif err != nil {\n    // Handle error\n}\n","title":"Sign Transaction","titles":["Transaction Handling","Transaction Methods"]},"58":{"href":"/docs/account/transaction-handling#send-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">txHash, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(signedTx) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntxHash, err := account.SendTransaction(signedTx) \nif err != nil {\n    // Handle error\n}\n","title":"Send Transaction","titles":["Transaction Handling","Transaction Methods"]},"59":{"href":"/docs/account/transaction-handling#wait-for-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">receipt, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WaitForTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txHash) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nreceipt, err := account.WaitForTransaction(txHash) \nif err != nil {\n    // Handle error\n}\n","title":"Wait for Transaction","titles":["Transaction Handling","Transaction Methods"]},"60":{"href":"/docs/account/transaction-handling#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create an invoke transaction </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInvokeTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">( </span></span>\n<span class=\"line focused\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// contract address </span></span>\n<span class=\"line focused\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// entry point selector </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// calldata </span></span>\n<span class=\"line focused\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1000000000000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// max fee </span></span>\n<span class=\"line focused\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// version </span></span>\n<span class=\"line focused\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// nonce </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Sign the transaction </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signedTx, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SignTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send the transaction </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">txHash, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(signedTx) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Wait for transaction confirmation </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">receipt, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> account.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WaitForTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txHash) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction confirmed with status: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, receipt.Status) </span></span></code></pre>","isPage":false,"text":"\n// Create an invoke transaction \ntx := account.NewInvokeTransaction( \n    &quot;0x123...&quot;, // contract address \n    &quot;0x456...&quot;, // entry point selector \n    []string{&quot;0x789...&quot;}, // calldata \n    &quot;1000000000000000&quot;, // max fee \n    &quot;0x1&quot;, // version \n    &quot;0x1&quot;, // nonce \n) \n \n// Sign the transaction \nsignedTx, err := account.SignTransaction(tx) \nif err != nil {\n    log.Fatal(err)\n}\n \n// Send the transaction \ntxHash, err := account.SendTransaction(signedTx) \nif err != nil {\n    log.Fatal(err)\n}\n \n// Wait for transaction confirmation \nreceipt, err := account.WaitForTransaction(txHash) \nif err != nil {\n    log.Fatal(err)\n}\n \nfmt.Printf(&quot;Transaction confirmed with status: %s\\n&quot;, receipt.Status) ","title":"Example Usage","titles":["Transaction Handling"]},"61":{"href":"/docs/curves#curves-package","html":"</header>\n<p>The Curves package provides functionality for working with elliptic curves in Starknet. This package contains various components and utilities for curve operations.</p>\n","isPage":true,"text":"\nThe Curves package provides functionality for working with elliptic curves in Starknet. This package contains various components and utilities for curve operations.\n","title":"Curves Package","titles":[]},"62":{"href":"/docs/curves#overview","html":"\n<p>The Curves package includes:</p>\n<ul>\n<li>Curve types</li>\n<li>Curve operations</li>\n<li>Curve utilities</li>\n</ul>\n","isPage":false,"text":"\nThe Curves package includes:\n\nCurve types\nCurve operations\nCurve utilities\n\n","title":"Overview","titles":["Curves Package"]},"63":{"href":"/docs/curves#available-submodules","html":"\n<ul>\n<li><a href=\"/docs/curves/types\">Curve Types</a></li>\n<li><a href=\"/docs/curves/operations\">Curve Operations</a></li>\n</ul>\n","isPage":false,"text":"\n\nCurve Types\nCurve Operations\n\n","title":"Available Submodules","titles":["Curves Package"]},"64":{"href":"/docs/curves#getting-started","html":"\n<p>To use the Curves package, import it in your Go code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/curves</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span></code></pre>\n","isPage":false,"text":"\nTo use the Curves package, import it in your Go code:\nimport &quot;github.com/NethermindEth/starknet.go/curves&quot;\n","title":"Getting Started","titles":["Curves Package"]},"65":{"href":"/docs/curves#version","html":"\n<p>This documentation is based on version v0.8.1 of the Starknet.go library.</p>","isPage":false,"text":"\nThis documentation is based on version v0.8.1 of the Starknet.go library.","title":"Version","titles":["Curves Package"]},"66":{"href":"/docs/curves/operations#curve-operations","html":"</header>\n<p>The curve operations submodule provides functionality for performing operations on curves in Starknet.</p>\n","isPage":true,"text":"\nThe curve operations submodule provides functionality for performing operations on curves in Starknet.\n","title":"Curve Operations","titles":[]},"67":{"href":"/docs/curves/operations#point-operations","html":"\n","isPage":false,"text":"\n","title":"Point Operations","titles":["Curve Operations"]},"68":{"href":"/docs/curves/operations#point-addition","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point1, point2)</span></span></code></pre>\n","isPage":false,"text":"\nresult := curve.Add(point1, point2)\n","title":"Point Addition","titles":["Curve Operations","Point Operations"]},"69":{"href":"/docs/curves/operations#point-multiplication","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Mul</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point, scalar)</span></span></code></pre>\n","isPage":false,"text":"\nresult := curve.Mul(point, scalar)\n","title":"Point Multiplication","titles":["Curve Operations","Point Operations"]},"70":{"href":"/docs/curves/operations#point-doubling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Double</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point)</span></span></code></pre>\n","isPage":false,"text":"\nresult := curve.Double(point)\n","title":"Point Doubling","titles":["Curve Operations","Point Operations"]},"71":{"href":"/docs/curves/operations#point-negation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Neg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point)</span></span></code></pre>\n","isPage":false,"text":"\nresult := curve.Neg(point)\n","title":"Point Negation","titles":["Curve Operations","Point Operations"]},"72":{"href":"/docs/curves/operations#field-operations","html":"\n","isPage":false,"text":"\n","title":"Field Operations","titles":["Curve Operations"]},"73":{"href":"/docs/curves/operations#field-addition","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FieldAdd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span></code></pre>\n","isPage":false,"text":"\nresult := curve.FieldAdd(a, b)\n","title":"Field Addition","titles":["Curve Operations","Field Operations"]},"74":{"href":"/docs/curves/operations#field-multiplication","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FieldMul</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span></code></pre>\n","isPage":false,"text":"\nresult := curve.FieldMul(a, b)\n","title":"Field Multiplication","titles":["Curve Operations","Field Operations"]},"75":{"href":"/docs/curves/operations#field-division","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FieldDiv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span></code></pre>\n","isPage":false,"text":"\nresult := curve.FieldDiv(a, b)\n","title":"Field Division","titles":["Curve Operations","Field Operations"]},"76":{"href":"/docs/curves/operations#field-inversion","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FieldInv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a)</span></span></code></pre>\n","isPage":false,"text":"\nresult := curve.FieldInv(a)\n","title":"Field Inversion","titles":["Curve Operations","Field Operations"]},"77":{"href":"/docs/curves/operations#curve-operations-1","html":"\n","isPage":false,"text":"\n","title":"Curve Operations","titles":["Curve Operations"]},"78":{"href":"/docs/curves/operations#curve-order","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">order </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Order</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\norder := curve.Order()\n","title":"Curve Order","titles":["Curve Operations","Curve Operations"]},"79":{"href":"/docs/curves/operations#curve-generator","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">generator </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Generator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\ngenerator := curve.Generator()\n","title":"Curve Generator","titles":["Curve Operations","Curve Operations"]},"80":{"href":"/docs/curves/operations#curve-is-on-curve","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isOnCurve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsOnCurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point)</span></span></code></pre>\n","isPage":false,"text":"\nisOnCurve := curve.IsOnCurve(point)\n","title":"Curve Is On Curve","titles":["Curve Operations","Curve Operations"]},"81":{"href":"/docs/curves/operations#curve-is-valid","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsValid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := curve.IsValid(point)\n","title":"Curve Is Valid","titles":["Curve Operations","Curve Operations"]},"82":{"href":"/docs/curves/operations#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a curve</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">curve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curves.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStarkCurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add two points</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point1, point2)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Multiply a point by a scalar</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Mul</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point, scalar)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Double a point</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Double</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Negate a point</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Neg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add two field elements</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FieldAdd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Multiply two field elements</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FieldMul</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Divide two field elements</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FieldDiv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Invert a field element</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FieldInv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the curve order</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">order </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Order</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the curve generator</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">generator </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Generator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Check if a point is on the curve</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isOnCurve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsOnCurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Check if a point is valid</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsValid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point)</span></span></code></pre>","isPage":false,"text":"\n// Create a curve\ncurve := curves.NewStarkCurve()\n \n// Add two points\nresult := curve.Add(point1, point2)\n \n// Multiply a point by a scalar\nresult := curve.Mul(point, scalar)\n \n// Double a point\nresult := curve.Double(point)\n \n// Negate a point\nresult := curve.Neg(point)\n \n// Add two field elements\nresult := curve.FieldAdd(a, b)\n \n// Multiply two field elements\nresult := curve.FieldMul(a, b)\n \n// Divide two field elements\nresult := curve.FieldDiv(a, b)\n \n// Invert a field element\nresult := curve.FieldInv(a)\n \n// Get the curve order\norder := curve.Order()\n \n// Get the curve generator\ngenerator := curve.Generator()\n \n// Check if a point is on the curve\nisOnCurve := curve.IsOnCurve(point)\n \n// Check if a point is valid\nisValid := curve.IsValid(point)","title":"Example Usage","titles":["Curve Operations"]},"83":{"href":"/docs/curves/types#curve-types","html":"</header>\n<p>The curve types submodule provides functionality for working with different types of curves in Starknet.</p>\n","isPage":true,"text":"\nThe curve types submodule provides functionality for working with different types of curves in Starknet.\n","title":"Curve Types","titles":[]},"84":{"href":"/docs/curves/types#curve-types-1","html":"\n<p>The package supports various curve types:</p>\n<ul>\n<li>Stark curve</li>\n<li>Pedersen curve</li>\n<li>ECDSA curve</li>\n</ul>\n","isPage":false,"text":"\nThe package supports various curve types:\n\nStark curve\nPedersen curve\nECDSA curve\n\n","title":"Curve Types","titles":["Curve Types"]},"85":{"href":"/docs/curves/types#stark-curve","html":"\n<p>The Stark curve is the main curve used in Starknet. It is defined by the equation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">y² = x³ + αx + β</span></span></code></pre>\n<p>Where:</p>\n<ul>\n<li>α and β are constants</li>\n<li>The curve is defined over a prime field</li>\n</ul>\n","isPage":false,"text":"\nThe Stark curve is the main curve used in Starknet. It is defined by the equation:\ny² = x³ + αx + β\nWhere:\n\nα and β are constants\nThe curve is defined over a prime field\n\n","title":"Stark Curve","titles":["Curve Types"]},"86":{"href":"/docs/curves/types#creating-a-stark-curve","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">curve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curves.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStarkCurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\ncurve := curves.NewStarkCurve()\n","title":"Creating a Stark Curve","titles":["Curve Types","Stark Curve"]},"87":{"href":"/docs/curves/types#stark-curve-operations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add two points</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point1, point2)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Multiply a point by a scalar</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Mul</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point, scalar)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the generator point</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">generator </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Generator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\n// Add two points\nresult := curve.Add(point1, point2)\n \n// Multiply a point by a scalar\nresult := curve.Mul(point, scalar)\n \n// Get the generator point\ngenerator := curve.Generator()\n","title":"Stark Curve Operations","titles":["Curve Types","Stark Curve"]},"88":{"href":"/docs/curves/types#pedersen-curve","html":"\n<p>The Pedersen curve is used for Pedersen hashing in Starknet. It is defined by the equation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">y² = x³ + αx + β</span></span></code></pre>\n<p>Where:</p>\n<ul>\n<li>α and β are constants</li>\n<li>The curve is defined over a prime field</li>\n</ul>\n","isPage":false,"text":"\nThe Pedersen curve is used for Pedersen hashing in Starknet. It is defined by the equation:\ny² = x³ + αx + β\nWhere:\n\nα and β are constants\nThe curve is defined over a prime field\n\n","title":"Pedersen Curve","titles":["Curve Types"]},"89":{"href":"/docs/curves/types#creating-a-pedersen-curve","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">curve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curves.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPedersenCurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\ncurve := curves.NewPedersenCurve()\n","title":"Creating a Pedersen Curve","titles":["Curve Types","Pedersen Curve"]},"90":{"href":"/docs/curves/types#pedersen-curve-operations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add two points</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point1, point2)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Multiply a point by a scalar</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Mul</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point, scalar)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the generator point</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">generator </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Generator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\n// Add two points\nresult := curve.Add(point1, point2)\n \n// Multiply a point by a scalar\nresult := curve.Mul(point, scalar)\n \n// Get the generator point\ngenerator := curve.Generator()\n","title":"Pedersen Curve Operations","titles":["Curve Types","Pedersen Curve"]},"91":{"href":"/docs/curves/types#ecdsa-curve","html":"\n<p>The ECDSA curve is used for ECDSA signatures in Starknet. It is defined by the equation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">y² = x³ + αx + β</span></span></code></pre>\n<p>Where:</p>\n<ul>\n<li>α and β are constants</li>\n<li>The curve is defined over a prime field</li>\n</ul>\n","isPage":false,"text":"\nThe ECDSA curve is used for ECDSA signatures in Starknet. It is defined by the equation:\ny² = x³ + αx + β\nWhere:\n\nα and β are constants\nThe curve is defined over a prime field\n\n","title":"ECDSA Curve","titles":["Curve Types"]},"92":{"href":"/docs/curves/types#creating-an-ecdsa-curve","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">curve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curves.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewECDSACurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\ncurve := curves.NewECDSACurve()\n","title":"Creating an ECDSA Curve","titles":["Curve Types","ECDSA Curve"]},"93":{"href":"/docs/curves/types#ecdsa-curve-operations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add two points</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point1, point2)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Multiply a point by a scalar</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Mul</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point, scalar)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the generator point</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">generator </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Generator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\n// Add two points\nresult := curve.Add(point1, point2)\n \n// Multiply a point by a scalar\nresult := curve.Mul(point, scalar)\n \n// Get the generator point\ngenerator := curve.Generator()\n","title":"ECDSA Curve Operations","titles":["Curve Types","ECDSA Curve"]},"94":{"href":"/docs/curves/types#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a Stark curve</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">starkCurve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curves.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStarkCurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a Pedersen curve</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">pedersenCurve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curves.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPedersenCurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create an ECDSA curve</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ecdsaCurve </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> curves.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewECDSACurve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add two points on the Stark curve</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> starkCurve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point1, point2)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Multiply a point by a scalar on the Pedersen curve</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pedersenCurve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Mul</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(point, scalar)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the generator point on the ECDSA curve</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">generator </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ecdsaCurve.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Generator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>","isPage":false,"text":"\n// Create a Stark curve\nstarkCurve := curves.NewStarkCurve()\n \n// Create a Pedersen curve\npedersenCurve := curves.NewPedersenCurve()\n \n// Create an ECDSA curve\necdsaCurve := curves.NewECDSACurve()\n \n// Add two points on the Stark curve\nresult := starkCurve.Add(point1, point2)\n \n// Multiply a point by a scalar on the Pedersen curve\nresult := pedersenCurve.Mul(point, scalar)\n \n// Get the generator point on the ECDSA curve\ngenerator := ecdsaCurve.Generator()","title":"Example Usage","titles":["Curve Types"]},"95":{"href":"/docs/introduction/contributing#contributing-to-starknetgo","html":"</header>\n<p>We welcome contributions from the community! This guide will help you get started with contributing to Starknet.go.</p>\n","isPage":true,"text":"\nWe welcome contributions from the community! This guide will help you get started with contributing to Starknet.go.\n","title":"Contributing to Starknet.go","titles":[]},"96":{"href":"/docs/introduction/contributing#code-of-conduct","html":"\n<p>Please read and follow our <a href=\"https://github.com/NethermindEth/starknet.go/blob/main/CODE_OF_CONDUCT.md\">Code of Conduct</a> to keep our community approachable and respectable.</p>\n","isPage":false,"text":"\nPlease read and follow our Code of Conduct to keep our community approachable and respectable.\n","title":"Code of Conduct","titles":["Contributing to Starknet.go"]},"97":{"href":"/docs/introduction/contributing#how-to-contribute","html":"\n<p>There are many ways to contribute to Starknet.go:</p>\n<ul>\n<li>Reporting bugs</li>\n<li>Suggesting enhancements</li>\n<li>Improving documentation</li>\n<li>Submitting pull requests</li>\n</ul>\n","isPage":false,"text":"\nThere are many ways to contribute to Starknet.go:\n\nReporting bugs\nSuggesting enhancements\nImproving documentation\nSubmitting pull requests\n\n","title":"How to Contribute","titles":["Contributing to Starknet.go"]},"98":{"href":"/docs/introduction/contributing#reporting-bugs","html":"\n<p>If you find a bug, please create an issue on our <a href=\"https://github.com/NethermindEth/starknet.go/issues\">GitHub repository</a> with:</p>\n<ul>\n<li>A clear title and description</li>\n<li>As much relevant information as possible</li>\n<li>A code sample or test case demonstrating the bug</li>\n</ul>\n","isPage":false,"text":"\nIf you find a bug, please create an issue on our GitHub repository with:\n\nA clear title and description\nAs much relevant information as possible\nA code sample or test case demonstrating the bug\n\n","title":"Reporting Bugs","titles":["Contributing to Starknet.go","How to Contribute"]},"99":{"href":"/docs/introduction/contributing#suggesting-enhancements","html":"\n<p>Enhancement suggestions are also welcome. Please create an issue with:</p>\n<ul>\n<li>A clear title and description</li>\n<li>A detailed explanation of the proposed functionality</li>\n<li>Any relevant examples or use cases</li>\n</ul>\n","isPage":false,"text":"\nEnhancement suggestions are also welcome. Please create an issue with:\n\nA clear title and description\nA detailed explanation of the proposed functionality\nAny relevant examples or use cases\n\n","title":"Suggesting Enhancements","titles":["Contributing to Starknet.go","How to Contribute"]},"100":{"href":"/docs/introduction/contributing#improving-documentation","html":"\n<p>Documentation improvements are always welcome. You can:</p>\n<ul>\n<li>Fix typos or clarify existing documentation</li>\n<li>Add examples or tutorials</li>\n<li>Expand on technical details</li>\n</ul>\n","isPage":false,"text":"\nDocumentation improvements are always welcome. You can:\n\nFix typos or clarify existing documentation\nAdd examples or tutorials\nExpand on technical details\n\n","title":"Improving Documentation","titles":["Contributing to Starknet.go","How to Contribute"]},"101":{"href":"/docs/introduction/contributing#pull-requests","html":"\n<ol>\n<li>Fork the repository</li>\n<li>Create a new branch (<code>git checkout -b feature/amazing-feature</code>)</li>\n<li>Make your changes</li>\n<li>Run tests to ensure they pass</li>\n<li>Commit your changes (<code>git commit -m &#x27;Add some amazing feature&#x27;</code>)</li>\n<li>Push to the branch (<code>git push origin feature/amazing-feature</code>)</li>\n<li>Open a Pull Request</li>\n</ol>\n","isPage":false,"text":"\n\nFork the repository\nCreate a new branch (git checkout -b feature/amazing-feature)\nMake your changes\nRun tests to ensure they pass\nCommit your changes (git commit -m &#x27;Add some amazing feature&#x27;)\nPush to the branch (git push origin feature/amazing-feature)\nOpen a Pull Request\n\n","title":"Pull Requests","titles":["Contributing to Starknet.go","How to Contribute"]},"102":{"href":"/docs/introduction/contributing#development-setup","html":"\n","isPage":false,"text":"\n","title":"Development Setup","titles":["Contributing to Starknet.go"]},"103":{"href":"/docs/introduction/contributing#prerequisites","html":"\n<ul>\n<li>Go 1.20 or higher</li>\n<li>Git</li>\n</ul>\n","isPage":false,"text":"\n\nGo 1.20 or higher\nGit\n\n","title":"Prerequisites","titles":["Contributing to Starknet.go","Development Setup"]},"104":{"href":"/docs/introduction/contributing#setting-up-the-development-environment","html":"\n<ol>\n<li>\n<p>Clone your fork of the repository:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"Terminal\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clone</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/yourusername/starknet.go.git</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> starknet.go</span></span></code></pre>\n</li>\n<li>\n<p>Add the original repository as an upstream remote:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"Terminal\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> remote</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> upstream</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/NethermindEth/starknet.go.git</span></span></code></pre>\n</li>\n<li>\n<p>Install dependencies:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"Terminal\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mod</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> download</span></span></code></pre>\n</li>\n</ol>\n","isPage":false,"text":"\n\n\nClone your fork of the repository:\ngit clone https://github.com/yourusername/starknet.go.git\ncd starknet.go\n\n\nAdd the original repository as an upstream remote:\ngit remote add upstream https://github.com/NethermindEth/starknet.go.git\n\n\nInstall dependencies:\ngo mod download\n\n\n","title":"Setting Up the Development Environment","titles":["Contributing to Starknet.go","Development Setup"]},"105":{"href":"/docs/introduction/contributing#running-tests","html":"\n<p>Run the test suite to ensure everything is working correctly:</p>","isPage":false,"text":"\nRun the test suite to ensure everything is working correctly:","title":"Running Tests","titles":["Contributing to Starknet.go","Development Setup"]},"106":{"href":"/docs/introduction/getting-started#get-started","html":"</header>\n<p>This guide will help you start using Starknet.go in your Go project. We&#x27;ll walk through a simple example to demonstrate how to connect to Starknet and perform basic operations.</p>\n","isPage":true,"text":"\nThis guide will help you start using Starknet.go in your Go project. We&#x27;ll walk through a simple example to demonstrate how to connect to Starknet and perform basic operations.\n","title":"Get started","titles":[]},"107":{"href":"/docs/introduction/getting-started#prerequisites","html":"\n<p>Before you begin, make sure you have:</p>\n<ul>\n<li>Installed Go 1.20 or higher</li>\n<li><a href=\"/docs/introduction/installation\">Installed Starknet.go</a></li>\n<li>Basic understanding of Go programming</li>\n</ul>\n","isPage":false,"text":"\nBefore you begin, make sure you have:\n\nInstalled Go 1.20 or higher\nInstalled Starknet.go\nBasic understanding of Go programming\n\n","title":"Prerequisites","titles":["Get started"]},"108":{"href":"/docs/introduction/getting-started#creating-your-first-starknetgo-application","html":"\n<p>Let&#x27;s create a simple application that connects to Starknet and retrieves the latest block number.</p>\n","isPage":false,"text":"\nLet&#x27;s create a simple application that connects to Starknet and retrieves the latest block number.\n","title":"Creating Your First Starknet.go Application","titles":["Get started"]},"109":{"href":"/docs/introduction/getting-started#step-1-set-up-your-project","html":"\n<p>Create a new directory for your project and initialize a Go module:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"Terminal\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mkdir</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> my-starknet-app</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> my-starknet-app</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mod</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> init</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> my-starknet-app</span></span></code></pre>\n","isPage":false,"text":"\nCreate a new directory for your project and initialize a Go module:\nmkdir my-starknet-app\ncd my-starknet-app\ngo mod init my-starknet-app\n","title":"Step 1: Set up your project","titles":["Get started","Creating Your First Starknet.go Application"]},"110":{"href":"/docs/introduction/getting-started#step-2-install-dependencies","html":"\n<p>Add Starknet.go to your project:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"Terminal\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> github.com/NethermindEth/starknet.go</span></span></code></pre>\n","isPage":false,"text":"\nAdd Starknet.go to your project:\ngo get github.com/NethermindEth/starknet.go\n","title":"Step 2: Install dependencies","titles":["Get started","Creating Your First Starknet.go Application"]},"111":{"href":"/docs/introduction/getting-started#step-3-create-the-main-application","html":"\n<p>Create a new file <code>main.go</code> with the following code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"main.go\" data-lang=\"go\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize connection to RPC provider</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Replace with your preferred Starknet node URL</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://your-starknet-node-url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Established connection with the client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get the latest block number</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    blockNumber, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BlockNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Latest block number: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, blockNumber)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nCreate a new file main.go with the following code:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/rpc&quot;\n)\n \nfunc main() {\n    // Initialize connection to RPC provider\n    // Replace with your preferred Starknet node URL\n    client, err := rpc.NewProvider(&quot;https://your-starknet-node-url&quot;)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Println(&quot;Established connection with the client&quot;)\n \n    // Get the latest block number\n    blockNumber, err := client.BlockNumber(context.Background())\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Latest block number: %d\\n&quot;, blockNumber)\n}\n","title":"Step 3: Create the main application","titles":["Get started","Creating Your First Starknet.go Application"]},"112":{"href":"/docs/introduction/getting-started#step-4-run-the-application","html":"\n<p>Run your application:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"Terminal\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n<p>You should see output similar to:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">Established connection with the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">Latest block number: 123456</span></span></code></pre>\n","isPage":false,"text":"\nRun your application:\ngo run main.go\nYou should see output similar to:\nEstablished connection with the client\nLatest block number: 123456\n","title":"Step 4: Run the application","titles":["Get started","Creating Your First Starknet.go Application"]},"113":{"href":"/docs/introduction/getting-started#next-steps","html":"\n<p>Now that you have a basic application working, you can explore more features:</p>\n<ol>\n<li><a href=\"/docs/client/configuration\">Client Configuration</a> - Learn how to configure your Starknet client</li>\n<li><a href=\"/docs/client/methods\">Client Methods</a> - Explore available methods for interacting with Starknet</li>\n<li><a href=\"/docs/client/examples\">Examples</a> - See more examples of using Starknet.go</li>\n</ol>\n","isPage":false,"text":"\nNow that you have a basic application working, you can explore more features:\n\nClient Configuration - Learn how to configure your Starknet client\nClient Methods - Explore available methods for interacting with Starknet\nExamples - See more examples of using Starknet.go\n\n","title":"Next Steps","titles":["Get started"]},"114":{"href":"/docs/introduction/getting-started#troubleshooting","html":"\n<p>If you encounter any issues:</p>\n<ol>\n<li>Make sure your Starknet node URL is correct and accessible</li>\n<li>Check that you have the latest version of Starknet.go installed</li>\n<li>Verify your Go version meets the minimum requirement (1.20 or higher)</li>\n<li>Check the <a href=\"/docs/introduction/installation\">documentation</a> for more detailed setup instructions</li>\n</ol>","isPage":false,"text":"\nIf you encounter any issues:\n\nMake sure your Starknet node URL is correct and accessible\nCheck that you have the latest version of Starknet.go installed\nVerify your Go version meets the minimum requirement (1.20 or higher)\nCheck the documentation for more detailed setup instructions\n","title":"Troubleshooting","titles":["Get started"]},"115":{"href":"/docs/introduction/installation#installation","html":"</header>\n<p>Starknet.go is a Go library for interacting with the Starknet blockchain. This guide will help you set up Starknet.go in your Go project.</p>\n","isPage":true,"text":"\nStarknet.go is a Go library for interacting with the Starknet blockchain. This guide will help you set up Starknet.go in your Go project.\n","title":"Installation","titles":[]},"116":{"href":"/docs/introduction/installation#prerequisites","html":"\n<ul>\n<li>Go 1.20 or higher</li>\n<li>Basic familiarity with Go modules</li>\n</ul>\n","isPage":false,"text":"\n\nGo 1.20 or higher\nBasic familiarity with Go modules\n\n","title":"Prerequisites","titles":["Installation"]},"117":{"href":"/docs/introduction/installation#installing-the-package","html":"\n<p>You can install Starknet.go using the <code>go get</code> command:</p>","isPage":false,"text":"\nYou can install Starknet.go using the go get command:","title":"Installing the Package","titles":["Installation"]},"118":{"href":"/docs/introduction/why-starknet-go#why-starknetgo","html":"</header>\n<p>Starknet.go is a Go library that provides a simple and efficient way to interact with the Starknet blockchain. It is designed to be easy to use, well-documented, and performant.</p>\n","isPage":true,"text":"\nStarknet.go is a Go library that provides a simple and efficient way to interact with the Starknet blockchain. It is designed to be easy to use, well-documented, and performant.\n","title":"Why Starknet.go?","titles":[]},"119":{"href":"/docs/introduction/why-starknet-go#features","html":"\n<ul>\n<li><strong>Complete Starknet API Coverage</strong>: Full implementation of Starknet RPC v0.8.0 spec, including:\n<ul>\n<li>Block and transaction operations</li>\n<li>State and storage queries</li>\n<li>Contract interactions</li>\n<li>Event subscriptions</li>\n<li>Transaction simulation and tracing</li>\n</ul>\n</li>\n<li><strong>WebSocket Support</strong>: Real-time updates through WebSocket subscriptions for:\n<ul>\n<li>Events</li>\n<li>New block headers</li>\n<li>Pending transactions</li>\n<li>Transaction status updates</li>\n</ul>\n</li>\n<li><strong>Type Safety</strong>: Leverage Go&#x27;s strong typing for safer contract interactions</li>\n<li><strong>Performance</strong>: Built with efficiency in mind for high-throughput applications</li>\n<li><strong>Easy Integration</strong>: Simple to incorporate into existing Go applications</li>\n<li><strong>Well-Documented</strong>: Comprehensive documentation and examples</li>\n<li><strong>Community Support</strong>: Active development and responsive community</li>\n</ul>\n","isPage":false,"text":"\n\nComplete Starknet API Coverage: Full implementation of Starknet RPC v0.8.0 spec, including:\n\nBlock and transaction operations\nState and storage queries\nContract interactions\nEvent subscriptions\nTransaction simulation and tracing\n\n\nWebSocket Support: Real-time updates through WebSocket subscriptions for:\n\nEvents\nNew block headers\nPending transactions\nTransaction status updates\n\n\nType Safety: Leverage Go&#x27;s strong typing for safer contract interactions\nPerformance: Built with efficiency in mind for high-throughput applications\nEasy Integration: Simple to incorporate into existing Go applications\nWell-Documented: Comprehensive documentation and examples\nCommunity Support: Active development and responsive community\n\n","title":"Features","titles":["Why Starknet.go?"]},"120":{"href":"/docs/introduction/why-starknet-go#use-cases","html":"\n<p>Starknet.go is ideal for:</p>\n<ul>\n<li>Building backend services that interact with Starknet</li>\n<li>Developing tools for Starknet blockchain analysis</li>\n<li>Creating automated trading or DeFi applications</li>\n<li>Implementing wallet functionality in Go applications</li>\n<li>Integrating Starknet capabilities into existing Go infrastructure</li>\n<li>Building real-time monitoring and analytics tools</li>\n<li>Developing automated testing and deployment pipelines</li>\n</ul>\n","isPage":false,"text":"\nStarknet.go is ideal for:\n\nBuilding backend services that interact with Starknet\nDeveloping tools for Starknet blockchain analysis\nCreating automated trading or DeFi applications\nImplementing wallet functionality in Go applications\nIntegrating Starknet capabilities into existing Go infrastructure\nBuilding real-time monitoring and analytics tools\nDeveloping automated testing and deployment pipelines\n\n","title":"Use Cases","titles":["Why Starknet.go?"]},"121":{"href":"/docs/introduction/why-starknet-go#getting-started","html":"\n<p>To start using Starknet.go, check out our <a href=\"/docs/introduction/installation\">Installation Guide</a> and <a href=\"/docs/introduction/getting-started\">Getting Started</a> documentation.</p>\n","isPage":false,"text":"\nTo start using Starknet.go, check out our Installation Guide and Getting Started documentation.\n","title":"Getting Started","titles":["Why Starknet.go?"]},"122":{"href":"/docs/introduction/why-starknet-go#example-applications","html":"\n<p>The library includes several example applications to help you get started:</p>\n<ul>\n<li><strong>Simple Contract Calls</strong>: Basic contract interaction examples</li>\n<li><strong>Account Deployment</strong>: Deploy new account contracts on testnet</li>\n<li><strong>Transaction Invocation</strong>: Add new invoke transactions</li>\n<li><strong>Contract Declaration</strong>: Add new contracts to the network</li>\n<li><strong>UDC Deployment</strong>: Deploy contracts using Universal Deployer Contract</li>\n<li><strong>Typed Data</strong>: Sign and verify typed data</li>\n<li><strong>WebSocket Integration</strong>: Subscribe to real-time updates</li>\n</ul>\n","isPage":false,"text":"\nThe library includes several example applications to help you get started:\n\nSimple Contract Calls: Basic contract interaction examples\nAccount Deployment: Deploy new account contracts on testnet\nTransaction Invocation: Add new invoke transactions\nContract Declaration: Add new contracts to the network\nUDC Deployment: Deploy contracts using Universal Deployer Contract\nTyped Data: Sign and verify typed data\nWebSocket Integration: Subscribe to real-time updates\n\n","title":"Example Applications","titles":["Why Starknet.go?","Getting Started"]},"123":{"href":"/docs/introduction/why-starknet-go#community","html":"\n<p>Join our community on <a href=\"https://t.me/StarknetGo\">Telegram</a> or follow us on <a href=\"https://x.com/NethermindStark\">Twitter</a> to stay updated with the latest developments.</p>\n","isPage":false,"text":"\nJoin our community on Telegram or follow us on Twitter to stay updated with the latest developments.\n","title":"Community","titles":["Why Starknet.go?"]},"124":{"href":"/docs/introduction/why-starknet-go#contributing","html":"\n<p>We welcome contributions from the community! Check out our <a href=\"https://github.com/NethermindEth/starknet.go/blob/main/CONTRIBUTING.md\">contributing guide</a> for more information on how to get involved.</p>","isPage":false,"text":"\nWe welcome contributions from the community! Check out our contributing guide for more information on how to get involved.","title":"Contributing","titles":["Why Starknet.go?"]},"125":{"href":"/docs/rpc/examples#rpc-examples","html":"</header>\n<p>The RPC examples submodule provides examples of how to use the Starknet RPC.</p>\n","isPage":true,"text":"\nThe RPC examples submodule provides examples of how to use the Starknet RPC.\n","title":"RPC Examples","titles":[]},"126":{"href":"/docs/rpc/examples#basic-examples","html":"\n","isPage":false,"text":"\n","title":"Basic Examples","titles":["RPC Examples"]},"127":{"href":"/docs/rpc/examples#getting-a-block","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get a block by number</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBlockByNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Block hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Hash)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Block number: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Number)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Block timestamp: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Timestamp)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/rpc&quot;\n)\n \nfunc main() {\n    // Get a block by number\n    block, err := rpc.GetBlockByNumber(1)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Block hash: %s\\n&quot;, block.Hash)\n    fmt.Printf(&quot;Block number: %d\\n&quot;, block.Number)\n    fmt.Printf(&quot;Block timestamp: %d\\n&quot;, block.Timestamp)\n}\n","title":"Getting a Block","titles":["RPC Examples","Basic Examples"]},"128":{"href":"/docs/rpc/examples#getting-a-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get a transaction by hash</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tx, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetTransactionByHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Type)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction status: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Status)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Hash)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/rpc&quot;\n)\n \nfunc main() {\n    // Get a transaction by hash\n    tx, err := rpc.GetTransactionByHash(&quot;0x123...&quot;)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Transaction type: %s\\n&quot;, tx.Type)\n    fmt.Printf(&quot;Transaction status: %s\\n&quot;, tx.Status)\n    fmt.Printf(&quot;Transaction hash: %s\\n&quot;, tx.Hash)\n}\n","title":"Getting a Transaction","titles":["RPC Examples","Basic Examples"]},"129":{"href":"/docs/rpc/examples#advanced-examples","html":"\n","isPage":false,"text":"\n","title":"Advanced Examples","titles":["RPC Examples"]},"130":{"href":"/docs/rpc/examples#sending-a-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a transaction</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// contract address</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// entry point selector</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xabc...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// calldata</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1000000000000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// max fee</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// version</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// nonce</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Send the transaction</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    txHash, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction sent with hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, txHash)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/rpc&quot;\n)\n \nfunc main() {\n    // Create a transaction\n    tx := rpc.NewTransaction(\n        &quot;0x456...&quot;, // contract address\n        &quot;0x789...&quot;, // entry point selector\n        []string{&quot;0xabc...&quot;}, // calldata\n        &quot;1000000000000000&quot;, // max fee\n        &quot;0x1&quot;, // version\n        &quot;0x1&quot;, // nonce\n    )\n \n    // Send the transaction\n    txHash, err := rpc.SendTransaction(tx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Transaction sent with hash: %s\\n&quot;, txHash)\n}\n","title":"Sending a Transaction","titles":["RPC Examples","Advanced Examples"]},"131":{"href":"/docs/rpc/examples#calling-a-contract","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a contract</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// contract address</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// entry point selector</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xabc...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// calldata</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Call result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/rpc&quot;\n)\n \nfunc main() {\n    // Call a contract\n    result, err := rpc.CallContract(\n        &quot;0x456...&quot;, // contract address\n        &quot;0x789...&quot;, // entry point selector\n        []string{&quot;0xabc...&quot;}, // calldata\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Call result: %s\\n&quot;, result)\n}\n","title":"Calling a Contract","titles":["RPC Examples","Advanced Examples"]},"132":{"href":"/docs/rpc/examples#getting-contract-storage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get contract storage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    storage, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetContractStorage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// contract address</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// key</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Storage value: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, storage)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span></span></code></pre>","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/rpc&quot;\n)\n \nfunc main() {\n    // Get contract storage\n    storage, err := rpc.GetContractStorage(\n        &quot;0x456...&quot;, // contract address\n        &quot;0x789...&quot;, // key\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Storage value: %s\\n&quot;, storage)\n} ","title":"Getting Contract Storage","titles":["RPC Examples","Advanced Examples"]},"133":{"href":"/docs/rpc#rpc-package","html":"</header>\n<p>The RPC package provides functionality for interacting with Starknet nodes using JSON-RPC. This package contains various components and utilities for making RPC calls to Starknet nodes.</p>\n","isPage":true,"text":"\nThe RPC package provides functionality for interacting with Starknet nodes using JSON-RPC. This package contains various components and utilities for making RPC calls to Starknet nodes.\n","title":"RPC Package","titles":[]},"134":{"href":"/docs/rpc#overview","html":"\n<p>The RPC package includes:</p>\n<ul>\n<li>RPC methods</li>\n<li>RPC examples</li>\n<li>RPC utilities</li>\n</ul>\n","isPage":false,"text":"\nThe RPC package includes:\n\nRPC methods\nRPC examples\nRPC utilities\n\n","title":"Overview","titles":["RPC Package"]},"135":{"href":"/docs/rpc#available-submodules","html":"\n<ul>\n<li><a href=\"/docs/rpc/methods\">RPC Methods</a></li>\n<li><a href=\"/docs/rpc/examples\">RPC Examples</a></li>\n</ul>\n","isPage":false,"text":"\n\nRPC Methods\nRPC Examples\n\n","title":"Available Submodules","titles":["RPC Package"]},"136":{"href":"/docs/rpc#getting-started","html":"\n<p>To use the RPC package, import it in your Go code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/rpc</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span></code></pre>\n","isPage":false,"text":"\nTo use the RPC package, import it in your Go code:\nimport &quot;github.com/NethermindEth/starknet.go/rpc&quot;\n","title":"Getting Started","titles":["RPC Package"]},"137":{"href":"/docs/rpc#version","html":"\n<p>This documentation is based on version v0.8.1 of the Starknet.go library.</p>","isPage":false,"text":"\nThis documentation is based on version v0.8.1 of the Starknet.go library.","title":"Version","titles":["RPC Package"]},"138":{"href":"/docs/rpc/methods#rpc-methods","html":"</header>\n<p>The RPC methods submodule provides functionality for making RPC calls to Starknet nodes.</p>\n","isPage":true,"text":"\nThe RPC methods submodule provides functionality for making RPC calls to Starknet nodes.\n","title":"RPC Methods","titles":[]},"139":{"href":"/docs/rpc/methods#block-methods","html":"\n","isPage":false,"text":"\n","title":"Block Methods","titles":["RPC Methods"]},"140":{"href":"/docs/rpc/methods#get-block-by-number","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBlockByNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(blockNumber)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nblock, err := rpc.GetBlockByNumber(blockNumber)\nif err != nil {\n    // Handle error\n}\n","title":"Get Block by Number","titles":["RPC Methods","Block Methods"]},"141":{"href":"/docs/rpc/methods#get-block-by-hash","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBlockByHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(blockHash)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nblock, err := rpc.GetBlockByHash(blockHash)\nif err != nil {\n    // Handle error\n}\n","title":"Get Block by Hash","titles":["RPC Methods","Block Methods"]},"142":{"href":"/docs/rpc/methods#get-latest-block","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetLatestBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nblock, err := rpc.GetLatestBlock()\nif err != nil {\n    // Handle error\n}\n","title":"Get Latest Block","titles":["RPC Methods","Block Methods"]},"143":{"href":"/docs/rpc/methods#transaction-methods","html":"\n","isPage":false,"text":"\n","title":"Transaction Methods","titles":["RPC Methods"]},"144":{"href":"/docs/rpc/methods#get-transaction-by-hash","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tx, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetTransactionByHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txHash)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntx, err := rpc.GetTransactionByHash(txHash)\nif err != nil {\n    // Handle error\n}\n","title":"Get Transaction by Hash","titles":["RPC Methods","Transaction Methods"]},"145":{"href":"/docs/rpc/methods#get-transaction-receipt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">receipt, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetTransactionReceipt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txHash)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nreceipt, err := rpc.GetTransactionReceipt(txHash)\nif err != nil {\n    // Handle error\n}\n","title":"Get Transaction Receipt","titles":["RPC Methods","Transaction Methods"]},"146":{"href":"/docs/rpc/methods#send-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">txHash, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntxHash, err := rpc.SendTransaction(tx)\nif err != nil {\n    // Handle error\n}\n","title":"Send Transaction","titles":["RPC Methods","Transaction Methods"]},"147":{"href":"/docs/rpc/methods#contract-methods","html":"\n","isPage":false,"text":"\n","title":"Contract Methods","titles":["RPC Methods"]},"148":{"href":"/docs/rpc/methods#get-contract-code","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">code, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetContractCode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(contractAddress)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ncode, err := rpc.GetContractCode(contractAddress)\nif err != nil {\n    // Handle error\n}\n","title":"Get Contract Code","titles":["RPC Methods","Contract Methods"]},"149":{"href":"/docs/rpc/methods#get-contract-storage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">storage, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetContractStorage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(contractAddress, key)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstorage, err := rpc.GetContractStorage(contractAddress, key)\nif err != nil {\n    // Handle error\n}\n","title":"Get Contract Storage","titles":["RPC Methods","Contract Methods"]},"150":{"href":"/docs/rpc/methods#call-contract","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(contractAddress, entryPointSelector, calldata)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nresult, err := rpc.CallContract(contractAddress, entryPointSelector, calldata)\nif err != nil {\n    // Handle error\n}\n","title":"Call Contract","titles":["RPC Methods","Contract Methods"]},"151":{"href":"/docs/rpc/methods#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the latest block</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetLatestBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Latest block number: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Number)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Latest block hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Hash)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get a transaction</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tx, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetTransactionByHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Type)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction status: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Status)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Call a contract</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rpc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// contract address</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// entry point selector</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xabc...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// calldata</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Call result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span></code></pre>","isPage":false,"text":"\n// Get the latest block\nblock, err := rpc.GetLatestBlock()\nif err != nil {\n    log.Fatal(err)\n}\n \nfmt.Printf(&quot;Latest block number: %d\\n&quot;, block.Number)\nfmt.Printf(&quot;Latest block hash: %s\\n&quot;, block.Hash)\n \n// Get a transaction\ntx, err := rpc.GetTransactionByHash(&quot;0x123...&quot;)\nif err != nil {\n    log.Fatal(err)\n}\n \nfmt.Printf(&quot;Transaction type: %s\\n&quot;, tx.Type)\nfmt.Printf(&quot;Transaction status: %s\\n&quot;, tx.Status)\n \n// Call a contract\nresult, err := rpc.CallContract(\n    &quot;0x456...&quot;, // contract address\n    &quot;0x789...&quot;, // entry point selector\n    []string{&quot;0xabc...&quot;}, // calldata\n)\nif err != nil {\n    log.Fatal(err)\n}\n \nfmt.Printf(&quot;Call result: %s\\n&quot;, result)","title":"Example Usage","titles":["RPC Methods"]},"152":{"href":"/docs/devnet#devnet-package","html":"</header>\n<p>The Devnet package provides functionality for working with Starknet development networks. This package contains various components and utilities for managing and interacting with Starknet development networks.</p>\n","isPage":true,"text":"\nThe Devnet package provides functionality for working with Starknet development networks. This package contains various components and utilities for managing and interacting with Starknet development networks.\n","title":"Devnet Package","titles":[]},"153":{"href":"/docs/devnet#overview","html":"\n<p>The Devnet package includes:</p>\n<ul>\n<li>Devnet setup</li>\n<li>Devnet usage</li>\n<li>Devnet utilities</li>\n</ul>\n","isPage":false,"text":"\nThe Devnet package includes:\n\nDevnet setup\nDevnet usage\nDevnet utilities\n\n","title":"Overview","titles":["Devnet Package"]},"154":{"href":"/docs/devnet#available-submodules","html":"\n<ul>\n<li><a href=\"/docs/devnet/setup\">Devnet Setup</a></li>\n<li><a href=\"/docs/devnet/usage\">Devnet Usage</a></li>\n</ul>\n","isPage":false,"text":"\n\nDevnet Setup\nDevnet Usage\n\n","title":"Available Submodules","titles":["Devnet Package"]},"155":{"href":"/docs/devnet#getting-started","html":"\n<p>To use the Devnet package, import it in your Go code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/devnet</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span></code></pre>\n","isPage":false,"text":"\nTo use the Devnet package, import it in your Go code:\nimport &quot;github.com/NethermindEth/starknet.go/devnet&quot;\n","title":"Getting Started","titles":["Devnet Package"]},"156":{"href":"/docs/devnet#version","html":"\n<p>This documentation is based on version v0.8.1 of the Starknet.go library.</p>","isPage":false,"text":"\nThis documentation is based on version v0.8.1 of the Starknet.go library.","title":"Version","titles":["Devnet Package"]},"157":{"href":"/docs/devnet/setup#devnet-setup","html":"</header>\n<p>The devnet setup submodule provides functionality for setting up Starknet development networks.</p>\n","isPage":true,"text":"\nThe devnet setup submodule provides functionality for setting up Starknet development networks.\n","title":"Devnet Setup","titles":[]},"158":{"href":"/docs/devnet/setup#devnet-configuration","html":"\n<p>The devnet configuration is represented by the <code>DevnetConfig</code> struct, which contains:</p>\n<ul>\n<li>Network name</li>\n<li>Network ID</li>\n<li>Chain ID</li>\n<li>Genesis block</li>\n<li>Genesis accounts</li>\n<li>Genesis contracts</li>\n</ul>\n","isPage":false,"text":"\nThe devnet configuration is represented by the DevnetConfig struct, which contains:\n\nNetwork name\nNetwork ID\nChain ID\nGenesis block\nGenesis accounts\nGenesis contracts\n\n","title":"Devnet Configuration","titles":["Devnet Setup"]},"159":{"href":"/docs/devnet/setup#creating-a-devnet","html":"\n<p>To create a new devnet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">DevnetConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NetworkName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;local&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NetworkID: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_DEV&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    GenesisBlock: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Timestamp: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        GasLimit: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    GenesisAccounts: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Address: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Balance: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1000000000000000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    GenesisContracts: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Address: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Code: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">devnet, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewDevnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTo create a new devnet:\nconfig := devnet.DevnetConfig{\n    NetworkName: &quot;local&quot;,\n    NetworkID: 1,\n    ChainID: &quot;SN_DEV&quot;,\n    GenesisBlock: devnet.GenesisBlock{\n        Timestamp: time.Now().Unix(),\n        GasLimit: 1000000,\n    },\n    GenesisAccounts: []devnet.GenesisAccount{\n        {\n            Address: &quot;0x123...&quot;,\n            Balance: &quot;1000000000000000000&quot;,\n        },\n    },\n    GenesisContracts: []devnet.GenesisContract{\n        {\n            Address: &quot;0x456...&quot;,\n            Code: &quot;0x789...&quot;,\n        },\n    },\n}\n \ndevnet, err := devnet.NewDevnet(config)\nif err != nil {\n    // Handle error\n}\n","title":"Creating a Devnet","titles":["Devnet Setup"]},"160":{"href":"/docs/devnet/setup#configuration-options","html":"\n","isPage":false,"text":"\n","title":"Configuration Options","titles":["Devnet Setup"]},"161":{"href":"/docs/devnet/setup#network-name","html":"\n<p>The network name is the name of the devnet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.NetworkName </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;local&quot;</span></span></code></pre>\n","isPage":false,"text":"\nThe network name is the name of the devnet:\nconfig.NetworkName = &quot;local&quot;\n","title":"Network Name","titles":["Devnet Setup","Configuration Options"]},"162":{"href":"/docs/devnet/setup#network-id","html":"\n<p>The network ID is the ID of the devnet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.NetworkID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span></span></code></pre>\n","isPage":false,"text":"\nThe network ID is the ID of the devnet:\nconfig.NetworkID = 1\n","title":"Network ID","titles":["Devnet Setup","Configuration Options"]},"163":{"href":"/docs/devnet/setup#chain-id","html":"\n<p>The chain ID is the ID of the chain:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.ChainID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;SN_DEV&quot;</span></span></code></pre>\n","isPage":false,"text":"\nThe chain ID is the ID of the chain:\nconfig.ChainID = &quot;SN_DEV&quot;\n","title":"Chain ID","titles":["Devnet Setup","Configuration Options"]},"164":{"href":"/docs/devnet/setup#genesis-block","html":"\n<p>The genesis block is the first block of the devnet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.GenesisBlock </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Timestamp: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    GasLimit: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe genesis block is the first block of the devnet:\nconfig.GenesisBlock = devnet.GenesisBlock{\n    Timestamp: time.Now().Unix(),\n    GasLimit: 1000000,\n}\n","title":"Genesis Block","titles":["Devnet Setup","Configuration Options"]},"165":{"href":"/docs/devnet/setup#genesis-accounts","html":"\n<p>The genesis accounts are the initial accounts of the devnet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.GenesisAccounts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Address: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Balance: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1000000000000000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe genesis accounts are the initial accounts of the devnet:\nconfig.GenesisAccounts = []devnet.GenesisAccount{\n    {\n        Address: &quot;0x123...&quot;,\n        Balance: &quot;1000000000000000000&quot;,\n    },\n}\n","title":"Genesis Accounts","titles":["Devnet Setup","Configuration Options"]},"166":{"href":"/docs/devnet/setup#genesis-contracts","html":"\n<p>The genesis contracts are the initial contracts of the devnet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.GenesisContracts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Address: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Code: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe genesis contracts are the initial contracts of the devnet:\nconfig.GenesisContracts = []devnet.GenesisContract{\n    {\n        Address: &quot;0x456...&quot;,\n        Code: &quot;0x789...&quot;,\n    },\n}\n","title":"Genesis Contracts","titles":["Devnet Setup","Configuration Options"]},"167":{"href":"/docs/devnet/setup#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a new devnet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">DevnetConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NetworkName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;local&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NetworkID: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_DEV&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    GenesisBlock: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Timestamp: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        GasLimit: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    GenesisAccounts: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Address: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Balance: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1000000000000000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    GenesisContracts: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GenesisContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Address: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Code: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">devnet, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewDevnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Start the devnet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Stop the devnet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// Create a new devnet\nconfig := devnet.DevnetConfig{\n    NetworkName: &quot;local&quot;,\n    NetworkID: 1,\n    ChainID: &quot;SN_DEV&quot;,\n    GenesisBlock: devnet.GenesisBlock{\n        Timestamp: time.Now().Unix(),\n        GasLimit: 1000000,\n    },\n    GenesisAccounts: []devnet.GenesisAccount{\n        {\n            Address: &quot;0x123...&quot;,\n            Balance: &quot;1000000000000000000&quot;,\n        },\n    },\n    GenesisContracts: []devnet.GenesisContract{\n        {\n            Address: &quot;0x456...&quot;,\n            Code: &quot;0x789...&quot;,\n        },\n    },\n}\n \ndevnet, err := devnet.NewDevnet(config)\nif err != nil {\n    log.Fatal(err)\n}\n \n// Start the devnet\nerr = devnet.Start()\nif err != nil {\n    log.Fatal(err)\n}\n \n// Stop the devnet\nerr = devnet.Stop()\nif err != nil {\n    log.Fatal(err)\n}","title":"Example Usage","titles":["Devnet Setup"]},"168":{"href":"/docs/devnet/usage#devnet-usage","html":"</header>\n<p>The devnet usage submodule provides functionality for using Starknet development networks.</p>\n","isPage":true,"text":"\nThe devnet usage submodule provides functionality for using Starknet development networks.\n","title":"Devnet Usage","titles":[]},"169":{"href":"/docs/devnet/usage#devnet-methods","html":"\n","isPage":false,"text":"\n","title":"Devnet Methods","titles":["Devnet Usage"]},"170":{"href":"/docs/devnet/usage#start-devnet","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nerr := devnet.Start()\nif err != nil {\n    // Handle error\n}\n","title":"Start Devnet","titles":["Devnet Usage","Devnet Methods"]},"171":{"href":"/docs/devnet/usage#stop-devnet","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nerr := devnet.Stop()\nif err != nil {\n    // Handle error\n}\n","title":"Stop Devnet","titles":["Devnet Usage","Devnet Methods"]},"172":{"href":"/docs/devnet/usage#reset-devnet","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Reset</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nerr := devnet.Reset()\nif err != nil {\n    // Handle error\n}\n","title":"Reset Devnet","titles":["Devnet Usage","Devnet Methods"]},"173":{"href":"/docs/devnet/usage#get-devnet-status","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetStatus</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nstatus := devnet.GetStatus()\n","title":"Get Devnet Status","titles":["Devnet Usage","Devnet Methods"]},"174":{"href":"/docs/devnet/usage#get-devnet-accounts","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">accounts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetAccounts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\naccounts := devnet.GetAccounts()\n","title":"Get Devnet Accounts","titles":["Devnet Usage","Devnet Methods"]},"175":{"href":"/docs/devnet/usage#get-devnet-contracts","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">contracts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetContracts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\ncontracts := devnet.GetContracts()\n","title":"Get Devnet Contracts","titles":["Devnet Usage","Devnet Methods"]},"176":{"href":"/docs/devnet/usage#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a new devnet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">devnet, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewDevnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">devnet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">DevnetConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NetworkName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;local&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NetworkID: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_DEV&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Start the devnet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the devnet status</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetStatus</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Devnet status: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, status)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the devnet accounts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">accounts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetAccounts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, account </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> accounts {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Account address: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, account.Address)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Account balance: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, account.Balance)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the devnet contracts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">contracts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetContracts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, contract </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> contracts {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Contract address: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, contract.Address)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Contract code: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, contract.Code)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Reset the devnet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Reset</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Stop the devnet</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> devnet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// Create a new devnet\ndevnet, err := devnet.NewDevnet(devnet.DevnetConfig{\n    NetworkName: &quot;local&quot;,\n    NetworkID: 1,\n    ChainID: &quot;SN_DEV&quot;,\n})\nif err != nil {\n    log.Fatal(err)\n}\n \n// Start the devnet\nerr = devnet.Start()\nif err != nil {\n    log.Fatal(err)\n}\n \n// Get the devnet status\nstatus := devnet.GetStatus()\nfmt.Printf(&quot;Devnet status: %s\\n&quot;, status)\n \n// Get the devnet accounts\naccounts := devnet.GetAccounts()\nfor _, account := range accounts {\n    fmt.Printf(&quot;Account address: %s\\n&quot;, account.Address)\n    fmt.Printf(&quot;Account balance: %s\\n&quot;, account.Balance)\n}\n \n// Get the devnet contracts\ncontracts := devnet.GetContracts()\nfor _, contract := range contracts {\n    fmt.Printf(&quot;Contract address: %s\\n&quot;, contract.Address)\n    fmt.Printf(&quot;Contract code: %s\\n&quot;, contract.Code)\n}\n \n// Reset the devnet\nerr = devnet.Reset()\nif err != nil {\n    log.Fatal(err)\n}\n \n// Stop the devnet\nerr = devnet.Stop()\nif err != nil {\n    log.Fatal(err)\n}","title":"Example Usage","titles":["Devnet Usage"]},"177":{"href":"/docs/client/configuration#client-configuration","html":"</header>\n<p>The client configuration submodule provides functionality for configuring Starknet clients.</p>\n","isPage":true,"text":"\nThe client configuration submodule provides functionality for configuring Starknet clients.\n","title":"Client Configuration","titles":[]},"178":{"href":"/docs/client/configuration#client-configuration-1","html":"\n<p>The client configuration is represented by the <code>ClientConfig</code> struct, which contains:</p>\n<ul>\n<li>Node URL</li>\n<li>Chain ID</li>\n<li>Timeout</li>\n<li>Retry configuration</li>\n<li>Logging configuration</li>\n</ul>\n","isPage":false,"text":"\nThe client configuration is represented by the ClientConfig struct, which contains:\n\nNode URL\nChain ID\nTimeout\nRetry configuration\nLogging configuration\n\n","title":"Client Configuration","titles":["Client Configuration"]},"179":{"href":"/docs/client/configuration#creating-a-client","html":"\n<p>To create a new client:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NodeURL: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://your-node-url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_MAIN&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Timeout: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTo create a new client:\nconfig := client.ClientConfig{\n    NodeURL: &quot;https://your-node-url&quot;,\n    ChainID: &quot;SN_MAIN&quot;,\n    Timeout: 30 * time.Second,\n}\n \nclient, err := client.NewClient(config)\nif err != nil {\n    // Handle error\n}\n","title":"Creating a Client","titles":["Client Configuration"]},"180":{"href":"/docs/client/configuration#configuration-options","html":"\n","isPage":false,"text":"\n","title":"Configuration Options","titles":["Client Configuration"]},"181":{"href":"/docs/client/configuration#node-url","html":"\n<p>The node URL is the URL of the Starknet node to connect to:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.NodeURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;https://your-node-url&quot;</span></span></code></pre>\n","isPage":false,"text":"\nThe node URL is the URL of the Starknet node to connect to:\nconfig.NodeURL = &quot;https://your-node-url&quot;\n","title":"Node URL","titles":["Client Configuration","Configuration Options"]},"182":{"href":"/docs/client/configuration#chain-id","html":"\n<p>The chain ID is the ID of the Starknet chain to connect to:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.ChainID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;SN_MAIN&quot;</span></span></code></pre>\n","isPage":false,"text":"\nThe chain ID is the ID of the Starknet chain to connect to:\nconfig.ChainID = &quot;SN_MAIN&quot;\n","title":"Chain ID","titles":["Client Configuration","Configuration Options"]},"183":{"href":"/docs/client/configuration#timeout","html":"\n<p>The timeout is the maximum time to wait for a response:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.Timeout </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second</span></span></code></pre>\n","isPage":false,"text":"\nThe timeout is the maximum time to wait for a response:\nconfig.Timeout = 30 * time.Second\n","title":"Timeout","titles":["Client Configuration","Configuration Options"]},"184":{"href":"/docs/client/configuration#retry-configuration","html":"\n<p>The retry configuration is used to configure retry behavior:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.RetryConfig </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    MaxRetries: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    RetryDelay: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe retry configuration is used to configure retry behavior:\nconfig.RetryConfig = client.RetryConfig{\n    MaxRetries: 3,\n    RetryDelay: 1 * time.Second,\n}\n","title":"Retry Configuration","titles":["Client Configuration","Configuration Options"]},"185":{"href":"/docs/client/configuration#logging-configuration","html":"\n<p>The logging configuration is used to configure logging behavior:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.LoggingConfig </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Level: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;info&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Format: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe logging configuration is used to configure logging behavior:\nconfig.LoggingConfig = client.LoggingConfig{\n    Level: &quot;info&quot;,\n    Format: &quot;json&quot;,\n}\n","title":"Logging Configuration","titles":["Client Configuration","Configuration Options"]},"186":{"href":"/docs/client/configuration#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a new client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NodeURL: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://your-node-url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_MAIN&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Timeout: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    RetryConfig: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxRetries: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RetryDelay: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    LoggingConfig: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Level: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;info&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Format: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Use the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBlockByNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Block hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Hash)</span></span></code></pre>","isPage":false,"text":"\n// Create a new client\nconfig := client.ClientConfig{\n    NodeURL: &quot;https://your-node-url&quot;,\n    ChainID: &quot;SN_MAIN&quot;,\n    Timeout: 30 * time.Second,\n    RetryConfig: client.RetryConfig{\n        MaxRetries: 3,\n        RetryDelay: 1 * time.Second,\n    },\n    LoggingConfig: client.LoggingConfig{\n        Level: &quot;info&quot;,\n        Format: &quot;json&quot;,\n    },\n}\n \nclient, err := client.NewClient(config)\nif err != nil {\n    log.Fatal(err)\n}\n \n// Use the client\nblock, err := client.GetBlockByNumber(1)\nif err != nil {\n    log.Fatal(err)\n}\n \nfmt.Printf(&quot;Block hash: %s\\n&quot;, block.Hash)","title":"Example Usage","titles":["Client Configuration"]},"187":{"href":"/docs/client/examples#client-examples","html":"</header>\n<p>The client examples submodule provides examples of how to use the Starknet client.</p>\n","isPage":true,"text":"\nThe client examples submodule provides examples of how to use the Starknet client.\n","title":"Client Examples","titles":[]},"188":{"href":"/docs/client/examples#basic-examples","html":"\n","isPage":false,"text":"\n","title":"Basic Examples","titles":["Client Examples"]},"189":{"href":"/docs/client/examples#creating-a-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NodeURL: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://your-node-url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_MAIN&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Timeout: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get the latest block</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetLatestBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Latest block number: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Number)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;time&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/client&quot;\n)\n \nfunc main() {\n    // Create a new client\n    config := client.ClientConfig{\n        NodeURL: &quot;https://your-node-url&quot;,\n        ChainID: &quot;SN_MAIN&quot;,\n        Timeout: 30 * time.Second,\n    }\n \n    client, err := client.NewClient(config)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Get the latest block\n    block, err := client.GetLatestBlock()\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Latest block number: %d\\n&quot;, block.Number)\n}\n","title":"Creating a Client","titles":["Client Examples","Basic Examples"]},"190":{"href":"/docs/client/examples#getting-a-block","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NodeURL: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://your-node-url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_MAIN&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get a block by number</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBlockByNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Block hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Hash)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Block number: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Number)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Block timestamp: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Timestamp)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/client&quot;\n)\n \nfunc main() {\n    // Create a new client\n    client, err := client.NewClient(client.ClientConfig{\n        NodeURL: &quot;https://your-node-url&quot;,\n        ChainID: &quot;SN_MAIN&quot;,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Get a block by number\n    block, err := client.GetBlockByNumber(1)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Block hash: %s\\n&quot;, block.Hash)\n    fmt.Printf(&quot;Block number: %d\\n&quot;, block.Number)\n    fmt.Printf(&quot;Block timestamp: %d\\n&quot;, block.Timestamp)\n}\n","title":"Getting a Block","titles":["Client Examples","Basic Examples"]},"191":{"href":"/docs/client/examples#getting-a-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NodeURL: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://your-node-url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_MAIN&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get a transaction by hash</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tx, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetTransactionByHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Type)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction status: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Status)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Hash)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/client&quot;\n)\n \nfunc main() {\n    // Create a new client\n    client, err := client.NewClient(client.ClientConfig{\n        NodeURL: &quot;https://your-node-url&quot;,\n        ChainID: &quot;SN_MAIN&quot;,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Get a transaction by hash\n    tx, err := client.GetTransactionByHash(&quot;0x123...&quot;)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Transaction type: %s\\n&quot;, tx.Type)\n    fmt.Printf(&quot;Transaction status: %s\\n&quot;, tx.Status)\n    fmt.Printf(&quot;Transaction hash: %s\\n&quot;, tx.Hash)\n}\n","title":"Getting a Transaction","titles":["Client Examples","Basic Examples"]},"192":{"href":"/docs/client/examples#advanced-examples","html":"\n","isPage":false,"text":"\n","title":"Advanced Examples","titles":["Client Examples"]},"193":{"href":"/docs/client/examples#sending-a-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NodeURL: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://your-node-url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_MAIN&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a transaction</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// contract address</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// entry point selector</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xabc...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// calldata</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1000000000000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// max fee</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// version</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// nonce</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Send the transaction</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    txHash, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction sent with hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, txHash)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/client&quot;\n)\n \nfunc main() {\n    // Create a new client\n    client, err := client.NewClient(client.ClientConfig{\n        NodeURL: &quot;https://your-node-url&quot;,\n        ChainID: &quot;SN_MAIN&quot;,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Create a transaction\n    tx := client.NewTransaction(\n        &quot;0x456...&quot;, // contract address\n        &quot;0x789...&quot;, // entry point selector\n        []string{&quot;0xabc...&quot;}, // calldata\n        &quot;1000000000000000&quot;, // max fee\n        &quot;0x1&quot;, // version\n        &quot;0x1&quot;, // nonce\n    )\n \n    // Send the transaction\n    txHash, err := client.SendTransaction(tx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Transaction sent with hash: %s\\n&quot;, txHash)\n}\n","title":"Sending a Transaction","titles":["Client Examples","Advanced Examples"]},"194":{"href":"/docs/client/examples#calling-a-contract","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NodeURL: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://your-node-url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ChainID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_MAIN&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a contract</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// contract address</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// entry point selector</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xabc...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// calldata</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Call result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span></span></code></pre>","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/NethermindEth/starknet.go/client&quot;\n)\n \nfunc main() {\n    // Create a new client\n    client, err := client.NewClient(client.ClientConfig{\n        NodeURL: &quot;https://your-node-url&quot;,\n        ChainID: &quot;SN_MAIN&quot;,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Call a contract\n    result, err := client.CallContract(\n        &quot;0x456...&quot;, // contract address\n        &quot;0x789...&quot;, // entry point selector\n        []string{&quot;0xabc...&quot;}, // calldata\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Call result: %s\\n&quot;, result)\n} ","title":"Calling a Contract","titles":["Client Examples","Advanced Examples"]},"195":{"href":"/docs/client#client-package","html":"</header>\n<p>The client package provides functionality for interacting with Starknet nodes. This package contains various components and utilities for managing and interacting with Starknet nodes.</p>\n","isPage":true,"text":"\nThe client package provides functionality for interacting with Starknet nodes. This package contains various components and utilities for managing and interacting with Starknet nodes.\n","title":"Client Package","titles":[]},"196":{"href":"/docs/client#overview","html":"\n<p>The client package includes:</p>\n<ul>\n<li>Client configuration</li>\n<li>Client methods</li>\n<li>Client examples</li>\n</ul>\n","isPage":false,"text":"\nThe client package includes:\n\nClient configuration\nClient methods\nClient examples\n\n","title":"Overview","titles":["Client Package"]},"197":{"href":"/docs/client#available-submodules","html":"\n<ul>\n<li><a href=\"/docs/client/configuration\">Client Configuration</a></li>\n<li><a href=\"/docs/client/methods\">Client Methods</a></li>\n<li><a href=\"/docs/client/examples\">Client Examples</a></li>\n</ul>\n","isPage":false,"text":"\n\nClient Configuration\nClient Methods\nClient Examples\n\n","title":"Available Submodules","titles":["Client Package"]},"198":{"href":"/docs/client#getting-started","html":"\n<p>To use the client package, import it in your Go code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span></code></pre>\n","isPage":false,"text":"\nTo use the client package, import it in your Go code:\nimport &quot;github.com/NethermindEth/starknet.go/client&quot;\n","title":"Getting Started","titles":["Client Package"]},"199":{"href":"/docs/client#version","html":"\n<p>This documentation is based on version v0.8.1 of the Starknet.go library.</p>","isPage":false,"text":"\nThis documentation is based on version v0.8.1 of the Starknet.go library.","title":"Version","titles":["Client Package"]},"200":{"href":"/docs/client/methods#client-methods","html":"</header>\n<p>The client methods submodule provides functionality for interacting with Starknet nodes.</p>\n","isPage":true,"text":"\nThe client methods submodule provides functionality for interacting with Starknet nodes.\n","title":"Client Methods","titles":[]},"201":{"href":"/docs/client/methods#block-methods","html":"\n","isPage":false,"text":"\n","title":"Block Methods","titles":["Client Methods"]},"202":{"href":"/docs/client/methods#get-block-by-number","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBlockByNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(blockNumber) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nblock, err := client.GetBlockByNumber(blockNumber) \nif err != nil { \n    // Handle error\n}\n","title":"Get Block by Number","titles":["Client Methods","Block Methods"]},"203":{"href":"/docs/client/methods#get-block-by-hash","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBlockByHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(blockHash) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nblock, err := client.GetBlockByHash(blockHash) \nif err != nil {\n    // Handle error\n}\n","title":"Get Block by Hash","titles":["Client Methods","Block Methods"]},"204":{"href":"/docs/client/methods#get-latest-block","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetLatestBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nblock, err := client.GetLatestBlock() \nif err != nil {\n    // Handle error\n}\n","title":"Get Latest Block","titles":["Client Methods","Block Methods"]},"205":{"href":"/docs/client/methods#transaction-methods","html":"\n","isPage":false,"text":"\n","title":"Transaction Methods","titles":["Client Methods"]},"206":{"href":"/docs/client/methods#get-transaction-by-hash","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tx, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetTransactionByHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txHash) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntx, err := client.GetTransactionByHash(txHash) \nif err != nil {\n    // Handle error\n}\n","title":"Get Transaction by Hash","titles":["Client Methods","Transaction Methods"]},"207":{"href":"/docs/client/methods#get-transaction-receipt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">receipt, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetTransactionReceipt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txHash) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nreceipt, err := client.GetTransactionReceipt(txHash) \nif err != nil {\n    // Handle error\n}\n","title":"Get Transaction Receipt","titles":["Client Methods","Transaction Methods"]},"208":{"href":"/docs/client/methods#send-transaction","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">txHash, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntxHash, err := client.SendTransaction(tx) \nif err != nil {\n    // Handle error\n}\n","title":"Send Transaction","titles":["Client Methods","Transaction Methods"]},"209":{"href":"/docs/client/methods#contract-methods","html":"\n","isPage":false,"text":"\n","title":"Contract Methods","titles":["Client Methods"]},"210":{"href":"/docs/client/methods#get-contract-code","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">code, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetContractCode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(contractAddress)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ncode, err := client.GetContractCode(contractAddress)\nif err != nil {\n    // Handle error\n}\n","title":"Get Contract Code","titles":["Client Methods","Contract Methods"]},"211":{"href":"/docs/client/methods#get-contract-storage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">storage, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetContractStorage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(contractAddress, key)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstorage, err := client.GetContractStorage(contractAddress, key)\nif err != nil {\n    // Handle error\n}\n","title":"Get Contract Storage","titles":["Client Methods","Contract Methods"]},"212":{"href":"/docs/client/methods#call-contract","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(contractAddress, entryPointSelector, calldata)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nresult, err := client.CallContract(contractAddress, entryPointSelector, calldata)\nif err != nil {\n    // Handle error\n}\n","title":"Call Contract","titles":["Client Methods","Contract Methods"]},"213":{"href":"/docs/client/methods#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get the latest block </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">block, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetLatestBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Latest block number: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Number) </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Latest block hash: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, block.Hash) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get a transaction </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tx, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetTransactionByHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Type) </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Transaction status: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tx.Status) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Call a contract </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">( </span></span>\n<span class=\"line focused\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x456...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// contract address </span></span>\n<span class=\"line focused\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;0x789...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// entry point selector </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xabc...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// calldata </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Call result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result) </span></span></code></pre>","isPage":false,"text":"\n// Get the latest block \nblock, err := client.GetLatestBlock() \nif err != nil {\n    log.Fatal(err)\n}\n \nfmt.Printf(&quot;Latest block number: %d\\n&quot;, block.Number) \nfmt.Printf(&quot;Latest block hash: %s\\n&quot;, block.Hash) \n \n// Get a transaction \ntx, err := client.GetTransactionByHash(&quot;0x123...&quot;) \nif err != nil {\n    log.Fatal(err)\n}\n \nfmt.Printf(&quot;Transaction type: %s\\n&quot;, tx.Type) \nfmt.Printf(&quot;Transaction status: %s\\n&quot;, tx.Status) \n \n// Call a contract \nresult, err := client.CallContract( \n    &quot;0x456...&quot;, // contract address \n    &quot;0x789...&quot;, // entry point selector \n    []string{&quot;0xabc...&quot;}, // calldata \n)\nif err != nil {\n    log.Fatal(err)\n}\n \nfmt.Printf(&quot;Call result: %s\\n&quot;, result) ","title":"Example Usage","titles":["Client Methods"]},"214":{"href":"/docs/utilities/common#common-utilities","html":"</header>\n<p>The common utilities submodule provides functionality for common operations in Starknet.</p>\n","isPage":true,"text":"\nThe common utilities submodule provides functionality for common operations in Starknet.\n","title":"Common Utilities","titles":[]},"215":{"href":"/docs/utilities/common#hex-encodingdecoding","html":"\n","isPage":false,"text":"\n","title":"Hex Encoding/Decoding","titles":["Common Utilities"]},"216":{"href":"/docs/utilities/common#encode-hex","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">hex </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeHex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(bytes)</span></span></code></pre>\n","isPage":false,"text":"\nhex := utils.EncodeHex(bytes)\n","title":"Encode Hex","titles":["Common Utilities","Hex Encoding/Decoding"]},"217":{"href":"/docs/utilities/common#decode-hex","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bytes, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeHex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hex)</span></span></code></pre>\n","isPage":false,"text":"\nbytes, err := utils.DecodeHex(hex)\n","title":"Decode Hex","titles":["Common Utilities","Hex Encoding/Decoding"]},"218":{"href":"/docs/utilities/common#field-element-conversion","html":"\n","isPage":false,"text":"\n","title":"Field Element Conversion","titles":["Common Utilities"]},"219":{"href":"/docs/utilities/common#to-field-element","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fe </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToFieldElement</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value)</span></span></code></pre>\n","isPage":false,"text":"\nfe := utils.ToFieldElement(value)\n","title":"To Field Element","titles":["Common Utilities","Field Element Conversion"]},"220":{"href":"/docs/utilities/common#from-field-element","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FromFieldElement</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fe)</span></span></code></pre>\n","isPage":false,"text":"\nvalue := utils.FromFieldElement(fe)\n","title":"From Field Element","titles":["Common Utilities","Field Element Conversion"]},"221":{"href":"/docs/utilities/common#address-validation","html":"\n","isPage":false,"text":"\n","title":"Address Validation","titles":["Common Utilities"]},"222":{"href":"/docs/utilities/common#validate-address","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValidateAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := utils.ValidateAddress(address)\n","title":"Validate Address","titles":["Common Utilities","Address Validation"]},"223":{"href":"/docs/utilities/common#normalize-address","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">normalized </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NormalizeAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span></code></pre>\n","isPage":false,"text":"\nnormalized := utils.NormalizeAddress(address)\n","title":"Normalize Address","titles":["Common Utilities","Address Validation"]},"224":{"href":"/docs/utilities/common#chain-id-validation","html":"\n","isPage":false,"text":"\n","title":"Chain ID Validation","titles":["Common Utilities"]},"225":{"href":"/docs/utilities/common#validate-chain-id","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValidateChainID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(chainID)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := utils.ValidateChainID(chainID)\n","title":"Validate Chain ID","titles":["Common Utilities","Chain ID Validation"]},"226":{"href":"/docs/utilities/common#get-chain-id","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">chainID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetChainID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nchainID := utils.GetChainID()\n","title":"Get Chain ID","titles":["Common Utilities","Chain ID Validation"]},"227":{"href":"/docs/utilities/common#error-handling","html":"\n","isPage":false,"text":"\n","title":"Error Handling","titles":["Common Utilities"]},"228":{"href":"/docs/utilities/common#is-invalid-address-error","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isInvalid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsInvalidAddressError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span></code></pre>\n","isPage":false,"text":"\nisInvalid := utils.IsInvalidAddressError(err)\n","title":"Is Invalid Address Error","titles":["Common Utilities","Error Handling"]},"229":{"href":"/docs/utilities/common#is-invalid-signature-error","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isInvalid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsInvalidSignatureError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span></code></pre>\n","isPage":false,"text":"\nisInvalid := utils.IsInvalidSignatureError(err)\n","title":"Is Invalid Signature Error","titles":["Common Utilities","Error Handling"]},"230":{"href":"/docs/utilities/common#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode bytes to hex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">hex </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeHex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, Starknet!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decode hex to bytes</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bytes, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeHex</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hex)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Convert to field element</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fe </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToFieldElement</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Convert from field element</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FromFieldElement</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fe)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Validate address</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValidateAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Normalize address</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">normalized </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NormalizeAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x123...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Validate chain ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValidateChainID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SN_MAIN&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get chain ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">chainID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetChainID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Check for specific errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsInvalidAddressError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Handle invalid address error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsInvalidSignatureError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Handle invalid signature error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\n// Encode bytes to hex\nhex := utils.EncodeHex([]byte(&quot;Hello, Starknet!&quot;))\n \n// Decode hex to bytes\nbytes, err := utils.DecodeHex(hex)\nif err != nil {\n    log.Fatal(err)\n}\n \n// Convert to field element\nfe := utils.ToFieldElement(&quot;123&quot;)\n \n// Convert from field element\nvalue := utils.FromFieldElement(fe)\n \n// Validate address\nisValid := utils.ValidateAddress(&quot;0x123...&quot;)\n \n// Normalize address\nnormalized := utils.NormalizeAddress(&quot;0x123...&quot;)\n \n// Validate chain ID\nisValid = utils.ValidateChainID(&quot;SN_MAIN&quot;)\n \n// Get chain ID\nchainID := utils.GetChainID()\n \n// Check for specific errors\nif err != nil {\n    if utils.IsInvalidAddressError(err) {\n        // Handle invalid address error\n    } else if utils.IsInvalidSignatureError(err) {\n        // Handle invalid signature error\n    }\n}","title":"Example Usage","titles":["Common Utilities"]},"231":{"href":"/docs/utilities#utilities-package","html":"</header>\n<p>The Utilities package provides common utility functions and helpers for working with Starknet. This package contains various components and utilities for common operations.</p>\n","isPage":true,"text":"\nThe Utilities package provides common utility functions and helpers for working with Starknet. This package contains various components and utilities for common operations.\n","title":"Utilities Package","titles":[]},"232":{"href":"/docs/utilities#overview","html":"\n<p>The Utilities package includes:</p>\n<ul>\n<li>Common utilities</li>\n<li>Type utilities</li>\n<li>Conversion utilities</li>\n</ul>\n","isPage":false,"text":"\nThe Utilities package includes:\n\nCommon utilities\nType utilities\nConversion utilities\n\n","title":"Overview","titles":["Utilities Package"]},"233":{"href":"/docs/utilities#available-submodules","html":"\n<ul>\n<li><a href=\"/docs/utilities/common\">Common Utilities</a></li>\n<li><a href=\"/docs/utilities/types\">Type Utilities</a></li>\n</ul>\n","isPage":false,"text":"\n\nCommon Utilities\nType Utilities\n\n","title":"Available Submodules","titles":["Utilities Package"]},"234":{"href":"/docs/utilities#getting-started","html":"\n<p>To use the Utilities package, import it in your Go code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/NethermindEth/starknet.go/utils</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span></code></pre>\n","isPage":false,"text":"\nTo use the Utilities package, import it in your Go code:\nimport &quot;github.com/NethermindEth/starknet.go/utils&quot;\n","title":"Getting Started","titles":["Utilities Package"]},"235":{"href":"/docs/utilities#version","html":"\n<p>This documentation is based on version v0.8.1 of the Starknet.go library.</p>","isPage":false,"text":"\nThis documentation is based on version v0.8.1 of the Starknet.go library.","title":"Version","titles":["Utilities Package"]},"236":{"href":"/docs/utilities/types#type-utilities","html":"</header>\n<p>The type utilities submodule provides functionality for working with Starknet types.</p>\n","isPage":true,"text":"\nThe type utilities submodule provides functionality for working with Starknet types.\n","title":"Type Utilities","titles":[]},"237":{"href":"/docs/utilities/types#type-conversion","html":"\n","isPage":false,"text":"\n","title":"Type Conversion","titles":["Type Utilities"]},"238":{"href":"/docs/utilities/types#to-big-int","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bigInt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToBigInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value)</span></span></code></pre>\n","isPage":false,"text":"\nbigInt := utils.ToBigInt(value)\n","title":"To Big Int","titles":["Type Utilities","Type Conversion"]},"239":{"href":"/docs/utilities/types#from-big-int","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FromBigInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(bigInt)</span></span></code></pre>\n","isPage":false,"text":"\nvalue := utils.FromBigInt(bigInt)\n","title":"From Big Int","titles":["Type Utilities","Type Conversion"]},"240":{"href":"/docs/utilities/types#to-felt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">felt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToFelt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value)</span></span></code></pre>\n","isPage":false,"text":"\nfelt := utils.ToFelt(value)\n","title":"To Felt","titles":["Type Utilities","Type Conversion"]},"241":{"href":"/docs/utilities/types#from-felt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FromFelt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(felt)</span></span></code></pre>\n","isPage":false,"text":"\nvalue := utils.FromFelt(felt)\n","title":"From Felt","titles":["Type Utilities","Type Conversion"]},"242":{"href":"/docs/utilities/types#type-validation","html":"\n","isPage":false,"text":"\n","title":"Type Validation","titles":["Type Utilities"]},"243":{"href":"/docs/utilities/types#is-valid-big-int","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsValidBigInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := utils.IsValidBigInt(value)\n","title":"Is Valid Big Int","titles":["Type Utilities","Type Validation"]},"244":{"href":"/docs/utilities/types#is-valid-felt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsValidFelt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := utils.IsValidFelt(value)\n","title":"Is Valid Felt","titles":["Type Utilities","Type Validation"]},"245":{"href":"/docs/utilities/types#is-valid-uint256","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsValidUint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value)</span></span></code></pre>\n","isPage":false,"text":"\nisValid := utils.IsValidUint256(value)\n","title":"Is Valid Uint256","titles":["Type Utilities","Type Validation"]},"246":{"href":"/docs/utilities/types#type-operations","html":"\n","isPage":false,"text":"\n","title":"Type Operations","titles":["Type Utilities"]},"247":{"href":"/docs/utilities/types#add-big-ints","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddBigInts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span></code></pre>\n","isPage":false,"text":"\nresult := utils.AddBigInts(a, b)\n","title":"Add Big Ints","titles":["Type Utilities","Type Operations"]},"248":{"href":"/docs/utilities/types#sub-big-ints","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SubBigInts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span></code></pre>\n","isPage":false,"text":"\nresult := utils.SubBigInts(a, b)\n","title":"Sub Big Ints","titles":["Type Utilities","Type Operations"]},"249":{"href":"/docs/utilities/types#mul-big-ints","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MulBigInts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span></code></pre>\n","isPage":false,"text":"\nresult := utils.MulBigInts(a, b)\n","title":"Mul Big Ints","titles":["Type Utilities","Type Operations"]},"250":{"href":"/docs/utilities/types#div-big-ints","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DivBigInts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(a, b)</span></span></code></pre>\n","isPage":false,"text":"\nresult := utils.DivBigInts(a, b)\n","title":"Div Big Ints","titles":["Type Utilities","Type Operations"]},"251":{"href":"/docs/utilities/types#example-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Convert to big int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">bigInt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToBigInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Convert from big int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FromBigInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(bigInt)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Convert to felt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">felt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToFelt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Convert from felt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FromFelt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(felt)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Validate big int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsValidBigInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Validate felt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsValidFelt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Validate uint256</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isValid </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsValidUint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add big ints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddBigInts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;456&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Sub big ints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SubBigInts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;456&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Mul big ints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MulBigInts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;456&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Div big ints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DivBigInts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;123&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;456&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>","isPage":false,"text":"\n// Convert to big int\nbigInt := utils.ToBigInt(&quot;123&quot;)\n \n// Convert from big int\nvalue := utils.FromBigInt(bigInt)\n \n// Convert to felt\nfelt := utils.ToFelt(&quot;123&quot;)\n \n// Convert from felt\nvalue = utils.FromFelt(felt)\n \n// Validate big int\nisValid := utils.IsValidBigInt(&quot;123&quot;)\n \n// Validate felt\nisValid = utils.IsValidFelt(&quot;123&quot;)\n \n// Validate uint256\nisValid = utils.IsValidUint256(&quot;123&quot;)\n \n// Add big ints\nresult := utils.AddBigInts(&quot;123&quot;, &quot;456&quot;)\n \n// Sub big ints\nresult = utils.SubBigInts(&quot;123&quot;, &quot;456&quot;)\n \n// Mul big ints\nresult = utils.MulBigInts(&quot;123&quot;, &quot;456&quot;)\n \n// Div big ints\nresult = utils.DivBigInts(&quot;123&quot;, &quot;456&quot;)","title":"Example Usage","titles":["Type Utilities"]}},"dirtCount":0,"index":[["json",{"2":{"133":1,"185":1,"186":1}}],["join",{"2":{"123":1}}],["queries",{"2":{"119":1}}],["quot",{"2":{"6":12,"13":42,"17":2,"26":10,"33":14,"41":2,"49":12,"60":14,"64":2,"111":14,"127":12,"128":14,"130":20,"131":14,"132":12,"136":2,"151":18,"155":2,"159":12,"161":2,"163":2,"165":4,"166":4,"167":12,"176":14,"179":4,"181":2,"182":2,"185":4,"186":10,"189":14,"190":16,"191":18,"193":24,"194":18,"198":2,"213":18,"230":10,"234":2,"251":26}}],["keep",{"2":{"96":1}}],["key",{"0":{"30":1},"2":{"20":2,"26":1,"33":4,"49":1,"132":1,"149":1,"211":1}}],["α",{"2":{"85":1,"88":1,"91":1}}],["αx",{"2":{"85":1,"88":1,"91":1}}],["β",{"2":{"85":2,"88":2,"91":2}}],["+",{"2":{"50":1,"85":2,"88":2,"91":2}}],["range",{"2":{"176":2}}],["rpc",{"0":{"125":1,"133":1,"138":1},"1":{"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"134":1,"135":1,"136":1,"137":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1},"2":{"111":3,"119":1,"125":2,"127":2,"128":2,"130":3,"131":2,"132":2,"133":3,"134":4,"135":2,"136":2,"138":2,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"148":1,"149":1,"150":1,"151":3}}],["running",{"0":{"105":1}}],["run",{"0":{"112":1},"2":{"101":1,"105":1,"112":2}}],["r",{"2":{"50":5}}],["retrydelay",{"2":{"184":1,"186":1}}],["retryconfig",{"2":{"184":2,"186":2}}],["retry",{"0":{"184":1},"2":{"178":1,"184":2}}],["retrieves",{"2":{"108":1}}],["real",{"2":{"119":1,"120":1,"122":1}}],["read",{"2":{"96":1}}],["requirement",{"2":{"114":1}}],["request",{"2":{"101":1}}],["requests",{"0":{"101":1},"2":{"97":1}}],["remote",{"2":{"104":2}}],["relevant",{"2":{"98":1,"99":1}}],["related",{"2":{"39":1}}],["replace",{"2":{"111":1}}],["repository",{"2":{"98":1,"101":1,"104":2}}],["reporting",{"0":{"98":1},"2":{"97":1}}],["represented",{"2":{"20":1,"50":2,"158":1,"178":1}}],["reset",{"0":{"172":1},"2":{"172":1,"176":2}}],["response",{"2":{"183":1}}],["responsive",{"2":{"119":1}}],["respectable",{"2":{"96":1}}],["result",{"2":{"68":1,"69":1,"70":1,"71":1,"73":1,"74":1,"75":1,"76":1,"82":8,"87":2,"90":2,"93":2,"94":2,"131":3,"150":1,"151":3,"194":3,"212":1,"213":3,"247":1,"248":1,"249":1,"250":1,"251":4}}],["receipt",{"0":{"145":1,"207":1},"2":{"59":1,"60":2,"145":1,"207":1}}],["recipient",{"2":{"6":1,"13":1}}],["high",{"2":{"119":1}}],["higher",{"2":{"103":1,"107":1,"114":1,"116":1}}],["https",{"2":{"104":2,"111":1,"179":1,"181":1,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1}}],["how",{"0":{"97":1},"1":{"98":1,"99":1,"100":1,"101":1},"2":{"106":1,"113":1,"124":1,"125":1,"187":1}}],["have",{"2":{"107":1,"113":1,"114":1}}],["hashing",{"2":{"88":1}}],["hash",{"0":{"141":1,"144":1,"203":1,"206":1},"2":{"44":1,"127":2,"128":3,"130":1,"151":2,"186":2,"190":2,"191":3,"193":1,"213":2}}],["handling",{"0":{"37":1,"51":1,"227":1},"1":{"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"228":1,"229":1},"2":{"39":1,"40":1,"51":1}}],["handle",{"2":{"21":1,"23":1,"37":2,"57":1,"58":1,"59":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"148":1,"149":1,"150":1,"159":1,"170":1,"171":1,"172":1,"179":1,"202":1,"203":1,"204":1,"206":1,"207":1,"208":1,"210":1,"211":1,"212":1,"230":2}}],["headers",{"2":{"119":1}}],["hex",{"0":{"35":1,"215":1,"216":1,"217":1},"1":{"216":1,"217":1},"2":{"35":4,"50":1,"216":1,"217":1,"230":4}}],["help",{"2":{"95":1,"106":1,"115":1,"122":1}}],["helpers",{"2":{"231":1}}],["helper",{"2":{"27":1}}],["hello",{"2":{"26":1,"49":1,"230":1}}],["local",{"2":{"159":1,"161":1,"167":1,"176":1}}],["loggingconfig",{"2":{"185":2,"186":2}}],["logging",{"0":{"185":1},"2":{"178":1,"185":2}}],["log",{"2":{"6":5,"13":5,"26":2,"60":3,"111":3,"127":2,"128":2,"130":2,"131":2,"132":2,"151":3,"167":3,"176":4,"186":2,"189":3,"190":3,"191":3,"193":3,"194":3,"213":3,"230":1}}],["level",{"2":{"185":1,"186":1}}],["leverage",{"2":{"119":1}}],["learn",{"2":{"113":1}}],["let",{"2":{"108":1}}],["latest",{"0":{"142":1,"204":1},"2":{"108":1,"111":2,"112":1,"114":1,"123":1,"151":3,"189":2,"213":3}}],["ll",{"2":{"106":1}}],["library",{"2":{"18":1,"42":1,"65":1,"115":1,"118":1,"122":1,"137":1,"156":1,"199":1,"235":1}}],["8",{"2":{"18":1,"42":1,"65":1,"119":1,"137":1,"156":1,"199":1,"235":1}}],["options",{"0":{"160":1,"180":1},"1":{"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"181":1,"182":1,"183":1,"184":1,"185":1}}],["open",{"2":{"101":1}}],["operations",{"0":{"66":1,"67":1,"72":1,"77":1,"87":1,"90":1,"93":1,"246":1},"1":{"67":1,"68":2,"69":2,"70":2,"71":2,"72":1,"73":2,"74":2,"75":2,"76":2,"77":1,"78":2,"79":2,"80":2,"81":2,"82":1,"247":1,"248":1,"249":1,"250":1},"2":{"61":1,"62":1,"63":1,"66":2,"106":1,"119":1,"214":1,"231":1}}],["out",{"2":{"121":1,"124":1}}],["output",{"2":{"112":1}}],["our",{"2":{"96":2,"98":1,"121":1,"123":1,"124":1}}],["over",{"2":{"85":1,"88":1,"91":1}}],["overview",{"0":{"15":1,"39":1,"62":1,"134":1,"153":1,"196":1,"232":1}}],["original",{"2":{"104":1}}],["origin",{"2":{"101":1}}],["order",{"0":{"78":1},"2":{"78":2,"82":3}}],["or",{"2":{"23":1,"98":1,"99":1,"100":2,"103":1,"107":1,"114":1,"116":1,"120":1,"123":1}}],["of",{"0":{"96":1},"2":{"18":1,"42":1,"65":1,"83":1,"96":1,"99":1,"104":1,"107":1,"113":1,"114":1,"119":1,"125":1,"137":1,"156":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"181":1,"182":1,"187":1,"199":1,"235":1}}],["on",{"0":{"80":1},"2":{"18":1,"42":1,"51":1,"65":1,"66":1,"82":1,"94":3,"98":1,"100":1,"122":1,"123":2,"124":1,"137":1,"156":1,"199":1,"235":1}}],["bigint",{"2":{"238":1,"239":1,"251":2}}],["big",{"0":{"238":1,"239":1,"243":1,"247":1,"248":1,"249":1,"250":1},"2":{"251":7}}],["binary",{"2":{"14":1}}],["building",{"2":{"120":2}}],["built",{"2":{"119":1}}],["bug",{"2":{"98":2}}],["bugs",{"0":{"98":1},"2":{"97":1}}],["balance",{"2":{"159":1,"165":1,"167":1,"176":2}}],["backend",{"2":{"120":1}}],["background",{"2":{"111":1}}],["basic",{"0":{"126":1,"188":1},"1":{"127":1,"128":1,"189":1,"190":1,"191":1},"2":{"106":1,"107":1,"113":1,"116":1,"122":1}}],["based",{"2":{"18":1,"42":1,"65":1,"137":1,"156":1,"199":1,"235":1}}],["blockhash",{"2":{"141":1,"203":1}}],["blockchain",{"2":{"115":1,"118":1,"120":1}}],["blocknumber",{"2":{"111":3,"140":1,"202":1}}],["block",{"0":{"127":1,"139":1,"140":1,"141":1,"142":1,"164":1,"190":1,"201":1,"202":1,"203":1,"204":1},"1":{"140":1,"141":1,"142":1,"202":1,"203":1,"204":1},"2":{"108":1,"111":2,"112":1,"119":2,"127":8,"140":1,"141":1,"142":1,"151":6,"158":1,"164":2,"186":3,"189":4,"190":8,"202":1,"203":1,"204":1,"213":6}}],["behavior",{"2":{"184":1,"185":1}}],["be",{"2":{"118":1}}],["begin",{"2":{"107":1}}],["before",{"2":{"107":1}}],["branch",{"2":{"101":2}}],["b",{"2":{"73":1,"74":1,"75":1,"82":3,"101":1,"247":1,"248":1,"249":1,"250":1}}],["bytes",{"2":{"35":4,"216":1,"217":1,"230":3}}],["byte",{"2":{"26":1,"49":1,"230":1}}],["by",{"0":{"140":1,"141":1,"144":1,"202":1,"203":1,"206":1},"2":{"20":1,"82":1,"85":1,"87":1,"88":1,"90":1,"91":1,"93":1,"94":1,"127":1,"128":1,"158":1,"178":1,"190":1,"191":1}}],["v",{"2":{"26":1,"33":2,"49":3}}],["verification",{"0":{"43":1,"45":1},"1":{"44":1,"45":1,"46":2,"47":2,"48":2,"49":1,"50":1},"2":{"39":1,"40":1,"43":1}}],["verifystarksignature",{"2":{"48":1,"49":1}}],["verifypedersensignature",{"2":{"47":1,"49":1}}],["verifyecdsasignature",{"2":{"46":1,"49":1}}],["verifying",{"2":{"43":1}}],["verify",{"0":{"24":1,"46":1,"47":1,"48":1},"2":{"24":2,"26":2,"49":3,"114":1,"122":1}}],["version",{"0":{"18":1,"42":1,"65":1,"137":1,"156":1,"199":1,"235":1},"2":{"18":1,"42":1,"54":1,"55":1,"60":1,"65":1,"114":2,"130":1,"137":1,"156":1,"193":1,"199":1,"235":1}}],["v0",{"2":{"18":1,"42":1,"65":1,"119":1,"137":1,"156":1,"199":1,"235":1}}],["validate",{"0":{"222":1,"225":1},"2":{"33":2,"230":2,"251":3}}],["validatechainid",{"2":{"32":1,"33":1,"225":1,"230":1}}],["validateaddress",{"2":{"29":1,"33":1,"222":1,"230":1}}],["validation",{"0":{"29":1,"32":1,"221":1,"224":1,"242":1},"1":{"222":1,"223":1,"225":1,"226":1,"243":1,"244":1,"245":1}}],["valid",{"0":{"81":1,"243":1,"244":1,"245":1},"2":{"26":1,"33":2,"49":3,"82":1}}],["value",{"2":{"6":1,"13":1,"36":2,"132":1,"219":1,"220":1,"230":1,"238":1,"239":1,"240":1,"241":1,"243":1,"244":1,"245":1,"251":2}}],["various",{"2":{"14":1,"38":1,"44":1,"52":1,"61":1,"84":1,"133":1,"152":1,"195":1,"231":1}}],["gaslimit",{"2":{"159":1,"164":1,"167":1}}],["git",{"2":{"101":3,"103":1,"104":4}}],["github",{"2":{"17":1,"41":1,"64":1,"98":1,"104":2,"110":1,"111":1,"127":1,"128":1,"130":1,"131":1,"132":1,"136":1,"155":1,"189":1,"190":1,"191":1,"193":1,"194":1,"198":1,"234":1}}],["guide",{"2":{"95":1,"106":1,"115":1,"121":1,"124":1}}],["genesiscontract",{"2":{"159":1,"166":1,"167":1}}],["genesiscontracts",{"2":{"159":1,"166":1,"167":1}}],["genesisaccount",{"2":{"159":1,"165":1,"167":1}}],["genesisaccounts",{"2":{"159":1,"165":1,"167":1}}],["genesisblock",{"2":{"159":2,"164":2,"167":2}}],["genesis",{"0":{"164":1,"165":1,"166":1},"2":{"158":3,"164":1,"165":1,"166":1}}],["generator",{"0":{"79":1},"2":{"79":2,"82":3,"87":3,"90":3,"93":3,"94":3}}],["generated",{"2":{"33":1}}],["generate",{"2":{"33":2}}],["generateaddress",{"2":{"31":1,"33":1}}],["generatepublickey",{"2":{"30":1,"33":1}}],["generation",{"0":{"30":1,"31":1}}],["getchainid",{"2":{"226":1,"230":1}}],["getcontracts",{"2":{"175":1,"176":1}}],["getcontractstorage",{"2":{"132":1,"149":1,"211":1}}],["getcontractcode",{"2":{"148":1,"210":1}}],["getaccounts",{"2":{"174":1,"176":1}}],["getaddress",{"0":{"25":1},"2":{"25":1}}],["getstatus",{"2":{"173":1,"176":1}}],["getlatestblock",{"2":{"142":1,"151":1,"189":1,"204":1,"213":1}}],["getblockbyhash",{"2":{"141":1,"203":1}}],["getblockbynumber",{"2":{"127":1,"140":1,"186":1,"190":1,"202":1}}],["gettransactionreceipt",{"2":{"145":1,"207":1}}],["gettransactionbyhash",{"2":{"128":1,"144":1,"151":1,"191":1,"206":1,"213":1}}],["getting",{"0":{"17":1,"41":1,"64":1,"121":1,"127":1,"128":1,"132":1,"136":1,"155":1,"190":1,"191":1,"198":1,"234":1},"1":{"122":1},"2":{"121":1}}],["get",{"0":{"106":1,"140":1,"141":1,"142":1,"144":1,"145":1,"148":1,"149":1,"173":1,"174":1,"175":1,"202":1,"203":1,"204":1,"206":1,"207":1,"210":1,"211":1,"226":1},"1":{"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1},"2":{"25":1,"82":2,"87":1,"90":1,"93":1,"94":1,"95":1,"110":1,"111":1,"117":1,"122":1,"124":1,"127":1,"128":1,"132":1,"151":2,"176":3,"189":1,"190":1,"191":1,"213":2,"230":1}}],["go",{"0":{"95":1,"108":1,"118":1},"1":{"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"109":1,"110":1,"111":1,"112":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1},"2":{"17":2,"18":1,"20":1,"41":2,"42":1,"64":2,"65":1,"95":1,"97":1,"103":1,"104":4,"106":2,"107":3,"109":2,"110":3,"111":2,"112":2,"113":1,"114":2,"115":4,"116":2,"117":2,"118":2,"119":2,"120":3,"121":1,"127":1,"128":1,"130":1,"131":1,"132":1,"136":2,"137":1,"155":2,"156":1,"189":1,"190":1,"191":1,"193":1,"194":1,"198":2,"199":1,"234":2,"235":1}}],["uint256",{"0":{"245":1},"2":{"251":1}}],["utils",{"2":{"216":1,"217":1,"219":1,"220":1,"222":1,"223":1,"225":1,"226":1,"228":1,"229":1,"230":10,"234":1,"238":1,"239":1,"240":1,"241":1,"243":1,"244":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":11}}],["utility",{"0":{"28":1},"1":{"29":1,"30":1,"31":1,"32":1},"2":{"231":1}}],["utilities",{"0":{"27":1,"34":1,"214":1,"231":1,"236":1},"1":{"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":2,"36":2,"37":2,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"232":1,"233":1,"234":1,"235":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1},"2":{"14":1,"15":1,"27":2,"38":1,"39":1,"40":1,"61":1,"62":1,"133":1,"134":1,"152":1,"153":1,"195":1,"214":1,"231":2,"232":4,"233":2,"234":1,"236":1}}],["unix",{"2":{"159":1,"164":1,"167":1}}],["universal",{"2":{"122":1}}],["understanding",{"2":{"107":1}}],["udc",{"2":{"122":1}}],["url",{"0":{"181":1},"2":{"111":2,"114":1,"178":1,"179":1,"181":3,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1}}],["updated",{"2":{"123":1}}],["updates",{"2":{"119":2,"122":1}}],["upstream",{"2":{"104":2}}],["up",{"0":{"104":1,"109":1},"2":{"115":1,"157":1}}],["us",{"2":{"123":1}}],["using",{"2":{"106":1,"113":1,"117":1,"121":1,"122":1,"133":1,"168":1}}],["used",{"2":{"85":1,"88":1,"91":1,"184":1,"185":1}}],["use",{"0":{"120":1},"2":{"17":1,"41":1,"64":1,"99":1,"118":1,"125":1,"136":1,"155":1,"186":1,"187":1,"198":1,"234":1}}],["usage",{"0":{"6":1,"13":1,"26":1,"33":1,"49":1,"60":1,"82":1,"94":1,"151":1,"167":1,"168":1,"176":1,"186":1,"213":1,"230":1,"251":1},"1":{"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1},"2":{"153":1,"154":1,"168":1}}],["wallet",{"2":{"120":1}}],["walk",{"2":{"106":1}}],["way",{"2":{"118":1}}],["ways",{"2":{"97":1}}],["waitfortransaction",{"2":{"59":1,"60":1}}],["wait",{"0":{"59":1},"2":{"60":1,"183":1}}],["will",{"2":{"95":1,"106":1,"115":1}}],["with",{"2":{"14":1,"27":1,"38":2,"60":1,"61":1,"83":1,"95":1,"98":1,"99":1,"111":3,"112":1,"113":1,"115":1,"116":1,"118":1,"119":1,"120":1,"123":1,"130":1,"133":1,"152":2,"193":1,"195":2,"200":1,"231":1,"236":1}}],["websocket",{"2":{"119":2,"122":1}}],["well",{"2":{"118":1,"119":1}}],["welcome",{"2":{"95":1,"99":1,"100":1,"124":1}}],["we",{"2":{"95":1,"106":1,"124":1}}],["why",{"0":{"118":1},"1":{"119":1,"120":1,"121":1,"122":1,"123":1,"124":1}}],["where",{"2":{"50":1,"85":1,"88":1,"91":1}}],["which",{"2":{"20":1,"158":1,"178":1}}],["working",{"2":{"14":1,"27":1,"61":1,"83":1,"105":1,"113":1,"152":1,"231":1,"236":1}}],["5",{"2":{"13":1}}],["456",{"2":{"251":4}}],["4",{"0":{"112":1},"2":{"13":1}}],["30",{"2":{"179":1,"183":1,"186":1,"189":1}}],["3",{"0":{"111":1},"2":{"13":1,"184":1,"186":1}}],["mind",{"2":{"119":1}}],["minimum",{"2":{"114":1}}],["monitoring",{"2":{"120":1}}],["more",{"2":{"113":2,"114":1,"124":1}}],["modules",{"2":{"116":1}}],["module",{"2":{"109":1}}],["mod",{"2":{"104":1,"109":1}}],["my",{"2":{"109":3}}],["mytoken",{"2":{"13":1}}],["mkdir",{"2":{"109":1}}],["m",{"2":{"101":1}}],["much",{"2":{"98":1}}],["mulbigints",{"2":{"249":1,"251":1}}],["multiply",{"2":{"82":2,"87":1,"90":1,"93":1,"94":1}}],["multiplication",{"0":{"69":1,"74":1}}],["mul",{"0":{"249":1},"2":{"69":1,"82":1,"87":1,"90":1,"93":1,"94":1,"251":1}}],["meets",{"2":{"114":1}}],["message",{"2":{"23":2,"24":1,"26":4,"46":1,"47":1,"48":1,"49":5}}],["methods",{"0":{"22":1,"45":1,"56":1,"138":1,"139":1,"143":1,"147":1,"169":1,"200":1,"201":1,"205":1,"209":1},"1":{"23":1,"24":1,"25":1,"46":1,"47":1,"48":1,"57":1,"58":1,"59":1,"139":1,"140":2,"141":2,"142":2,"143":1,"144":2,"145":2,"146":2,"147":1,"148":2,"149":2,"150":2,"151":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"201":1,"202":2,"203":2,"204":2,"205":1,"206":2,"207":2,"208":2,"209":1,"210":2,"211":2,"212":2,"213":1},"2":{"113":2,"134":1,"135":1,"138":1,"196":1,"197":1,"200":1}}],["making",{"2":{"133":1,"138":1}}],["make",{"2":{"101":1,"107":1,"114":1}}],["many",{"2":{"97":1}}],["managing",{"2":{"19":1,"38":1,"152":1,"195":1}}],["management",{"0":{"19":1},"1":{"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1},"2":{"19":1,"39":1,"40":1}}],["maxretries",{"2":{"184":1,"186":1}}],["maximum",{"2":{"183":1}}],["max",{"2":{"60":1,"130":1,"193":1}}],["maxfee",{"2":{"54":1}}],["main",{"0":{"111":1},"2":{"26":1,"33":1,"85":1,"111":3,"112":1,"127":2,"128":2,"130":2,"131":2,"132":2,"179":1,"182":1,"186":1,"189":3,"190":3,"191":3,"193":3,"194":3,"230":1}}],["map",{"2":{"13":1}}],["mtk",{"2":{"13":1}}],["implementing",{"2":{"120":1}}],["implementation",{"2":{"26":1,"119":1}}],["improvements",{"2":{"100":1}}],["improving",{"0":{"100":1},"2":{"97":1}}],["import",{"2":{"17":2,"41":2,"64":2,"111":1,"127":1,"128":1,"130":1,"131":1,"132":1,"136":2,"155":2,"189":1,"190":1,"191":1,"193":1,"194":1,"198":2,"234":2}}],["ideal",{"2":{"120":1}}],["id",{"0":{"32":1,"162":1,"163":1,"182":1,"224":1,"225":1,"226":1},"1":{"225":1,"226":1},"2":{"20":1,"26":1,"33":2,"158":2,"162":2,"163":2,"178":1,"182":2,"230":2}}],["issues",{"2":{"114":1}}],["issue",{"2":{"98":1,"99":1}}],["isoncurve",{"2":{"80":2,"82":2}}],["isinvalid",{"2":{"228":1,"229":1}}],["isinvalidsignatureerror",{"2":{"37":1,"229":1,"230":1}}],["isinvalidaddresserror",{"2":{"37":1,"228":1,"230":1}}],["isvaliduint256",{"2":{"245":1,"251":1}}],["isvalidfelt",{"2":{"244":1,"251":1}}],["isvalidbigint",{"2":{"243":1,"251":1}}],["isvalid",{"2":{"24":1,"26":2,"29":1,"32":1,"33":4,"46":1,"47":1,"48":1,"49":6,"81":2,"82":2,"222":1,"225":1,"230":2,"243":1,"244":1,"245":1,"251":3}}],["is",{"0":{"80":1,"81":1,"228":1,"229":1,"243":1,"244":1,"245":1},"2":{"18":1,"20":1,"42":1,"50":2,"65":1,"82":2,"85":3,"88":3,"91":3,"105":1,"114":1,"115":1,"118":2,"120":1,"137":1,"156":1,"158":1,"161":1,"162":1,"163":1,"164":1,"178":1,"181":1,"182":1,"183":1,"184":1,"185":1,"199":1,"235":1}}],["it",{"2":{"17":1,"41":1,"64":1,"85":1,"88":1,"91":1,"118":1,"136":1,"155":1,"198":1,"234":1}}],["info",{"2":{"185":1,"186":1}}],["information",{"2":{"98":1,"124":1}}],["infrastructure",{"2":{"120":1}}],["ints",{"0":{"247":1,"248":1,"249":1,"250":1},"2":{"251":4}}],["int",{"0":{"238":1,"239":1,"243":1},"2":{"251":3}}],["into",{"2":{"119":1,"120":1}}],["integrating",{"2":{"120":1}}],["integration",{"2":{"119":1,"122":1}}],["interaction",{"2":{"122":1}}],["interactions",{"2":{"119":2}}],["interacting",{"2":{"38":2,"113":1,"115":1,"133":1,"152":1,"195":2,"200":1}}],["interact",{"2":{"118":1,"120":1}}],["interface",{"2":{"13":5,"14":1,"20":1}}],["incorporate",{"2":{"119":1}}],["including",{"2":{"119":1}}],["includes",{"2":{"15":1,"39":1,"62":1,"122":1,"134":1,"153":1,"196":1,"232":1}}],["instructions",{"2":{"114":1}}],["installing",{"0":{"117":1}}],["installation",{"0":{"115":1},"1":{"116":1,"117":1},"2":{"121":1}}],["installed",{"2":{"107":2,"114":1}}],["install",{"0":{"110":1},"2":{"104":1,"117":1}}],["initial",{"2":{"165":1,"166":1}}],["initialize",{"2":{"109":1,"111":1}}],["init",{"2":{"109":1}}],["involved",{"2":{"124":1}}],["invocation",{"2":{"122":1}}],["invoke",{"0":{"54":1},"2":{"52":1,"60":1,"122":1}}],["invert",{"2":{"82":1}}],["inversion",{"0":{"76":1}}],["invalid",{"0":{"228":1,"229":1},"2":{"37":2,"230":2}}],["in",{"2":{"17":1,"20":1,"41":1,"43":1,"50":1,"61":1,"64":1,"66":1,"83":1,"85":1,"88":1,"91":1,"106":1,"115":1,"119":1,"120":1,"136":1,"155":1,"198":1,"214":1,"234":1}}],["if",{"2":{"6":5,"13":5,"21":1,"23":1,"26":2,"37":3,"57":1,"58":1,"59":1,"60":3,"82":2,"98":1,"111":2,"114":1,"127":1,"128":1,"130":1,"131":1,"132":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"148":1,"149":1,"150":1,"151":3,"159":1,"167":3,"170":1,"171":1,"172":1,"176":4,"179":1,"186":2,"189":2,"190":2,"191":2,"193":2,"194":2,"202":1,"203":1,"204":1,"206":1,"207":1,"208":1,"210":1,"211":1,"212":1,"213":3,"230":4}}],["you",{"2":{"95":1,"98":1,"100":1,"106":1,"107":2,"112":1,"113":2,"114":2,"115":1,"117":1,"122":1}}],["yourusername",{"2":{"104":1}}],["your",{"0":{"108":1,"109":1},"1":{"109":1,"110":1,"111":1,"112":1},"2":{"17":1,"26":3,"41":1,"49":2,"64":1,"101":2,"104":1,"106":1,"109":1,"110":1,"111":2,"112":1,"113":1,"114":2,"115":1,"136":1,"155":1,"179":1,"181":1,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1,"198":1,"234":1}}],["y²",{"2":{"85":1,"88":1,"91":1}}],["y",{"2":{"6":2,"13":1}}],["x³",{"2":{"85":1,"88":1,"91":1}}],["x27",{"2":{"25":1,"101":2,"106":1,"108":1,"119":1}}],["x",{"2":{"6":2,"13":1}}],["pipelines",{"2":{"120":1}}],["possible",{"2":{"98":1}}],["points",{"2":{"82":1,"87":1,"90":1,"93":1,"94":1}}],["point2",{"2":{"68":1,"82":1,"87":1,"90":1,"93":1,"94":1}}],["point1",{"2":{"68":1,"82":1,"87":1,"90":1,"93":1,"94":1}}],["point",{"0":{"67":1,"68":1,"69":1,"70":1,"71":1},"1":{"68":1,"69":1,"70":1,"71":1},"2":{"6":1,"13":1,"60":1,"69":1,"70":1,"71":1,"80":1,"81":1,"82":10,"87":3,"90":3,"93":3,"94":3,"130":1,"131":1,"151":1,"193":1,"194":1,"213":1}}],["push",{"2":{"101":2}}],["pull",{"0":{"101":1},"2":{"97":1,"101":1}}],["publickey",{"2":{"30":1,"31":1,"33":3,"46":1,"47":1,"48":1,"49":4}}],["public",{"0":{"30":1},"2":{"20":1,"33":3,"49":1}}],["please",{"2":{"96":1,"98":1,"99":1}}],["pending",{"2":{"119":1}}],["performance",{"2":{"119":1}}],["performant",{"2":{"118":1}}],["perform",{"2":{"106":1}}],["performing",{"2":{"66":1}}],["pedersencurve",{"2":{"94":2}}],["pedersen",{"0":{"47":1,"88":1,"89":1,"90":1},"1":{"89":1,"90":1},"2":{"44":1,"49":2,"50":1,"84":1,"88":2,"94":2}}],["pass",{"2":{"101":1}}],["pair",{"2":{"50":3}}],["package",{"0":{"14":1,"38":1,"61":1,"117":1,"133":1,"152":1,"195":1,"231":1},"1":{"15":1,"16":1,"17":1,"18":1,"39":1,"40":1,"41":1,"42":1,"62":1,"63":1,"64":1,"65":1,"134":1,"135":1,"136":1,"137":1,"153":1,"154":1,"155":1,"156":1,"196":1,"197":1,"198":1,"199":1,"232":1,"233":1,"234":1,"235":1},"2":{"14":2,"15":1,"17":1,"38":2,"39":1,"41":1,"44":1,"52":1,"61":2,"62":1,"64":1,"84":1,"111":1,"127":1,"128":1,"130":1,"131":1,"132":1,"133":2,"134":1,"136":1,"152":2,"153":1,"155":1,"189":1,"190":1,"191":1,"193":1,"194":1,"195":2,"196":1,"198":1,"231":2,"232":1,"234":1}}],["preferred",{"2":{"111":1}}],["prerequisites",{"0":{"103":1,"107":1,"116":1}}],["programming",{"2":{"107":1}}],["project",{"0":{"109":1},"2":{"106":1,"109":1,"110":1,"115":1}}],["proposed",{"2":{"99":1}}],["provider",{"2":{"20":1,"21":1,"26":3,"111":1}}],["provides",{"2":{"0":1,"7":1,"14":1,"19":1,"27":1,"38":1,"43":1,"51":1,"61":1,"66":1,"83":1,"118":1,"125":1,"133":1,"138":1,"152":1,"157":1,"168":1,"177":1,"187":1,"195":1,"200":1,"214":1,"231":1,"236":1}}],["println",{"2":{"111":1}}],["printf",{"2":{"26":1,"33":4,"49":3,"60":1,"111":1,"127":3,"128":3,"130":1,"131":1,"132":1,"151":5,"176":5,"186":1,"189":1,"190":3,"191":3,"193":1,"194":1,"213":5}}],["prime",{"2":{"85":1,"88":1,"91":1}}],["privatekey",{"2":{"21":1,"26":2,"30":1,"33":2}}],["private",{"2":{"20":1,"26":1,"33":1}}],["20",{"2":{"103":1,"107":1,"114":1,"116":1}}],["200",{"2":{"13":1}}],["2",{"0":{"110":1},"2":{"6":2,"13":1}}],["normalizeaddress",{"2":{"223":1,"230":1}}],["normalized",{"2":{"223":1,"230":1}}],["normalize",{"0":{"223":1},"2":{"230":1}}],["now",{"2":{"113":1,"159":1,"164":1,"167":1}}],["nodeurl",{"2":{"179":1,"181":1,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1}}],["nodes",{"2":{"133":2,"138":1,"195":2,"200":1}}],["node",{"0":{"181":1},"2":{"111":2,"114":1,"178":1,"179":1,"181":3,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1}}],["nonce",{"2":{"54":1,"60":1,"130":1,"193":1}}],["number",{"0":{"140":1,"202":1},"2":{"108":1,"111":2,"112":1,"127":3,"151":2,"189":2,"190":3,"213":2}}],["n",{"2":{"26":1,"33":4,"49":3,"60":1,"111":1,"127":3,"128":3,"130":1,"131":1,"132":1,"151":5,"176":5,"186":1,"189":1,"190":3,"191":3,"193":1,"194":1,"213":5}}],["networkid",{"2":{"159":1,"162":1,"167":1,"176":1}}],["networkname",{"2":{"159":1,"161":1,"167":1,"176":1}}],["networks",{"2":{"152":2,"157":1,"168":1}}],["network",{"0":{"161":1,"162":1},"2":{"122":1,"158":2,"161":1,"162":1}}],["nethermindeth",{"2":{"17":1,"41":1,"64":1,"104":1,"110":1,"111":1,"127":1,"128":1,"130":1,"131":1,"132":1,"136":1,"155":1,"189":1,"190":1,"191":1,"193":1,"194":1,"198":1,"234":1}}],["next",{"0":{"113":1}}],["negate",{"2":{"82":1}}],["negation",{"0":{"71":1}}],["neg",{"2":{"71":1,"82":1}}],["newclient",{"2":{"179":1,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1}}],["newdevnet",{"2":{"159":1,"167":1,"176":1}}],["newdeploytransaction",{"2":{"55":1}}],["newtransaction",{"2":{"130":1,"193":1}}],["newprovider",{"2":{"111":1}}],["newpedersencurve",{"2":{"89":1,"94":1}}],["newecdsacurve",{"2":{"92":1,"94":1}}],["newstarkcurve",{"2":{"82":1,"86":1,"94":1}}],["newinvoketransaction",{"2":{"54":1,"60":1}}],["newaccount",{"2":{"21":1,"26":1}}],["new",{"2":{"21":1,"26":1,"101":1,"109":1,"111":1,"119":1,"122":3,"159":1,"167":1,"176":1,"179":1,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1}}],["name",{"0":{"161":1},"2":{"6":1,"13":1,"158":1,"161":2}}],["nil",{"2":{"6":5,"13":5,"21":1,"23":1,"26":2,"37":1,"57":1,"58":1,"59":1,"60":3,"111":2,"127":1,"128":1,"130":1,"131":1,"132":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"148":1,"149":1,"150":1,"151":3,"159":1,"167":3,"170":1,"171":1,"172":1,"176":4,"179":1,"186":2,"189":2,"190":2,"191":2,"193":2,"194":2,"202":1,"203":1,"204":1,"206":1,"207":1,"208":1,"210":1,"211":1,"212":1,"213":3,"230":2}}],["123",{"2":{"230":1,"251":9}}],["123456",{"2":{"112":1}}],["100",{"2":{"13":1}}],["1000000",{"2":{"159":1,"164":1,"167":1}}],["1000000000000000000",{"2":{"159":1,"165":1,"167":1}}],["1000000000000000",{"2":{"60":1,"130":1,"193":1}}],["1000",{"2":{"13":2}}],["18",{"2":{"13":1}}],["1",{"0":{"109":1},"2":{"6":3,"13":1,"18":1,"42":1,"65":1,"103":1,"107":1,"114":1,"116":1,"127":1,"137":1,"156":1,"159":1,"162":1,"167":1,"176":1,"184":1,"186":2,"190":1,"199":1,"235":1}}],["0xabc",{"2":{"130":1,"131":1,"151":1,"193":1,"194":1,"213":1}}],["0x1",{"2":{"60":2,"130":2,"193":2}}],["0x123",{"2":{"13":2,"26":1,"33":1,"49":1,"60":1,"128":1,"151":1,"159":1,"165":1,"167":1,"191":1,"213":1,"230":2}}],["0x789",{"2":{"60":1,"130":1,"131":1,"132":1,"151":1,"159":1,"166":1,"167":1,"193":1,"194":1,"213":1}}],["0x456",{"2":{"13":1,"26":1,"33":1,"49":1,"60":1,"130":1,"131":1,"132":1,"151":1,"159":1,"166":1,"167":1,"193":1,"194":1,"213":1}}],["0",{"2":{"6":3,"119":1}}],["twitter",{"2":{"123":1}}],["two",{"2":{"82":4,"87":1,"90":1,"93":1,"94":1}}],["timeout",{"0":{"183":1},"2":{"178":1,"179":1,"183":2,"186":1,"189":1}}],["timestamp",{"2":{"127":2,"159":1,"164":1,"167":1,"190":2}}],["time",{"2":{"119":1,"120":1,"122":1,"159":1,"164":1,"167":1,"179":1,"183":2,"184":1,"186":2,"189":2}}],["title",{"2":{"98":1,"99":1}}],["trading",{"2":{"120":1}}],["tracing",{"2":{"119":1}}],["transactions",{"0":{"53":1},"1":{"54":1,"55":1},"2":{"51":1,"52":3,"119":1,"122":1}}],["transaction",{"0":{"51":1,"52":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"128":1,"130":1,"143":1,"144":1,"145":1,"146":1,"191":1,"193":1,"205":1,"206":1,"207":1,"208":1},"1":{"52":1,"53":1,"54":1,"55":1,"56":1,"57":2,"58":2,"59":2,"60":1,"144":1,"145":1,"146":1,"206":1,"207":1,"208":1},"2":{"23":1,"39":1,"40":1,"51":1,"52":1,"60":5,"119":3,"122":1,"128":4,"130":3,"151":3,"191":4,"193":3,"213":3}}],["transfer",{"2":{"6":2,"13":2}}],["troubleshooting",{"0":{"114":1}}],["telegram",{"2":{"123":1}}],["technical",{"2":{"100":1}}],["testnet",{"2":{"122":1}}],["testing",{"2":{"120":1}}],["tests",{"0":{"105":1},"2":{"101":1}}],["test",{"2":{"98":1,"105":1}}],["tutorials",{"2":{"100":1}}],["txhash",{"2":{"58":1,"59":1,"60":2,"130":2,"144":1,"145":1,"146":1,"193":2,"206":1,"207":1,"208":1}}],["tx",{"2":{"54":1,"55":1,"57":1,"60":2,"128":4,"130":2,"144":1,"146":1,"151":3,"191":4,"193":2,"206":1,"208":1,"213":3}}],["typing",{"2":{"119":1}}],["typically",{"2":{"50":2}}],["typed",{"2":{"122":2}}],["type",{"0":{"236":1,"237":1,"242":1,"246":1},"1":{"237":1,"238":2,"239":2,"240":2,"241":2,"242":1,"243":2,"244":2,"245":2,"246":1,"247":2,"248":2,"249":2,"250":2,"251":1},"2":{"119":1,"128":2,"151":2,"191":2,"213":2,"232":1,"233":1,"236":1}}],["types",{"0":{"44":1,"52":1,"83":1,"84":1},"1":{"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1},"2":{"44":1,"52":1,"62":1,"63":1,"83":2,"84":1,"236":1}}],["typos",{"2":{"100":1}}],["that",{"2":{"108":1,"113":1,"114":1,"118":1,"120":1}}],["throughput",{"2":{"119":1}}],["through",{"2":{"106":1,"119":1}}],["this",{"2":{"14":1,"18":1,"38":1,"42":1,"61":1,"65":1,"95":1,"106":1,"115":1,"133":1,"137":1,"152":1,"156":1,"195":1,"199":1,"231":1,"235":1}}],["they",{"2":{"101":1}}],["there",{"2":{"97":1}}],["the",{"0":{"104":1,"111":1,"112":1,"117":1},"2":{"0":1,"7":1,"14":1,"15":1,"17":1,"18":1,"19":1,"20":1,"25":1,"26":1,"27":1,"38":1,"39":1,"41":1,"42":1,"43":1,"44":1,"50":1,"51":1,"52":1,"60":2,"61":1,"62":1,"64":1,"65":1,"66":1,"82":3,"83":1,"84":1,"85":4,"87":1,"88":3,"90":1,"91":3,"93":1,"94":4,"95":1,"98":1,"99":1,"101":2,"104":2,"105":1,"108":1,"111":3,"112":1,"114":3,"115":1,"117":1,"118":1,"122":2,"123":1,"124":1,"125":2,"130":1,"133":1,"134":1,"136":1,"137":1,"138":1,"151":1,"152":1,"153":1,"155":1,"156":1,"157":1,"158":2,"161":3,"162":3,"163":3,"164":3,"165":3,"166":3,"167":2,"168":1,"176":6,"177":1,"178":2,"181":3,"182":3,"183":2,"184":1,"185":1,"186":1,"187":2,"189":1,"193":1,"195":1,"196":1,"198":1,"199":1,"200":1,"213":1,"214":1,"231":1,"232":1,"234":1,"235":1,"236":1}}],["tofelt",{"2":{"240":1,"251":1}}],["tofieldelement",{"2":{"36":1,"219":1,"230":1}}],["tobigint",{"2":{"238":1,"251":1}}],["tools",{"2":{"120":2}}],["to",{"0":{"95":1,"97":1,"219":1,"238":1,"240":1},"1":{"96":1,"97":1,"98":2,"99":2,"100":2,"101":2,"102":1,"103":1,"104":1,"105":1},"2":{"6":1,"13":1,"17":1,"21":1,"35":2,"36":1,"41":1,"64":1,"95":1,"96":1,"97":2,"101":2,"105":1,"106":3,"108":1,"110":1,"111":1,"112":1,"113":1,"118":3,"119":1,"121":1,"122":3,"123":1,"124":1,"125":1,"133":1,"136":1,"138":1,"155":1,"159":1,"179":1,"181":2,"182":2,"183":1,"184":1,"185":1,"187":1,"198":1,"230":3,"234":1,"251":2}}],["advanced",{"0":{"129":1,"192":1},"1":{"130":1,"131":1,"132":1,"193":1,"194":1}}],["addbigints",{"2":{"247":1,"251":1}}],["add",{"0":{"247":1},"2":{"68":1,"82":3,"87":2,"90":2,"93":2,"94":2,"100":1,"101":1,"104":2,"110":1,"122":2,"251":1}}],["addition",{"0":{"68":1,"73":1}}],["address",{"0":{"29":1,"31":1,"221":1,"222":1,"223":1,"228":1},"1":{"222":1,"223":1},"2":{"20":1,"21":1,"25":2,"26":3,"29":1,"31":1,"33":8,"37":1,"60":1,"130":1,"131":1,"132":1,"151":1,"159":2,"165":1,"166":1,"167":2,"176":4,"193":1,"194":1,"213":1,"222":1,"223":1,"230":3}}],["automated",{"2":{"120":2}}],["active",{"2":{"119":1}}],["accessible",{"2":{"114":1}}],["accounts",{"0":{"165":1,"174":1},"2":{"19":1,"27":1,"38":2,"158":1,"165":2,"174":1,"176":3}}],["account",{"0":{"19":1,"20":1,"21":1,"22":1,"27":1,"38":1},"1":{"20":1,"21":1,"22":1,"23":2,"24":2,"25":2,"26":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"39":1,"40":1,"41":1,"42":1},"2":{"19":1,"20":2,"21":3,"23":1,"24":1,"25":2,"26":6,"27":1,"29":1,"30":1,"31":1,"32":1,"33":4,"35":2,"36":2,"37":2,"38":1,"39":3,"40":2,"41":2,"46":1,"47":1,"48":1,"49":3,"54":1,"55":1,"57":1,"58":1,"59":1,"60":4,"122":2,"176":5}}],["api",{"2":{"119":1}}],["app",{"2":{"109":3}}],["approachable",{"2":{"96":1}}],["applications",{"0":{"122":1},"2":{"119":2,"120":2,"122":1}}],["application",{"0":{"108":1,"111":1,"112":1},"1":{"109":1,"110":1,"111":1,"112":1},"2":{"14":1,"108":1,"112":1,"113":1}}],["amazing",{"2":{"101":3}}],["amount",{"2":{"6":1,"13":1}}],["always",{"2":{"100":1}}],["also",{"2":{"99":1}}],["as",{"2":{"50":3,"98":2,"104":1}}],["available",{"0":{"16":1,"40":1,"63":1,"135":1,"154":1,"197":1,"233":1},"2":{"113":1}}],["are",{"2":{"50":2,"85":1,"88":1,"91":1,"97":1,"99":1,"100":1,"165":1,"166":1}}],["args",{"2":{"8":1,"9":1,"10":1}}],["array",{"0":{"5":1,"12":1},"2":{"6":1,"13":1}}],["analytics",{"2":{"120":1}}],["analysis",{"2":{"120":1}}],["any",{"2":{"99":1,"114":1}}],["and",{"2":{"14":2,"19":1,"27":1,"38":2,"49":1,"50":1,"51":1,"61":1,"85":1,"88":1,"91":1,"96":2,"98":1,"99":1,"106":1,"108":1,"109":1,"114":1,"118":2,"119":5,"120":2,"121":1,"122":1,"133":1,"152":2,"195":2,"231":2}}],["an",{"0":{"21":1,"92":1},"2":{"6":2,"13":2,"20":1,"33":1,"60":1,"94":1,"98":1,"99":1,"104":1}}],["a",{"0":{"86":1,"89":1,"127":1,"128":1,"130":1,"131":1,"159":1,"179":1,"189":1,"190":1,"191":1,"193":1,"194":1},"2":{"6":3,"13":3,"21":1,"23":1,"24":1,"26":2,"50":1,"73":1,"74":1,"75":1,"76":1,"82":12,"85":1,"87":2,"88":1,"90":2,"91":1,"93":2,"94":4,"98":3,"99":2,"101":2,"106":1,"108":1,"109":2,"111":1,"113":1,"115":1,"118":2,"127":1,"128":1,"130":1,"131":1,"151":2,"159":1,"167":1,"176":1,"179":1,"183":1,"186":1,"189":1,"190":2,"191":2,"193":2,"194":2,"213":2,"247":1,"248":1,"249":1,"250":1}}],["abi",{"0":{"0":1,"7":1,"14":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"16":1,"17":1,"18":1},"2":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":5,"14":2,"15":4,"16":2,"17":2}}],["efficiency",{"2":{"119":1}}],["efficient",{"2":{"118":1}}],["easy",{"2":{"118":1,"119":1}}],["each",{"2":{"50":1}}],["established",{"2":{"111":1,"112":1}}],["everything",{"2":{"105":1}}],["events",{"2":{"119":1}}],["eventname",{"2":{"3":1,"10":1}}],["event",{"0":{"3":1,"10":1},"2":{"6":1,"13":1,"119":1}}],["explore",{"2":{"113":2}}],["explanation",{"2":{"99":1}}],["expand",{"2":{"100":1}}],["existing",{"2":{"100":1,"119":1,"120":1}}],["examples",{"0":{"125":1,"126":1,"129":1,"187":1,"188":1,"192":1},"1":{"126":1,"127":2,"128":2,"129":1,"130":2,"131":2,"132":2,"188":1,"189":2,"190":2,"191":2,"192":1,"193":2,"194":2},"2":{"99":1,"100":1,"113":2,"119":1,"122":1,"125":2,"134":1,"135":1,"187":2,"196":1,"197":1}}],["example",{"0":{"6":1,"13":1,"26":1,"33":1,"49":1,"60":1,"82":1,"94":1,"122":1,"151":1,"167":1,"176":1,"186":1,"213":1,"230":1,"251":1},"2":{"49":1,"106":1,"122":1}}],["equation",{"2":{"85":1,"88":1,"91":1}}],["encounter",{"2":{"114":1}}],["encodehex",{"2":{"35":1,"216":1,"230":1}}],["encodearray",{"2":{"12":1,"13":1}}],["encodestruct",{"2":{"11":1,"13":1}}],["encodeevent",{"2":{"10":1,"13":1}}],["encodeconstructor",{"2":{"9":1,"13":1}}],["encodefunctioncall",{"2":{"8":1,"13":1}}],["encoded",{"2":{"8":1,"9":1,"10":1,"11":1,"12":1,"13":5}}],["encodeddata",{"2":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":5}}],["encode",{"0":{"8":1,"9":1,"10":1,"11":1,"12":1,"216":1},"2":{"13":5,"35":1,"230":1}}],["encoding",{"0":{"7":1,"35":1,"215":1},"1":{"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"216":1,"217":1},"2":{"7":2,"14":1,"15":1,"16":1}}],["environment",{"0":{"104":1}}],["ensure",{"2":{"101":1,"105":1}}],["enhancement",{"2":{"99":1}}],["enhancements",{"0":{"99":1},"2":{"97":1}}],["entry",{"2":{"60":1,"130":1,"131":1,"151":1,"193":1,"194":1,"213":1}}],["entrypointselector",{"2":{"54":1,"150":1,"212":1}}],["ecdsacurve",{"2":{"94":2}}],["ecdsa",{"0":{"46":1,"91":1,"92":1,"93":1},"1":{"92":1,"93":1},"2":{"44":1,"49":2,"50":1,"84":1,"91":2,"94":2}}],["elliptic",{"2":{"61":1}}],["else",{"2":{"37":1,"230":1}}],["element",{"0":{"36":1,"218":1,"219":1,"220":1},"1":{"219":1,"220":1},"2":{"36":2,"50":1,"82":1,"230":2}}],["elements",{"2":{"6":1,"12":1,"50":1,"82":3}}],["elementtype",{"2":{"5":1,"12":1}}],["errors",{"2":{"37":1,"230":1}}],["error",{"0":{"37":1,"227":1,"228":1,"229":1},"1":{"228":1,"229":1},"2":{"21":1,"23":1,"37":2,"57":1,"58":1,"59":1,"140":1,"141":1,"142":1,"144":1,"145":1,"146":1,"148":1,"149":1,"150":1,"159":1,"170":1,"171":1,"172":1,"179":1,"202":1,"203":1,"204":1,"206":1,"207":1,"208":1,"210":1,"211":1,"212":1,"230":2}}],["err",{"2":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":15,"8":1,"9":1,"10":1,"11":1,"12":1,"13":15,"21":2,"23":2,"26":6,"35":1,"37":3,"57":2,"58":2,"59":2,"60":9,"111":6,"127":3,"128":3,"130":3,"131":3,"132":3,"140":2,"141":2,"142":2,"144":2,"145":2,"146":2,"148":2,"149":2,"150":2,"151":9,"159":2,"167":9,"170":2,"171":2,"172":2,"176":12,"179":2,"186":6,"189":6,"190":6,"191":6,"193":6,"194":6,"202":2,"203":2,"204":2,"206":2,"207":2,"208":2,"210":2,"211":2,"212":2,"213":9,"217":1,"228":1,"229":1,"230":6}}],["=",{"2":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":21,"8":1,"9":1,"10":1,"11":1,"12":1,"13":10,"21":2,"23":2,"24":1,"25":1,"26":10,"29":1,"30":1,"31":1,"32":1,"33":7,"35":2,"36":2,"37":1,"46":1,"47":1,"48":1,"49":6,"54":1,"55":1,"57":2,"58":2,"59":2,"60":7,"68":1,"69":1,"70":1,"71":1,"73":1,"74":1,"75":1,"76":1,"78":1,"79":1,"80":1,"81":1,"82":13,"85":1,"86":1,"87":3,"88":1,"89":1,"90":3,"91":1,"92":1,"93":3,"94":6,"111":4,"127":2,"128":2,"130":3,"131":2,"132":2,"140":2,"141":2,"142":2,"144":2,"145":2,"146":2,"148":2,"149":2,"150":2,"151":6,"159":3,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":7,"170":2,"171":2,"172":2,"173":1,"174":1,"175":1,"176":13,"179":3,"181":1,"182":1,"183":1,"184":1,"185":1,"186":5,"189":5,"190":4,"191":4,"193":5,"194":4,"202":2,"203":2,"204":2,"206":2,"207":2,"208":2,"210":2,"211":2,"212":2,"213":6,"216":1,"217":1,"219":1,"220":1,"222":1,"223":1,"225":1,"226":1,"228":1,"229":1,"230":10,"238":1,"239":1,"240":1,"241":1,"243":1,"244":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":11}}],["cd",{"2":{"104":1,"109":1}}],["clientconfig",{"2":{"178":1,"179":1,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1}}],["clients",{"2":{"177":1}}],["client",{"0":{"177":1,"178":1,"179":1,"187":1,"189":1,"195":1,"200":1},"1":{"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"196":1,"197":1,"198":1,"199":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1},"2":{"111":3,"112":1,"113":3,"177":1,"178":1,"179":4,"184":1,"185":1,"186":8,"187":2,"189":6,"190":6,"191":6,"193":7,"194":6,"195":1,"196":4,"197":3,"198":2,"200":1,"202":1,"203":1,"204":1,"206":1,"207":1,"208":1,"210":1,"211":1,"212":1,"213":3}}],["clone",{"2":{"104":2}}],["clarify",{"2":{"100":1}}],["clear",{"2":{"98":1,"99":1}}],["capabilities",{"2":{"120":1}}],["can",{"2":{"100":1,"113":1,"117":1}}],["cases",{"0":{"120":1},"2":{"99":1}}],["case",{"2":{"98":1}}],["callcontract",{"2":{"131":1,"150":1,"151":1,"194":1,"212":1,"213":1}}],["calling",{"0":{"131":1,"194":1}}],["calls",{"2":{"122":1,"133":1,"138":1}}],["calldata",{"2":{"54":1,"60":1,"130":1,"131":1,"150":1,"151":1,"193":1,"194":1,"212":1,"213":1}}],["call",{"0":{"1":1,"8":1,"150":1,"212":1},"2":{"6":1,"13":1,"131":2,"151":2,"194":2,"213":2}}],["curve",{"0":{"66":1,"77":1,"78":1,"79":1,"80":2,"81":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1},"1":{"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":2,"79":2,"80":2,"81":2,"82":1,"84":1,"85":1,"86":2,"87":2,"88":1,"89":2,"90":2,"91":1,"92":2,"93":2,"94":1},"2":{"61":1,"62":3,"63":2,"66":1,"68":1,"69":1,"70":1,"71":1,"73":1,"74":1,"75":1,"76":1,"78":1,"79":1,"80":1,"81":1,"82":17,"83":1,"84":4,"85":3,"86":1,"87":3,"88":2,"89":1,"90":3,"91":2,"92":1,"93":3,"94":6}}],["curves",{"0":{"61":1},"1":{"62":1,"63":1,"64":1,"65":1},"2":{"61":2,"62":1,"64":2,"66":1,"82":1,"83":1,"86":1,"89":1,"92":1,"94":3}}],["changes",{"2":{"101":2}}],["chainid",{"2":{"21":1,"26":2,"32":1,"33":2,"159":1,"163":1,"167":1,"176":1,"179":1,"182":1,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1,"225":1,"226":1,"230":1}}],["chain",{"0":{"32":1,"163":1,"182":1,"224":1,"225":1,"226":1},"1":{"225":1,"226":1},"2":{"20":1,"26":1,"33":2,"158":1,"163":2,"178":1,"182":2,"230":2}}],["checkout",{"2":{"101":1}}],["check",{"2":{"37":1,"82":2,"114":2,"121":1,"124":1,"230":1}}],["create",{"0":{"111":1},"2":{"21":1,"26":1,"60":1,"82":1,"94":3,"98":1,"99":1,"101":1,"108":1,"109":1,"111":1,"130":1,"159":1,"167":1,"176":1,"179":1,"186":1,"189":1,"190":1,"191":1,"193":2,"194":1}}],["creating",{"0":{"21":1,"53":1,"86":1,"89":1,"92":1,"108":1,"159":1,"179":1,"189":1},"1":{"54":1,"55":1,"109":1,"110":1,"111":1,"112":1},"2":{"19":1,"51":1,"120":1}}],["coverage",{"2":{"119":1}}],["correct",{"2":{"114":1}}],["correctly",{"2":{"105":1}}],["core",{"2":{"19":1}}],["comprehensive",{"2":{"119":1}}],["complete",{"2":{"119":1}}],["components",{"2":{"14":1,"38":1,"61":1,"133":1,"152":1,"195":1,"231":1}}],["command",{"2":{"117":1}}],["commit",{"2":{"101":2}}],["community",{"0":{"123":1},"2":{"95":1,"96":1,"119":2,"123":1,"124":1}}],["common",{"0":{"34":1,"214":1},"1":{"35":1,"36":1,"37":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1},"2":{"214":2,"231":2,"232":1,"233":1}}],["com",{"2":{"17":1,"41":1,"64":1,"104":2,"110":1,"111":1,"127":1,"128":1,"130":1,"131":1,"132":1,"136":1,"155":1,"189":1,"190":1,"191":1,"193":1,"194":1,"198":1,"234":1}}],["code",{"0":{"96":1,"148":1,"210":1},"2":{"17":1,"41":1,"64":1,"96":1,"98":1,"111":1,"136":1,"148":1,"155":1,"159":1,"166":1,"167":1,"176":2,"198":1,"210":1,"234":1}}],["config",{"2":{"159":2,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":2,"179":2,"181":1,"182":1,"183":1,"184":1,"185":1,"186":2,"189":2}}],["configuring",{"2":{"177":1}}],["configure",{"2":{"113":1,"184":1,"185":1}}],["configuration",{"0":{"158":1,"160":1,"177":1,"178":1,"180":1,"184":1,"185":1},"1":{"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"178":1,"179":1,"180":1,"181":2,"182":2,"183":2,"184":2,"185":2,"186":1},"2":{"113":1,"158":1,"177":1,"178":3,"184":1,"185":1,"196":1,"197":1}}],["confirmed",{"2":{"60":1}}],["confirmation",{"2":{"60":1}}],["connection",{"2":{"111":2,"112":1}}],["connects",{"2":{"108":1}}],["connect",{"2":{"106":1,"181":1,"182":1}}],["conduct",{"0":{"96":1},"2":{"96":1}}],["constants",{"2":{"85":1,"88":1,"91":1}}],["constructorcalldata",{"2":{"55":1}}],["constructor",{"0":{"2":1,"9":1},"2":{"6":1,"13":1}}],["concatenated",{"2":{"50":1}}],["convert",{"2":{"36":2,"230":2,"251":4}}],["conversion",{"0":{"36":1,"218":1,"237":1},"1":{"219":1,"220":1,"238":1,"239":1,"240":1,"241":1},"2":{"232":1}}],["context",{"2":{"111":2}}],["contribute",{"0":{"97":1},"1":{"98":1,"99":1,"100":1,"101":1},"2":{"97":1}}],["contributions",{"2":{"95":1,"124":1}}],["contributing",{"0":{"95":1,"124":1},"1":{"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1},"2":{"95":1,"124":1}}],["contracts",{"0":{"166":1,"175":1},"2":{"122":3,"158":1,"166":2,"175":1,"176":3}}],["contractclasshash",{"2":{"55":1}}],["contractaddress",{"2":{"54":1,"148":1,"149":1,"150":1,"210":1,"211":1,"212":1}}],["contract",{"0":{"131":1,"132":1,"147":1,"148":1,"149":1,"150":1,"194":1,"209":1,"210":1,"211":1,"212":1},"1":{"148":1,"149":1,"150":1,"210":1,"211":1,"212":1},"2":{"0":1,"7":1,"14":1,"60":1,"119":2,"122":4,"130":1,"131":2,"132":2,"151":2,"176":5,"193":1,"194":2,"213":2}}],["contains",{"2":{"14":1,"20":1,"38":1,"61":1,"133":1,"152":1,"158":1,"178":1,"195":1,"231":1}}],["d",{"2":{"111":1,"127":2,"151":1,"189":1,"190":2,"213":1}}],["divbigints",{"2":{"250":1,"251":1}}],["div",{"0":{"250":1},"2":{"251":1}}],["divide",{"2":{"82":1}}],["division",{"0":{"75":1}}],["directory",{"2":{"109":1}}],["different",{"2":{"83":1}}],["documented",{"2":{"118":1,"119":1}}],["documentation",{"0":{"100":1},"2":{"18":1,"42":1,"65":1,"97":1,"100":2,"114":1,"119":1,"121":1,"137":1,"156":1,"199":1,"235":1}}],["download",{"2":{"104":1}}],["double",{"2":{"70":1,"82":2}}],["doubling",{"0":{"70":1}}],["dev",{"2":{"159":1,"163":1,"167":1,"176":1}}],["devnetconfig",{"2":{"158":1,"159":1,"167":1,"176":1}}],["devnet",{"0":{"152":1,"157":1,"158":1,"159":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1},"1":{"153":1,"154":1,"155":1,"156":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"169":1,"170":2,"171":2,"172":2,"173":2,"174":2,"175":2,"176":1},"2":{"152":1,"153":4,"154":2,"155":2,"157":1,"158":1,"159":7,"161":1,"162":1,"164":2,"165":2,"166":2,"167":11,"168":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":17}}],["developing",{"2":{"120":2}}],["developments",{"2":{"123":1}}],["development",{"0":{"102":1,"104":1},"1":{"103":1,"104":1,"105":1},"2":{"119":1,"152":2,"157":1,"168":1}}],["defi",{"2":{"120":1}}],["defined",{"2":{"85":2,"88":2,"91":2}}],["designed",{"2":{"118":1}}],["description",{"2":{"98":1,"99":1}}],["demonstrate",{"2":{"106":1}}],["demonstrating",{"2":{"98":1}}],["dependencies",{"0":{"110":1},"2":{"104":1}}],["deployer",{"2":{"122":1}}],["deployment",{"2":{"120":1,"122":2}}],["deploy",{"0":{"55":1},"2":{"52":1,"122":2}}],["details",{"2":{"100":1}}],["detailed",{"2":{"99":1,"114":1}}],["declaration",{"2":{"122":1}}],["declare",{"2":{"52":1}}],["decimals",{"2":{"6":1,"13":1}}],["decodehex",{"2":{"35":1,"217":1,"230":1}}],["decodearray",{"2":{"5":1,"6":1}}],["decodestruct",{"2":{"4":1,"6":1}}],["decodeevent",{"2":{"3":1,"6":1}}],["decodeconstructor",{"2":{"2":1,"6":1}}],["decodefunctioncall",{"2":{"1":1,"6":1}}],["decoded",{"2":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":16}}],["decode",{"0":{"1":1,"2":1,"3":1,"4":1,"5":1,"217":1},"2":{"6":5,"35":1,"230":1}}],["decoding",{"0":{"0":1,"35":1,"215":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"216":1,"217":1},"2":{"0":2,"14":1,"15":1,"16":1}}],["data",{"2":{"0":1,"7":1,"14":1,"122":2}}],["spec",{"2":{"119":1}}],["specific",{"2":{"37":1,"230":1}}],["should",{"2":{"112":1}}],["simulation",{"2":{"119":1}}],["similar",{"2":{"112":1}}],["simple",{"2":{"106":1,"108":1,"118":1,"119":1,"122":1}}],["signtransaction",{"2":{"57":1,"60":1}}],["signedtx",{"2":{"57":1,"58":1,"60":2}}],["signing",{"2":{"51":1}}],["signatures",{"2":{"43":1,"44":3,"50":1,"91":1}}],["signature",{"0":{"43":1,"44":1,"46":1,"47":1,"48":1,"50":1,"229":1},"1":{"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1},"2":{"23":1,"24":2,"26":4,"37":1,"39":1,"40":1,"43":1,"44":1,"46":1,"47":1,"48":1,"49":12,"50":1,"230":1}}],["sign",{"0":{"23":1,"57":1},"2":{"23":2,"26":2,"60":1,"122":1}}],["some",{"2":{"101":1}}],["safer",{"2":{"119":1}}],["safety",{"2":{"119":1}}],["sample",{"2":{"98":1}}],["salt",{"2":{"55":1}}],["scalar",{"2":{"69":1,"82":2,"87":2,"90":2,"93":2,"94":2}}],["second",{"2":{"179":1,"183":1,"184":1,"186":2,"189":1}}],["sent",{"2":{"130":1,"193":1}}],["sendtransaction",{"2":{"58":1,"60":1,"130":1,"146":1,"193":1,"208":1}}],["send",{"0":{"58":1,"146":1,"208":1},"2":{"60":1,"130":1,"193":1}}],["sending",{"0":{"130":1,"193":1},"2":{"51":1}}],["several",{"2":{"122":1}}],["services",{"2":{"120":1}}],["see",{"2":{"112":1,"113":1}}],["set",{"0":{"109":1},"2":{"115":1}}],["setting",{"0":{"104":1},"2":{"157":1}}],["setup",{"0":{"102":1,"157":1},"1":{"103":1,"104":1,"105":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1},"2":{"114":1,"153":1,"154":1,"157":1}}],["selector",{"2":{"60":1,"130":1,"131":1,"151":1,"193":1,"194":1,"213":1}}],["support",{"2":{"119":2}}],["supports",{"2":{"44":1,"52":1,"84":1}}],["subbigints",{"2":{"248":1,"251":1}}],["sub",{"0":{"248":1},"2":{"251":1}}],["subscribe",{"2":{"122":1}}],["subscriptions",{"2":{"119":2}}],["submitting",{"2":{"97":1}}],["submodules",{"0":{"16":1,"40":1,"63":1,"135":1,"154":1,"197":1,"233":1}}],["submodule",{"2":{"0":1,"7":1,"19":1,"27":1,"43":1,"51":1,"66":1,"83":1,"125":1,"138":1,"157":1,"168":1,"177":1,"187":1,"200":1,"214":1,"236":1}}],["sure",{"2":{"107":1,"114":1}}],["suite",{"2":{"105":1}}],["suggestions",{"2":{"99":1}}],["suggesting",{"0":{"99":1},"2":{"97":1}}],["sn",{"2":{"26":1,"33":1,"159":1,"163":1,"167":1,"176":1,"179":1,"182":1,"186":1,"189":1,"190":1,"191":1,"193":1,"194":1,"230":1}}],["s",{"2":{"25":1,"33":2,"50":5,"60":1,"108":1,"119":1,"127":1,"128":3,"130":1,"131":1,"132":1,"151":4,"176":5,"186":1,"190":1,"191":3,"193":1,"194":1,"213":4}}],["symbol",{"2":{"6":1,"13":1}}],["stop",{"0":{"171":1},"2":{"167":2,"171":1,"176":2}}],["storage",{"0":{"132":1,"149":1,"211":1},"2":{"119":1,"132":4,"149":1,"211":1}}],["steps",{"0":{"113":1}}],["step",{"0":{"109":1,"110":1,"111":1,"112":1}}],["stay",{"2":{"123":1}}],["state",{"2":{"119":1}}],["status",{"0":{"173":1},"2":{"60":2,"119":1,"128":2,"151":2,"173":1,"176":4,"191":2,"213":2}}],["start",{"0":{"170":1},"2":{"106":1,"121":1,"167":2,"170":1,"176":2}}],["started",{"0":{"17":1,"41":1,"64":1,"106":1,"121":1,"136":1,"155":1,"198":1,"234":1},"1":{"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"122":1},"2":{"95":1,"121":1,"122":1}}],["starkcurve",{"2":{"94":2}}],["stark",{"0":{"48":1,"85":1,"86":1,"87":1},"1":{"86":1,"87":1},"2":{"44":1,"49":2,"50":1,"84":1,"85":1,"94":2}}],["starknet",{"0":{"95":1,"108":1,"118":1},"1":{"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"109":1,"110":1,"111":1,"112":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1},"2":{"0":1,"7":1,"14":2,"17":1,"18":1,"19":1,"20":1,"26":2,"27":1,"38":2,"41":1,"42":1,"43":1,"49":1,"50":1,"51":1,"61":1,"64":1,"65":1,"66":1,"83":1,"85":1,"88":1,"91":1,"95":1,"97":1,"104":3,"106":2,"107":1,"108":1,"109":3,"110":2,"111":3,"113":3,"114":2,"115":3,"117":1,"118":2,"119":2,"120":4,"121":1,"125":1,"127":1,"128":1,"130":1,"131":1,"132":1,"133":2,"136":1,"137":1,"138":1,"152":2,"155":1,"156":1,"157":1,"168":1,"177":1,"181":1,"182":1,"187":1,"189":1,"190":1,"191":1,"193":1,"194":1,"195":2,"198":1,"199":1,"200":1,"214":1,"230":1,"231":1,"234":1,"235":1,"236":1}}],["strong",{"2":{"119":1}}],["string",{"2":{"6":11,"13":1,"50":1,"60":1,"130":1,"131":1,"151":1,"193":1,"194":1,"213":1}}],["structure",{"0":{"20":1}}],["structname",{"2":{"4":1,"11":1}}],["struct",{"0":{"4":1,"11":1},"2":{"6":1,"13":1,"20":1,"158":1,"178":1}}],["full",{"2":{"119":1}}],["func",{"2":{"111":1,"127":1,"128":1,"130":1,"131":1,"132":1,"189":1,"190":1,"191":1,"193":1,"194":1}}],["functions",{"0":{"28":1},"1":{"29":1,"30":1,"31":1,"32":1},"2":{"27":1,"231":1}}],["functionname",{"2":{"1":1,"8":1}}],["function",{"0":{"1":1,"8":1},"2":{"6":1,"13":1}}],["functionality",{"2":{"0":1,"7":1,"14":1,"19":1,"38":1,"43":1,"51":1,"61":1,"66":1,"83":1,"99":1,"120":1,"133":1,"138":1,"152":1,"157":1,"168":1,"177":1,"195":1,"200":1,"214":1,"236":1}}],["familiarity",{"2":{"116":1}}],["fatal",{"2":{"6":5,"13":5,"26":2,"60":3,"111":2,"127":1,"128":1,"130":1,"131":1,"132":1,"151":3,"167":3,"176":4,"186":2,"189":2,"190":2,"191":2,"193":2,"194":2,"213":3,"230":1}}],["file",{"2":{"111":1}}],["first",{"0":{"108":1},"1":{"109":1,"110":1,"111":1,"112":1},"2":{"164":1}}],["fix",{"2":{"100":1}}],["find",{"2":{"98":1}}],["fieldinv",{"2":{"76":1,"82":1}}],["fielddiv",{"2":{"75":1,"82":1}}],["fieldmul",{"2":{"74":1,"82":1}}],["fieldadd",{"2":{"73":1,"82":1}}],["field",{"0":{"36":1,"72":1,"73":1,"74":1,"75":1,"76":1,"218":1,"219":1,"220":1},"1":{"73":1,"74":1,"75":1,"76":1,"219":1,"220":1},"2":{"36":2,"50":1,"82":4,"85":1,"88":1,"91":1,"230":2}}],["fields",{"2":{"11":1}}],["following",{"2":{"111":1}}],["follow",{"2":{"96":1,"123":1}}],["fork",{"2":{"101":1,"104":1}}],["format",{"0":{"50":1},"2":{"185":1,"186":1}}],["for",{"0":{"59":1},"2":{"0":1,"7":1,"14":2,"19":1,"27":1,"37":1,"38":2,"43":1,"51":1,"60":1,"61":2,"66":1,"83":1,"88":1,"91":1,"109":1,"113":1,"114":1,"115":1,"119":3,"120":2,"124":1,"133":2,"138":1,"152":2,"157":1,"168":1,"176":2,"177":1,"183":1,"195":2,"200":1,"214":1,"230":1,"231":2,"236":1}}],["features",{"0":{"119":1},"2":{"113":1}}],["feature",{"2":{"101":5}}],["fee",{"2":{"60":1,"130":1,"193":1}}],["fe",{"2":{"36":2,"219":1,"220":1,"230":2}}],["felt",{"0":{"240":1,"241":1,"244":1},"2":{"6":1,"13":1,"240":1,"241":1,"251":5}}],["fmt",{"2":{"26":1,"33":4,"49":3,"60":1,"111":3,"127":4,"128":4,"130":2,"131":2,"132":2,"151":5,"176":5,"186":1,"189":2,"190":4,"191":4,"193":2,"194":2,"213":5}}],["fromfelt",{"2":{"241":1,"251":1}}],["fromfieldelement",{"2":{"36":1,"220":1,"230":1}}],["frombigint",{"2":{"239":1,"251":1}}],["from",{"0":{"220":1,"239":1,"241":1},"2":{"6":1,"13":1,"33":2,"36":1,"95":1,"124":1,"230":1,"251":2}}]],"serializationVersion":2}
